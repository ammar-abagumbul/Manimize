{
  "doc_id": "449814f8755d41bb6ff449ecbf496b62",
  "url": "https://docs.manim.community/en/latest/reference/manim.mobject.geometry.arc.ArcPolygonFromArcs.html",
  "title": "ArcPolygonFromArcs - Manim Community v0.19.0",
  "content": "ArcPolygonFromArcs[¶](#arcpolygonfromarcs \"Link to this heading\")\n=================================================================\nQualified name: `manim.mobject.geometry.arc.ArcPolygonFromArcs`\n*class* ArcPolygonFromArcs(*\\*arcs*, *\\*\\*kwargs*)[\\[source]](../_modules/manim/mobject/geometry/arc.html#ArcPolygonFromArcs)[¶](#manim.mobject.geometry.arc.ArcPolygonFromArcs \"Link to this definition\")\nBases: [`VMobject`](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\")\nA generalized polygon allowing for points to be connected with arcs.\nThis version takes in pre\\-defined arcs to generate the arcpolygon and introduces\nlittle new syntax. However unlike `Polygon` it can’t be created with points\ndirectly.\nFor proper appearance the passed arcs should connect seamlessly:\n`[a,b][b,c][c,a]`\nIf there are any gaps between the arcs, those will be filled in\nwith straight lines, which can be used deliberately for any straight\nsections. Arcs can also be passed as straight lines such as an arc\ninitialized with `angle=0`.\nParameters:\n* **arcs** ([*Arc*](manim.mobject.geometry.arc.Arc.html#manim.mobject.geometry.arc.Arc \"manim.mobject.geometry.arc.Arc\") *\\|* [*ArcBetweenPoints*](manim.mobject.geometry.arc.ArcBetweenPoints.html#manim.mobject.geometry.arc.ArcBetweenPoints \"manim.mobject.geometry.arc.ArcBetweenPoints\")) – These are the arcs from which the arcpolygon is assembled.\n* **kwargs** (*Any*) – Keyword arguments that are passed to the constructor of\n[`VMobject`](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\"). Affects how the ArcPolygon itself is drawn,\nbut doesn’t affect passed arcs.\narcs[¶](#manim.mobject.geometry.arc.ArcPolygonFromArcs.arcs \"Link to this definition\")\nThe arcs used to initialize the ArcPolygonFromArcs:\n```\n>>> from manim import ArcPolygonFromArcs, Arc, ArcBetweenPoints\n>>> ap = ArcPolygonFromArcs(Arc(), ArcBetweenPoints([1,0,0], [0,1,0]), Arc())\n>>> ap.arcs\n[Arc, ArcBetweenPoints, Arc]\n```\nTip\nTwo instances of [`ArcPolygon`](manim.mobject.geometry.arc.ArcPolygon.html#manim.mobject.geometry.arc.ArcPolygon \"manim.mobject.geometry.arc.ArcPolygon\") can be transformed properly into\none another as well. Be advised that any arc initialized with `angle=0`\nwill actually be a straight line, so if a straight section should seamlessly\ntransform into an arced section or vice versa, initialize the straight\nsection with a negligible angle instead (such as `angle=0.0001`).\nNote\nThere is an alternative version ([`ArcPolygon`](manim.mobject.geometry.arc.ArcPolygon.html#manim.mobject.geometry.arc.ArcPolygon \"manim.mobject.geometry.arc.ArcPolygon\")) that can be instantiated\nwith points.\nSee also\n[`ArcPolygon`](manim.mobject.geometry.arc.ArcPolygon.html#manim.mobject.geometry.arc.ArcPolygon \"manim.mobject.geometry.arc.ArcPolygon\")\nExamples\nOne example of an arcpolygon is the Reuleaux triangle.\nInstead of 3 straight lines connecting the outer points,\na Reuleaux triangle has 3 arcs connecting those points,\nmaking a shape with constant width.\nPassed arcs are stored as submobjects in the arcpolygon.\nThis means that the arcs are changed along with the arcpolygon,\nfor example when it’s shifted, and these arcs can be manipulated\nafter the arcpolygon has been initialized.\nAlso both the arcs contained in an [`ArcPolygonFromArcs`](#manim.mobject.geometry.arc.ArcPolygonFromArcs \"manim.mobject.geometry.arc.ArcPolygonFromArcs\"), as well as the\narcpolygon itself are drawn, which affects draw time in [`Create`](manim.animation.creation.Create.html#manim.animation.creation.Create \"manim.animation.creation.Create\")\nfor example. In most cases the arcs themselves don’t\nneed to be drawn, in which case they can be passed as invisible.\nExample: ArcPolygonExample [¶](#arcpolygonexample)\n```\nfrom manim import *\nclass ArcPolygonExample(Scene):\n    def construct(self):\n        arc_conf = {\"stroke_width\": 0}\n        poly_conf = {\"stroke_width\": 10, \"stroke_color\": BLUE,\n              \"fill_opacity\": 1, \"color\": PURPLE}\n        a = [-1, 0, 0]\n        b = [1, 0, 0]\n        c = [0, np.sqrt(3), 0]\n        arc0 = ArcBetweenPoints(a, b, radius=2, **arc_conf)\n        arc1 = ArcBetweenPoints(b, c, radius=2, **arc_conf)\n        arc2 = ArcBetweenPoints(c, a, radius=2, **arc_conf)\n        reuleaux_tri = ArcPolygonFromArcs(arc0, arc1, arc2, **poly_conf)\n        self.play(FadeIn(reuleaux_tri))\n        self.wait(2)\n```\n```\nclass ArcPolygonExample(Scene):\n    def construct(self):\n        arc_conf = {\"stroke_width\": 0}\n        poly_conf = {\"stroke_width\": 10, \"stroke_color\": BLUE,\n              \"fill_opacity\": 1, \"color\": PURPLE}\n        a = [-1, 0, 0]\n        b = [1, 0, 0]\n        c = [0, np.sqrt(3), 0]\n        arc0 = ArcBetweenPoints(a, b, radius=2, **arc_conf)\n        arc1 = ArcBetweenPoints(b, c, radius=2, **arc_conf)\n        arc2 = ArcBetweenPoints(c, a, radius=2, **arc_conf)\n        reuleaux_tri = ArcPolygonFromArcs(arc0, arc1, arc2, **poly_conf)\n        self.play(FadeIn(reuleaux_tri))\n        self.wait(2)\n```\nThe arcpolygon itself can also be hidden so that instead only the contained\narcs are drawn. This can be used to easily debug arcs or to highlight them.\nExample: ArcPolygonExample2 [¶](#arcpolygonexample2)\n```\nfrom manim import *\nclass ArcPolygonExample2(Scene):\n    def construct(self):\n        arc_conf = {\"stroke_width\": 3, \"stroke_color\": BLUE,\n            \"fill_opacity\": 0.5, \"color\": GREEN}\n        poly_conf = {\"color\": None}\n        a = [-1, 0, 0]\n        b = [1, 0, 0]\n        c = [0, np.sqrt(3), 0]\n        arc0 = ArcBetweenPoints(a, b, radius=2, **arc_conf)\n        arc1 = ArcBetweenPoints(b, c, radius=2, **arc_conf)\n        arc2 = ArcBetweenPoints(c, a, radius=2, stroke_color=RED)\n        reuleaux_tri = ArcPolygonFromArcs(arc0, arc1, arc2, **poly_conf)\n        self.play(FadeIn(reuleaux_tri))\n        self.wait(2)\n```\n```\nclass ArcPolygonExample2(Scene):\n    def construct(self):\n        arc_conf = {\"stroke_width\": 3, \"stroke_color\": BLUE,\n            \"fill_opacity\": 0.5, \"color\": GREEN}\n        poly_conf = {\"color\": None}\n        a = [-1, 0, 0]\n        b = [1, 0, 0]\n        c = [0, np.sqrt(3), 0]\n        arc0 = ArcBetweenPoints(a, b, radius=2, **arc_conf)\n        arc1 = ArcBetweenPoints(b, c, radius=2, **arc_conf)\n        arc2 = ArcBetweenPoints(c, a, radius=2, stroke_color=RED)\n        reuleaux_tri = ArcPolygonFromArcs(arc0, arc1, arc2, **poly_conf)\n        self.play(FadeIn(reuleaux_tri))\n        self.wait(2)\n```\nMethods\nAttributes\n| `animate` | Used to animate the application of any method of `self`. |\n| --- | --- |\n| `animation_overrides` |  |\n| `color` |  |\n| `depth` | The depth of the mobject. |\n| `fill_color` | If there are multiple colors (for gradient) this returns the first one |\n| `height` | The height of the mobject. |\n| `n_points_per_curve` |  |\n| `sheen_factor` |  |\n| `stroke_color` |  |\n| `width` | The width of the mobject. |\n\\_original\\_\\_init\\_\\_(*\\*arcs*, *\\*\\*kwargs*)[¶](#manim.mobject.geometry.arc.ArcPolygonFromArcs._original__init__ \"Link to this definition\")\nInitialize self. See help(type(self)) for accurate signature.\nParameters:\n* **arcs** ([*Arc*](manim.mobject.geometry.arc.Arc.html#manim.mobject.geometry.arc.Arc \"manim.mobject.geometry.arc.Arc\") *\\|* [*ArcBetweenPoints*](manim.mobject.geometry.arc.ArcBetweenPoints.html#manim.mobject.geometry.arc.ArcBetweenPoints \"manim.mobject.geometry.arc.ArcBetweenPoints\"))\n* **kwargs** (*Any*)\nReturn type:\nNone",
  "scraped_at": "2025-06-24T17:49:06.719694",
  "content_length": 7571,
  "domain": "docs.manim.community",
  "word_count": 772,
  "inspection_status": "approved",
  "filename": "ArcPolygonFromArcs - Manim Community v0.19.0_20250624_174906.json",
  "saved_at": "2025-06-24T17:49:06.719764",
  "approved_at": "2025-06-25T17:18:58.420179"
}