{
  "doc_id": "a996f5c1bf6ff8eb28c0bc3d3ca631c0",
  "url": "https://docs.manim.community/en/latest/reference/manim.mobject.geometry.arc.Circle.html",
  "title": "Circle - Manim Community v0.19.0",
  "content": "Circle[¶](#circle \"Link to this heading\")\n=========================================\nQualified name: `manim.mobject.geometry.arc.Circle`\n*class* Circle(*radius\\=None*, *color\\=ManimColor('\\#FC6255')*, *\\*\\*kwargs*)[\\[source]](../_modules/manim/mobject/geometry/arc.html#Circle)[¶](#manim.mobject.geometry.arc.Circle \"Link to this definition\")\nBases: [`Arc`](manim.mobject.geometry.arc.Arc.html#manim.mobject.geometry.arc.Arc \"manim.mobject.geometry.arc.Arc\")\nA circle.\nParameters:\n* **color** ([*ParsableManimColor*](manim.utils.color.core.html#manim.utils.color.core.ParsableManimColor \"manim.utils.color.core.ParsableManimColor\")) – The color of the shape.\n* **kwargs** (*Any*) – Additional arguments to be passed to [`Arc`](manim.mobject.geometry.arc.Arc.html#manim.mobject.geometry.arc.Arc \"manim.mobject.geometry.arc.Arc\")\n* **radius** (*float* *\\|* *None*)\nExamples\nExample: CircleExample [¶](#circleexample)\n![../_images/CircleExample-1.png](../_images/CircleExample-1.png)\n```\nfrom manim import *\nclass CircleExample(Scene):\n    def construct(self):\n        circle_1 = Circle(radius=1.0)\n        circle_2 = Circle(radius=1.5, color=GREEN)\n        circle_3 = Circle(radius=1.0, color=BLUE_B, fill_opacity=1)\n        circle_group = Group(circle_1, circle_2, circle_3).arrange(buff=1)\n        self.add(circle_group)\n```\n```\nclass CircleExample(Scene):\n    def construct(self):\n        circle_1 = Circle(radius=1.0)\n        circle_2 = Circle(radius=1.5, color=GREEN)\n        circle_3 = Circle(radius=1.0, color=BLUE_B, fill_opacity=1)\n        circle_group = Group(circle_1, circle_2, circle_3).arrange(buff=1)\n        self.add(circle_group)\n```\nMethods\n| [`from_three_points`](#manim.mobject.geometry.arc.Circle.from_three_points \"manim.mobject.geometry.arc.Circle.from_three_points\") | Returns a circle passing through the specified three points. |\n| --- | --- |\n| [`point_at_angle`](#manim.mobject.geometry.arc.Circle.point_at_angle \"manim.mobject.geometry.arc.Circle.point_at_angle\") | Returns the position of a point on the circle. |\n| [`surround`](#manim.mobject.geometry.arc.Circle.surround \"manim.mobject.geometry.arc.Circle.surround\") | Modifies a circle so that it surrounds a given mobject. |\nAttributes\n| `animate` | Used to animate the application of any method of `self`. |\n| --- | --- |\n| `animation_overrides` |  |\n| `color` |  |\n| `depth` | The depth of the mobject. |\n| `fill_color` | If there are multiple colors (for gradient) this returns the first one |\n| `height` | The height of the mobject. |\n| `n_points_per_curve` |  |\n| `sheen_factor` |  |\n| `stroke_color` |  |\n| `width` | The width of the mobject. |\n\\_original\\_\\_init\\_\\_(*radius\\=None*, *color\\=ManimColor('\\#FC6255')*, *\\*\\*kwargs*)[¶](#manim.mobject.geometry.arc.Circle._original__init__ \"Link to this definition\")\nInitialize self. See help(type(self)) for accurate signature.\nParameters:\n* **radius** (*float* *\\|* *None*)\n* **color** ([*ParsableManimColor*](manim.utils.color.core.html#manim.utils.color.core.ParsableManimColor \"manim.utils.color.core.ParsableManimColor\"))\n* **kwargs** (*Any*)\nReturn type:\nNone\n*static* from\\_three\\_points(*p1*, *p2*, *p3*, *\\*\\*kwargs*)[\\[source]](../_modules/manim/mobject/geometry/arc.html#Circle.from_three_points)[¶](#manim.mobject.geometry.arc.Circle.from_three_points \"Link to this definition\")\nReturns a circle passing through the specified\nthree points.\nExample\nExample: CircleFromPointsExample [¶](#circlefrompointsexample)\n![../_images/CircleFromPointsExample-1.png](../_images/CircleFromPointsExample-1.png)\n```\nfrom manim import *\nclass CircleFromPointsExample(Scene):\n    def construct(self):\n        circle = Circle.from_three_points(LEFT, LEFT + UP, UP * 2, color=RED)\n        dots = VGroup(\n            Dot(LEFT),\n            Dot(LEFT + UP),\n            Dot(UP * 2),\n        )\n        self.add(NumberPlane(), circle, dots)\n```\n```\nclass CircleFromPointsExample(Scene):\n    def construct(self):\n        circle = Circle.from_three_points(LEFT, LEFT + UP, UP * 2, color=RED)\n        dots = VGroup(\n            Dot(LEFT),\n            Dot(LEFT + UP),\n            Dot(UP * 2),\n        )\n        self.add(NumberPlane(), circle, dots)\n```\nParameters:\n* **p1** ([*Point3DLike*](manim.typing.html#manim.typing.Point3DLike \"manim.typing.Point3DLike\"))\n* **p2** ([*Point3DLike*](manim.typing.html#manim.typing.Point3DLike \"manim.typing.Point3DLike\"))\n* **p3** ([*Point3DLike*](manim.typing.html#manim.typing.Point3DLike \"manim.typing.Point3DLike\"))\n* **kwargs** (*Any*)\nReturn type:\n[Circle](#manim.mobject.geometry.arc.Circle \"manim.mobject.geometry.arc.Circle\")\npoint\\_at\\_angle(*angle*)[\\[source]](../_modules/manim/mobject/geometry/arc.html#Circle.point_at_angle)[¶](#manim.mobject.geometry.arc.Circle.point_at_angle \"Link to this definition\")\nReturns the position of a point on the circle.\nParameters:\n**angle** (*float*) – The angle of the point along the circle in radians.\nReturns:\nThe location of the point along the circle’s circumference.\nReturn type:\n`numpy.ndarray`\nExamples\nExample: PointAtAngleExample [¶](#pointatangleexample)\n![../_images/PointAtAngleExample-1.png](../_images/PointAtAngleExample-1.png)\n```\nfrom manim import *\nclass PointAtAngleExample(Scene):\n    def construct(self):\n        circle = Circle(radius=2.0)\n        p1 = circle.point_at_angle(PI/2)\n        p2 = circle.point_at_angle(270*DEGREES)\n        s1 = Square(side_length=0.25).move_to(p1)\n        s2 = Square(side_length=0.25).move_to(p2)\n        self.add(circle, s1, s2)\n```\n```\nclass PointAtAngleExample(Scene):\n    def construct(self):\n        circle = Circle(radius=2.0)\n        p1 = circle.point_at_angle(PI/2)\n        p2 = circle.point_at_angle(270*DEGREES)\n        s1 = Square(side_length=0.25).move_to(p1)\n        s2 = Square(side_length=0.25).move_to(p2)\n        self.add(circle, s1, s2)\n```\nsurround(*mobject*, *dim\\_to\\_match\\=0*, *stretch\\=False*, *buffer\\_factor\\=1\\.2*)[\\[source]](../_modules/manim/mobject/geometry/arc.html#Circle.surround)[¶](#manim.mobject.geometry.arc.Circle.surround \"Link to this definition\")\nModifies a circle so that it surrounds a given mobject.\nParameters:\n* **mobject** ([*Mobject*](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\")) – The mobject that the circle will be surrounding.\n* **dim\\_to\\_match** (*int*)\n* **buffer\\_factor** (*float*) – Scales the circle with respect to the mobject. A buffer\\_factor \\< 1 makes the circle smaller than the mobject.\n* **stretch** (*bool*) – Stretches the circle to fit more tightly around the mobject. Note: Does not work with `Line`\nReturn type:\nSelf\nExamples\nExample: CircleSurround [¶](#circlesurround)\n![../_images/CircleSurround-1.png](../_images/CircleSurround-1.png)\n```\nfrom manim import *\nclass CircleSurround(Scene):\n    def construct(self):\n        triangle1 = Triangle()\n        circle1 = Circle().surround(triangle1)\n        group1 = Group(triangle1,circle1) # treat the two mobjects as one\n        line2 = Line()\n        circle2 = Circle().surround(line2, buffer_factor=2.0)\n        group2 = Group(line2,circle2)\n        # buffer_factor < 1, so the circle is smaller than the square\n        square3 = Square()\n        circle3 = Circle().surround(square3, buffer_factor=0.5)\n        group3 = Group(square3, circle3)\n        group = Group(group1, group2, group3).arrange(buff=1)\n        self.add(group)\n```\n```\nclass CircleSurround(Scene):\n    def construct(self):\n        triangle1 = Triangle()\n        circle1 = Circle().surround(triangle1)\n        group1 = Group(triangle1,circle1) # treat the two mobjects as one\n        line2 = Line()\n        circle2 = Circle().surround(line2, buffer_factor=2.0)\n        group2 = Group(line2,circle2)\n        # buffer_factor < 1, so the circle is smaller than the square\n        square3 = Square()\n        circle3 = Circle().surround(square3, buffer_factor=0.5)\n        group3 = Group(square3, circle3)\n        group = Group(group1, group2, group3).arrange(buff=1)\n        self.add(group)\n```",
  "scraped_at": "2025-06-24T17:49:09.268754",
  "content_length": 7995,
  "domain": "docs.manim.community",
  "word_count": 686,
  "inspection_status": "approved",
  "filename": "Circle - Manim Community v0.19.0_20250624_174909.json",
  "saved_at": "2025-06-24T17:49:09.268820",
  "approved_at": "2025-06-25T17:18:58.375827"
}