{
  "doc_id": "f4a46fe37a1b4966260e69750fd860d0",
  "url": "https://docs.manim.community/en/latest/reference/manim.mobject.geometry.arc.CubicBezier.html",
  "title": "CubicBezier - Manim Community v0.19.0",
  "content": "CubicBezier[¶](#cubicbezier \"Link to this heading\")\n===================================================\nQualified name: `manim.mobject.geometry.arc.CubicBezier`\n*class* CubicBezier(*start\\_anchor*, *start\\_handle*, *end\\_handle*, *end\\_anchor*, *\\*\\*kwargs*)[\\[source]](../_modules/manim/mobject/geometry/arc.html#CubicBezier)[¶](#manim.mobject.geometry.arc.CubicBezier \"Link to this definition\")\nBases: [`VMobject`](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\")\nA cubic Bézier curve.\nExample\nExample: BezierSplineExample [¶](#beziersplineexample)\n![../_images/BezierSplineExample-1.png](../_images/BezierSplineExample-1.png)\n```\nfrom manim import *\nclass BezierSplineExample(Scene):\n    def construct(self):\n        p1 = np.array([-3, 1, 0])\n        p1b = p1 + [1, 0, 0]\n        d1 = Dot(point=p1).set_color(BLUE)\n        l1 = Line(p1, p1b)\n        p2 = np.array([3, -1, 0])\n        p2b = p2 - [1, 0, 0]\n        d2 = Dot(point=p2).set_color(RED)\n        l2 = Line(p2, p2b)\n        bezier = CubicBezier(p1b, p1b + 3 * RIGHT, p2b - 3 * RIGHT, p2b)\n        self.add(l1, d1, l2, d2, bezier)\n```\n```\nclass BezierSplineExample(Scene):\n    def construct(self):\n        p1 = np.array([-3, 1, 0])\n        p1b = p1 + [1, 0, 0]\n        d1 = Dot(point=p1).set_color(BLUE)\n        l1 = Line(p1, p1b)\n        p2 = np.array([3, -1, 0])\n        p2b = p2 - [1, 0, 0]\n        d2 = Dot(point=p2).set_color(RED)\n        l2 = Line(p2, p2b)\n        bezier = CubicBezier(p1b, p1b + 3 * RIGHT, p2b - 3 * RIGHT, p2b)\n        self.add(l1, d1, l2, d2, bezier)\n```\nMethods\nAttributes\n| `animate` | Used to animate the application of any method of `self`. |\n| --- | --- |\n| `animation_overrides` |  |\n| `color` |  |\n| `depth` | The depth of the mobject. |\n| `fill_color` | If there are multiple colors (for gradient) this returns the first one |\n| `height` | The height of the mobject. |\n| `n_points_per_curve` |  |\n| `sheen_factor` |  |\n| `stroke_color` |  |\n| `width` | The width of the mobject. |\nParameters:\n* **start\\_anchor** ([*Point3DLike*](manim.typing.html#manim.typing.Point3DLike \"manim.typing.Point3DLike\"))\n* **start\\_handle** ([*Point3DLike*](manim.typing.html#manim.typing.Point3DLike \"manim.typing.Point3DLike\"))\n* **end\\_handle** ([*Point3DLike*](manim.typing.html#manim.typing.Point3DLike \"manim.typing.Point3DLike\"))\n* **end\\_anchor** ([*Point3DLike*](manim.typing.html#manim.typing.Point3DLike \"manim.typing.Point3DLike\"))\n* **kwargs** (*Any*)\n\\_original\\_\\_init\\_\\_(*start\\_anchor*, *start\\_handle*, *end\\_handle*, *end\\_anchor*, *\\*\\*kwargs*)[¶](#manim.mobject.geometry.arc.CubicBezier._original__init__ \"Link to this definition\")\nInitialize self. See help(type(self)) for accurate signature.\nParameters:\n* **start\\_anchor** ([*Point3DLike*](manim.typing.html#manim.typing.Point3DLike \"manim.typing.Point3DLike\"))\n* **start\\_handle** ([*Point3DLike*](manim.typing.html#manim.typing.Point3DLike \"manim.typing.Point3DLike\"))\n* **end\\_handle** ([*Point3DLike*](manim.typing.html#manim.typing.Point3DLike \"manim.typing.Point3DLike\"))\n* **end\\_anchor** ([*Point3DLike*](manim.typing.html#manim.typing.Point3DLike \"manim.typing.Point3DLike\"))\n* **kwargs** (*Any*)\nReturn type:\nNone",
  "scraped_at": "2025-06-24T17:49:11.963324",
  "content_length": 3276,
  "domain": "docs.manim.community",
  "word_count": 304,
  "inspection_status": "approved",
  "filename": "CubicBezier - Manim Community v0.19.0_20250624_174911.json",
  "saved_at": "2025-06-24T17:49:11.963379",
  "approved_at": "2025-06-25T17:18:58.366010"
}