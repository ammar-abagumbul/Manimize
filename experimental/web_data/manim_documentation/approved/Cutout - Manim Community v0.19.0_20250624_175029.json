{
  "doc_id": "b2b5a8c73619620aa8442db3639132d1",
  "url": "https://docs.manim.community/en/latest/reference/manim.mobject.geometry.polygram.Cutout.html",
  "title": "Cutout - Manim Community v0.19.0",
  "content": "Cutout[¶](#cutout \"Link to this heading\")\n=========================================\nQualified name: `manim.mobject.geometry.polygram.Cutout`\n*class* Cutout(*main\\_shape*, *\\*mobjects*, *\\*\\*kwargs*)[\\[source]](../_modules/manim/mobject/geometry/polygram.html#Cutout)[¶](#manim.mobject.geometry.polygram.Cutout \"Link to this definition\")\nBases: [`VMobject`](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\")\nA shape with smaller cutouts.\nParameters:\n* **main\\_shape** ([*VMobject*](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\")) – The primary shape from which cutouts are made.\n* **mobjects** ([*VMobject*](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\")) – The smaller shapes which are to be cut out of the `main_shape`.\n* **kwargs** (*Any*) – Further keyword arguments that are passed to the constructor of\n[`VMobject`](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\").\nWarning\nTechnically, this class behaves similar to a symmetric difference: if\nparts of the `mobjects` are not located within the `main_shape`,\nthese parts will be added to the resulting [`VMobject`](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\").\nExamples\nExample: CutoutExample [¶](#cutoutexample)\n```\nfrom manim import *\nclass CutoutExample(Scene):\n    def construct(self):\n        s1 = Square().scale(2.5)\n        s2 = Triangle().shift(DOWN + RIGHT).scale(0.5)\n        s3 = Square().shift(UP + RIGHT).scale(0.5)\n        s4 = RegularPolygon(5).shift(DOWN + LEFT).scale(0.5)\n        s5 = RegularPolygon(6).shift(UP + LEFT).scale(0.5)\n        c = Cutout(s1, s2, s3, s4, s5, fill_opacity=1, color=BLUE, stroke_color=RED)\n        self.play(Write(c), run_time=4)\n        self.wait()\n```\n```\nclass CutoutExample(Scene):\n    def construct(self):\n        s1 = Square().scale(2.5)\n        s2 = Triangle().shift(DOWN + RIGHT).scale(0.5)\n        s3 = Square().shift(UP + RIGHT).scale(0.5)\n        s4 = RegularPolygon(5).shift(DOWN + LEFT).scale(0.5)\n        s5 = RegularPolygon(6).shift(UP + LEFT).scale(0.5)\n        c = Cutout(s1, s2, s3, s4, s5, fill_opacity=1, color=BLUE, stroke_color=RED)\n        self.play(Write(c), run_time=4)\n        self.wait()\n```\nMethods\nAttributes\n| `animate` | Used to animate the application of any method of `self`. |\n| --- | --- |\n| `animation_overrides` |  |\n| `color` |  |\n| `depth` | The depth of the mobject. |\n| `fill_color` | If there are multiple colors (for gradient) this returns the first one |\n| `height` | The height of the mobject. |\n| `n_points_per_curve` |  |\n| `sheen_factor` |  |\n| `stroke_color` |  |\n| `width` | The width of the mobject. |\n\\_original\\_\\_init\\_\\_(*main\\_shape*, *\\*mobjects*, *\\*\\*kwargs*)[¶](#manim.mobject.geometry.polygram.Cutout._original__init__ \"Link to this definition\")\nInitialize self. See help(type(self)) for accurate signature.\nParameters:\n* **main\\_shape** ([*VMobject*](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\"))\n* **mobjects** ([*VMobject*](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\"))\n* **kwargs** (*Any*)\nReturn type:\nNone",
  "scraped_at": "2025-06-24T17:50:29.727889",
  "content_length": 3707,
  "domain": "docs.manim.community",
  "word_count": 308,
  "inspection_status": "approved",
  "filename": "Cutout - Manim Community v0.19.0_20250624_175029.json",
  "saved_at": "2025-06-24T17:50:29.727985",
  "approved_at": "2025-06-25T17:18:58.424278"
}