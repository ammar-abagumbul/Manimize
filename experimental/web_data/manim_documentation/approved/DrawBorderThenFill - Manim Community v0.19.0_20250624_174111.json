{
  "doc_id": "2637d9fc3ae833a90fed624d8d13f2a9",
  "url": "https://docs.manim.community/en/latest/reference/manim.animation.creation.DrawBorderThenFill.html",
  "title": "DrawBorderThenFill - Manim Community v0.19.0",
  "content": "DrawBorderThenFill[¶](#drawborderthenfill \"Link to this heading\")\n=================================================================\nQualified name: `manim.animation.creation.DrawBorderThenFill`\n*class* DrawBorderThenFill(*mobject\\=None*, *\\*args*, *use\\_override\\=True*, *\\*\\*kwargs*)[\\[source]](../_modules/manim/animation/creation.html#DrawBorderThenFill)[¶](#manim.animation.creation.DrawBorderThenFill \"Link to this definition\")\nBases: [`Animation`](manim.animation.animation.Animation.html#manim.animation.animation.Animation \"manim.animation.animation.Animation\")\nDraw the border first and then show the fill.\nExamples\nExample: ShowDrawBorderThenFill [¶](#showdrawborderthenfill)\n```\nfrom manim import *\nclass ShowDrawBorderThenFill(Scene):\n    def construct(self):\n        self.play(DrawBorderThenFill(Square(fill_opacity=1, fill_color=ORANGE)))\n```\n```\nclass ShowDrawBorderThenFill(Scene):\n    def construct(self):\n        self.play(DrawBorderThenFill(Square(fill_opacity=1, fill_color=ORANGE)))\n```\nMethods\n| [`begin`](#manim.animation.creation.DrawBorderThenFill.begin \"manim.animation.creation.DrawBorderThenFill.begin\") | Begin the animation. |\n| --- | --- |\n| [`get_all_mobjects`](#manim.animation.creation.DrawBorderThenFill.get_all_mobjects \"manim.animation.creation.DrawBorderThenFill.get_all_mobjects\") | Get all mobjects involved in the animation. |\n| `get_outline` |  |\n| `get_stroke_color` |  |\n| `interpolate_submobject` |  |\nAttributes\n| `run_time` |  |\n| --- | --- |\nParameters:\n* **vmobject** ([*VMobject*](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\") *\\|* *OpenGLVMobject*)\n* **run\\_time** (*float*)\n* **rate\\_func** (*Callable**\\[**\\[**float**]**,* *float**]*)\n* **stroke\\_width** (*float*)\n* **stroke\\_color** (*str*)\n* **introducer** (*bool*)\n\\_original\\_\\_init\\_\\_(*vmobject*, *run\\_time\\=2*, *rate\\_func\\=\\<function double\\_smooth\\>*, *stroke\\_width\\=2*, *stroke\\_color\\=None*, *introducer\\=True*, *\\*\\*kwargs*)[¶](#manim.animation.creation.DrawBorderThenFill._original__init__ \"Link to this definition\")\nInitialize self. See help(type(self)) for accurate signature.\nParameters:\n* **vmobject** ([*VMobject*](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\") *\\|* *OpenGLVMobject*)\n* **run\\_time** (*float*)\n* **rate\\_func** (*Callable**\\[**\\[**float**]**,* *float**]*)\n* **stroke\\_width** (*float*)\n* **stroke\\_color** (*str*)\n* **introducer** (*bool*)\nReturn type:\nNone\nbegin()[\\[source]](../_modules/manim/animation/creation.html#DrawBorderThenFill.begin)[¶](#manim.animation.creation.DrawBorderThenFill.begin \"Link to this definition\")\nBegin the animation.\nThis method is called right as an animation is being played. As much\ninitialization as possible, especially any mobject copying, should live in this\nmethod.\nReturn type:\nNone\nget\\_all\\_mobjects()[\\[source]](../_modules/manim/animation/creation.html#DrawBorderThenFill.get_all_mobjects)[¶](#manim.animation.creation.DrawBorderThenFill.get_all_mobjects \"Link to this definition\")\nGet all mobjects involved in the animation.\nOrdering must match the ordering of arguments to interpolate\\_submobject\nReturns:\nThe sequence of mobjects.\nReturn type:\nSequence\\[[Mobject](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\")]",
  "scraped_at": "2025-06-24T17:41:11.778258",
  "content_length": 3460,
  "domain": "docs.manim.community",
  "word_count": 236,
  "inspection_status": "approved",
  "filename": "DrawBorderThenFill - Manim Community v0.19.0_20250624_174111.json",
  "saved_at": "2025-06-24T17:41:11.778318",
  "approved_at": "2025-06-25T17:18:58.443714"
}