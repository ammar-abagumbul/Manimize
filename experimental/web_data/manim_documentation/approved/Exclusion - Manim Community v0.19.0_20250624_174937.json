{
  "doc_id": "a837f7a68d899332151eff5efd05c2f0",
  "url": "https://docs.manim.community/en/latest/reference/manim.mobject.geometry.boolean_ops.Exclusion.html",
  "title": "Exclusion - Manim Community v0.19.0",
  "content": "Exclusion[¶](#exclusion \"Link to this heading\")\n===============================================\nQualified name: `manim.mobject.geometry.boolean\\_ops.Exclusion`\n*class* Exclusion(*subject*, *clip*, *\\*\\*kwargs*)[\\[source]](../_modules/manim/mobject/geometry/boolean_ops.html#Exclusion)[¶](#manim.mobject.geometry.boolean_ops.Exclusion \"Link to this definition\")\nBases: `_BooleanOps`\nFind the XOR between two [`VMobject`](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\").\nThis creates a new [`VMobject`](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\") consisting of the region\ncovered by exactly one of them.\nParameters:\n* **subject** ([*VMobject*](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\")) – The 1st [`VMobject`](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\").\n* **clip** ([*VMobject*](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\")) – The 2nd [`VMobject`](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\")\n* **kwargs** (*Any*)\nExample\nExample: IntersectionExample [¶](#intersectionexample)\n![../_images/IntersectionExample-1.png](../_images/IntersectionExample-1.png)\n```\nfrom manim import *\nclass IntersectionExample(Scene):\n    def construct(self):\n        sq = Square(color=RED, fill_opacity=1)\n        sq.move_to([-2, 0, 0])\n        cr = Circle(color=BLUE, fill_opacity=1)\n        cr.move_to([-1.3, 0.7, 0])\n        un = Exclusion(sq, cr, color=GREEN, fill_opacity=1)\n        un.move_to([1.5, 0.4, 0])\n        self.add(sq, cr, un)\n```\n```\nclass IntersectionExample(Scene):\n    def construct(self):\n        sq = Square(color=RED, fill_opacity=1)\n        sq.move_to([-2, 0, 0])\n        cr = Circle(color=BLUE, fill_opacity=1)\n        cr.move_to([-1.3, 0.7, 0])\n        un = Exclusion(sq, cr, color=GREEN, fill_opacity=1)\n        un.move_to([1.5, 0.4, 0])\n        self.add(sq, cr, un)\n```\nMethods\nAttributes\n| `animate` | Used to animate the application of any method of `self`. |\n| --- | --- |\n| `animation_overrides` |  |\n| `color` |  |\n| `depth` | The depth of the mobject. |\n| `fill_color` | If there are multiple colors (for gradient) this returns the first one |\n| `height` | The height of the mobject. |\n| `n_points_per_curve` |  |\n| `sheen_factor` |  |\n| `stroke_color` |  |\n| `width` | The width of the mobject. |\n\\_original\\_\\_init\\_\\_(*subject*, *clip*, *\\*\\*kwargs*)[¶](#manim.mobject.geometry.boolean_ops.Exclusion._original__init__ \"Link to this definition\")\nInitialize self. See help(type(self)) for accurate signature.\nParameters:\n* **subject** ([*VMobject*](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\"))\n* **clip** ([*VMobject*](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\"))\n* **kwargs** (*Any*)\nReturn type:\nNone",
  "scraped_at": "2025-06-24T17:49:37.557918",
  "content_length": 3475,
  "domain": "docs.manim.community",
  "word_count": 250,
  "inspection_status": "approved",
  "filename": "Exclusion - Manim Community v0.19.0_20250624_174937.json",
  "saved_at": "2025-06-24T17:49:37.557977",
  "approved_at": "2025-06-25T17:18:58.357884"
}