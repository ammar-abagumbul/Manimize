{
  "doc_id": "0d20ad9a61f2c3e5013291a13df8b2e0",
  "url": "https://docs.manim.community/en/latest/reference/manim.animation.transform.FadeTransform.html",
  "title": "FadeTransform - Manim Community v0.19.0",
  "content": "FadeTransform[¶](#fadetransform \"Link to this heading\")\n=======================================================\nQualified name: `manim.animation.transform.FadeTransform`\n*class* FadeTransform(*mobject\\=None*, *\\*args*, *use\\_override\\=True*, *\\*\\*kwargs*)[\\[source]](../_modules/manim/animation/transform.html#FadeTransform)[¶](#manim.animation.transform.FadeTransform \"Link to this definition\")\nBases: [`Transform`](manim.animation.transform.Transform.html#manim.animation.transform.Transform \"manim.animation.transform.Transform\")\nFades one mobject into another.\nParameters:\n* **mobject** – The starting [`Mobject`](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\").\n* **target\\_mobject** – The target [`Mobject`](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\").\n* **stretch** – Controls whether the target [`Mobject`](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\") is stretched during\nthe animation. Default: `True`.\n* **dim\\_to\\_match** – If the target mobject is not stretched automatically, this allows\nto adjust the initial scale of the target [`Mobject`](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\") while\nit is shifted in. Setting this to 0, 1, and 2, respectively,\nmatches the length of the target with the length of the starting\n[`Mobject`](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\") in x, y, and z direction, respectively.\n* **kwargs** – Further keyword arguments are passed to the parent class.\nExamples\nExample: DifferentFadeTransforms [¶](#differentfadetransforms)\n```\nfrom manim import *\nclass DifferentFadeTransforms(Scene):\n    def construct(self):\n        starts = [Rectangle(width=4, height=1) for _ in range(3)]\n        VGroup(*starts).arrange(DOWN, buff=1).shift(3*LEFT)\n        targets = [Circle(fill_opacity=1).scale(0.25) for _ in range(3)]\n        VGroup(*targets).arrange(DOWN, buff=1).shift(3*RIGHT)\n        self.play(*[FadeIn(s) for s in starts])\n        self.play(\n            FadeTransform(starts[0], targets[0], stretch=True),\n            FadeTransform(starts[1], targets[1], stretch=False, dim_to_match=0),\n            FadeTransform(starts[2], targets[2], stretch=False, dim_to_match=1)\n        )\n        self.play(*[FadeOut(mobj) for mobj in self.mobjects])\n```\n```\nclass DifferentFadeTransforms(Scene):\n    def construct(self):\n        starts = [Rectangle(width=4, height=1) for _ in range(3)]\n        VGroup(*starts).arrange(DOWN, buff=1).shift(3*LEFT)\n        targets = [Circle(fill_opacity=1).scale(0.25) for _ in range(3)]\n        VGroup(*targets).arrange(DOWN, buff=1).shift(3*RIGHT)\n        self.play(*[FadeIn(s) for s in starts])\n        self.play(\n            FadeTransform(starts[0], targets[0], stretch=True),\n            FadeTransform(starts[1], targets[1], stretch=False, dim_to_match=0),\n            FadeTransform(starts[2], targets[2], stretch=False, dim_to_match=1)\n        )\n        self.play(*[FadeOut(mobj) for mobj in self.mobjects])\n```\nMethods\n| [`begin`](#manim.animation.transform.FadeTransform.begin \"manim.animation.transform.FadeTransform.begin\") | Initial setup for the animation. |\n| --- | --- |\n| [`clean_up_from_scene`](#manim.animation.transform.FadeTransform.clean_up_from_scene \"manim.animation.transform.FadeTransform.clean_up_from_scene\") | Clean up the [`Scene`](manim.scene.scene.Scene.html#manim.scene.scene.Scene \"manim.scene.scene.Scene\") after finishing the animation. |\n| `get_all_families_zipped` |  |\n| [`get_all_mobjects`](#manim.animation.transform.FadeTransform.get_all_mobjects \"manim.animation.transform.FadeTransform.get_all_mobjects\") | Get all mobjects involved in the animation. |\n| [`ghost_to`](#manim.animation.transform.FadeTransform.ghost_to \"manim.animation.transform.FadeTransform.ghost_to\") | Replaces the source by the target and sets the opacity to 0\\. |\nAttributes\n| `path_arc` |  |\n| --- | --- |\n| `path_func` |  |\n| `run_time` |  |\n\\_original\\_\\_init\\_\\_(*mobject*, *target\\_mobject*, *stretch\\=True*, *dim\\_to\\_match\\=1*, *\\*\\*kwargs*)[¶](#manim.animation.transform.FadeTransform._original__init__ \"Link to this definition\")\nInitialize self. See help(type(self)) for accurate signature.\nbegin()[\\[source]](../_modules/manim/animation/transform.html#FadeTransform.begin)[¶](#manim.animation.transform.FadeTransform.begin \"Link to this definition\")\nInitial setup for the animation.\nThe mobject to which this animation is bound is a group consisting of\nboth the starting and the ending mobject. At the start, the ending\nmobject replaces the starting mobject (and is completely faded). In the\nend, it is set to be the other way around.\nclean\\_up\\_from\\_scene(*scene*)[\\[source]](../_modules/manim/animation/transform.html#FadeTransform.clean_up_from_scene)[¶](#manim.animation.transform.FadeTransform.clean_up_from_scene \"Link to this definition\")\nClean up the [`Scene`](manim.scene.scene.Scene.html#manim.scene.scene.Scene \"manim.scene.scene.Scene\") after finishing the animation.\nThis includes to [`remove()`](manim.scene.scene.Scene.html#manim.scene.scene.Scene.remove \"manim.scene.scene.Scene.remove\") the Animation’s\n[`Mobject`](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\") if the animation is a remover.\nParameters:\n**scene** – The scene the animation should be cleaned up from.\nget\\_all\\_mobjects()[\\[source]](../_modules/manim/animation/transform.html#FadeTransform.get_all_mobjects)[¶](#manim.animation.transform.FadeTransform.get_all_mobjects \"Link to this definition\")\nGet all mobjects involved in the animation.\nOrdering must match the ordering of arguments to interpolate\\_submobject\nReturns:\nThe sequence of mobjects.\nReturn type:\nSequence\\[[Mobject](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\")]\nghost\\_to(*source*, *target*)[\\[source]](../_modules/manim/animation/transform.html#FadeTransform.ghost_to)[¶](#manim.animation.transform.FadeTransform.ghost_to \"Link to this definition\")\nReplaces the source by the target and sets the opacity to 0\\.\nIf the provided target has no points, and thus a location of \\[0, 0, 0]\nthe source will simply fade out where it currently is.",
  "scraped_at": "2025-06-24T17:43:40.093274",
  "content_length": 6347,
  "domain": "docs.manim.community",
  "word_count": 497,
  "inspection_status": "approved",
  "filename": "FadeTransform - Manim Community v0.19.0_20250624_174340.json",
  "saved_at": "2025-06-24T17:43:40.093335",
  "approved_at": "2025-06-25T17:18:58.345924"
}