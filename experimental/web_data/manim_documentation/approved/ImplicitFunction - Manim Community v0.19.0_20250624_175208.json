{
  "doc_id": "2ebeba6bfede6264ce89177ebea59520",
  "url": "https://docs.manim.community/en/latest/reference/manim.mobject.graphing.functions.ImplicitFunction.html",
  "title": "ImplicitFunction - Manim Community v0.19.0",
  "content": "ImplicitFunction[¶](#implicitfunction \"Link to this heading\")\n=============================================================\nQualified name: `manim.mobject.graphing.functions.ImplicitFunction`\n*class* ImplicitFunction(*func*, *x\\_range\\=None*, *y\\_range\\=None*, *min\\_depth\\=5*, *max\\_quads\\=1500*, *use\\_smoothing\\=True*, *\\*\\*kwargs*)[\\[source]](../_modules/manim/mobject/graphing/functions.html#ImplicitFunction)[¶](#manim.mobject.graphing.functions.ImplicitFunction \"Link to this definition\")\nBases: [`VMobject`](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\")\nAn implicit function.\nParameters:\n* **func** (*Callable**\\[**\\[**float**,* *float**]**,* *float**]*) – The implicit function in the form `f(x, y) = 0`.\n* **x\\_range** (*Sequence**\\[**float**]* *\\|* *None*) – The x min and max of the function.\n* **y\\_range** (*Sequence**\\[**float**]* *\\|* *None*) – The y min and max of the function.\n* **min\\_depth** (*int*) – The minimum depth of the function to calculate.\n* **max\\_quads** (*int*) – The maximum number of quads to use.\n* **use\\_smoothing** (*bool*) – Whether or not to smoothen the curves.\n* **kwargs** – Additional parameters to pass into `VMobject`\nNote\nA small `min_depth` \\\\(d\\\\) means that some small details might\nbe ignored if they don’t cross an edge of one of the\n\\\\(4^d\\\\) uniform quads.\nThe value of `max_quads` strongly corresponds to the\nquality of the curve, but a higher number of quads\nmay take longer to render.\nExamples\nExample: ImplicitFunctionExample [¶](#implicitfunctionexample)\n![../_images/ImplicitFunctionExample-1.png](../_images/ImplicitFunctionExample-1.png)\n```\nfrom manim import *\nclass ImplicitFunctionExample(Scene):\n    def construct(self):\n        graph = ImplicitFunction(\n            lambda x, y: x * y ** 2 - x ** 2 * y - 2,\n            color=YELLOW\n        )\n        self.add(NumberPlane(), graph)\n```\n```\nclass ImplicitFunctionExample(Scene):\n    def construct(self):\n        graph = ImplicitFunction(\n            lambda x, y: x * y ** 2 - x ** 2 * y - 2,\n            color=YELLOW\n        )\n        self.add(NumberPlane(), graph)\n```\nMethods\n| [`generate_points`](#manim.mobject.graphing.functions.ImplicitFunction.generate_points \"manim.mobject.graphing.functions.ImplicitFunction.generate_points\") | Initializes `points` and therefore the shape. |\n| --- | --- |\n| [`init_points`](#manim.mobject.graphing.functions.ImplicitFunction.init_points \"manim.mobject.graphing.functions.ImplicitFunction.init_points\") | Initializes `points` and therefore the shape. |\nAttributes\n| `animate` | Used to animate the application of any method of `self`. |\n| --- | --- |\n| `animation_overrides` |  |\n| `color` |  |\n| `depth` | The depth of the mobject. |\n| `fill_color` | If there are multiple colors (for gradient) this returns the first one |\n| `height` | The height of the mobject. |\n| `n_points_per_curve` |  |\n| `sheen_factor` |  |\n| `stroke_color` |  |\n| `width` | The width of the mobject. |\n\\_original\\_\\_init\\_\\_(*func*, *x\\_range\\=None*, *y\\_range\\=None*, *min\\_depth\\=5*, *max\\_quads\\=1500*, *use\\_smoothing\\=True*, *\\*\\*kwargs*)[¶](#manim.mobject.graphing.functions.ImplicitFunction._original__init__ \"Link to this definition\")\nAn implicit function.\nParameters:\n* **func** (*Callable**\\[**\\[**float**,* *float**]**,* *float**]*) – The implicit function in the form `f(x, y) = 0`.\n* **x\\_range** (*Sequence**\\[**float**]* *\\|* *None*) – The x min and max of the function.\n* **y\\_range** (*Sequence**\\[**float**]* *\\|* *None*) – The y min and max of the function.\n* **min\\_depth** (*int*) – The minimum depth of the function to calculate.\n* **max\\_quads** (*int*) – The maximum number of quads to use.\n* **use\\_smoothing** (*bool*) – Whether or not to smoothen the curves.\n* **kwargs** – Additional parameters to pass into `VMobject`\nNote\nA small `min_depth` \\\\(d\\\\) means that some small details might\nbe ignored if they don’t cross an edge of one of the\n\\\\(4^d\\\\) uniform quads.\nThe value of `max_quads` strongly corresponds to the\nquality of the curve, but a higher number of quads\nmay take longer to render.\nExamples\nExample: ImplicitFunctionExample [¶](#implicitfunctionexample)\n![../_images/ImplicitFunctionExample-2.png](../_images/ImplicitFunctionExample-2.png)\n```\nfrom manim import *\nclass ImplicitFunctionExample(Scene):\n    def construct(self):\n        graph = ImplicitFunction(\n            lambda x, y: x * y ** 2 - x ** 2 * y - 2,\n            color=YELLOW\n        )\n        self.add(NumberPlane(), graph)\n```\n```\nclass ImplicitFunctionExample(Scene):\n    def construct(self):\n        graph = ImplicitFunction(\n            lambda x, y: x * y ** 2 - x ** 2 * y - 2,\n            color=YELLOW\n        )\n        self.add(NumberPlane(), graph)\n```\ngenerate\\_points()[\\[source]](../_modules/manim/mobject/graphing/functions.html#ImplicitFunction.generate_points)[¶](#manim.mobject.graphing.functions.ImplicitFunction.generate_points \"Link to this definition\")\nInitializes `points` and therefore the shape.\nGets called upon creation. This is an empty method that can be implemented by\nsubclasses.\ninit\\_points()[¶](#manim.mobject.graphing.functions.ImplicitFunction.init_points \"Link to this definition\")\nInitializes `points` and therefore the shape.\nGets called upon creation. This is an empty method that can be implemented by\nsubclasses.",
  "scraped_at": "2025-06-24T17:52:08.294329",
  "content_length": 5403,
  "domain": "docs.manim.community",
  "word_count": 612,
  "inspection_status": "approved",
  "filename": "ImplicitFunction - Manim Community v0.19.0_20250624_175208.json",
  "saved_at": "2025-06-24T17:52:08.294418",
  "approved_at": "2025-06-25T17:18:58.387081"
}