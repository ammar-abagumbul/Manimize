{
  "doc_id": "5cbfc56d05c760dcc2ccf865824703da",
  "url": "https://docs.manim.community/en/latest/reference/manim.animation.movement.MoveAlongPath.html",
  "title": "MoveAlongPath - Manim Community v0.19.0",
  "content": "MoveAlongPath[¶](#movealongpath \"Link to this heading\")\n=======================================================\nQualified name: `manim.animation.movement.MoveAlongPath`\n*class* MoveAlongPath(*mobject\\=None*, *\\*args*, *use\\_override\\=True*, *\\*\\*kwargs*)[\\[source]](../_modules/manim/animation/movement.html#MoveAlongPath)[¶](#manim.animation.movement.MoveAlongPath \"Link to this definition\")\nBases: [`Animation`](manim.animation.animation.Animation.html#manim.animation.animation.Animation \"manim.animation.animation.Animation\")\nMake one mobject move along the path of another mobject.\nExample: MoveAlongPathExample [¶](#movealongpathexample)\n```\nfrom manim import *\nclass MoveAlongPathExample(Scene):\n    def construct(self):\n        d1 = Dot().set_color(ORANGE)\n        l1 = Line(LEFT, RIGHT)\n        l2 = VMobject()\n        self.add(d1, l1, l2)\n        l2.add_updater(lambda x: x.become(Line(LEFT, d1.get_center()).set_color(ORANGE)))\n        self.play(MoveAlongPath(d1, l1), rate_func=linear)\n```\n```\nclass MoveAlongPathExample(Scene):\n    def construct(self):\n        d1 = Dot().set_color(ORANGE)\n        l1 = Line(LEFT, RIGHT)\n        l2 = VMobject()\n        self.add(d1, l1, l2)\n        l2.add_updater(lambda x: x.become(Line(LEFT, d1.get_center()).set_color(ORANGE)))\n        self.play(MoveAlongPath(d1, l1), rate_func=linear)\n```\nMethods\n| [`interpolate_mobject`](#manim.animation.movement.MoveAlongPath.interpolate_mobject \"manim.animation.movement.MoveAlongPath.interpolate_mobject\") | Interpolates the mobject of the `Animation` based on alpha value. |\n| --- | --- |\nAttributes\n| `run_time` |  |\n| --- | --- |\nParameters:\n* **mobject** ([*Mobject*](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\"))\n* **path** ([*VMobject*](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\"))\n* **suspend\\_mobject\\_updating** (*bool*)\n\\_original\\_\\_init\\_\\_(*mobject*, *path*, *suspend\\_mobject\\_updating\\=False*, *\\*\\*kwargs*)[¶](#manim.animation.movement.MoveAlongPath._original__init__ \"Link to this definition\")\nInitialize self. See help(type(self)) for accurate signature.\nParameters:\n* **mobject** ([*Mobject*](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\"))\n* **path** ([*VMobject*](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\"))\n* **suspend\\_mobject\\_updating** (*bool*)\nReturn type:\nNone\ninterpolate\\_mobject(*alpha*)[\\[source]](../_modules/manim/animation/movement.html#MoveAlongPath.interpolate_mobject)[¶](#manim.animation.movement.MoveAlongPath.interpolate_mobject \"Link to this definition\")\nInterpolates the mobject of the `Animation` based on alpha value.\nParameters:\n**alpha** (*float*) – A float between 0 and 1 expressing the ratio to which the animation\nis completed. For example, alpha\\-values of 0, 0\\.5, and 1 correspond\nto the animation being completed 0%, 50%, and 100%, respectively.\nReturn type:\nNone",
  "scraped_at": "2025-06-24T17:42:37.122234",
  "content_length": 3129,
  "domain": "docs.manim.community",
  "word_count": 219,
  "inspection_status": "approved",
  "filename": "MoveAlongPath - Manim Community v0.19.0_20250624_174237.json",
  "saved_at": "2025-06-24T17:42:37.122294",
  "approved_at": "2025-06-25T17:18:58.341273"
}