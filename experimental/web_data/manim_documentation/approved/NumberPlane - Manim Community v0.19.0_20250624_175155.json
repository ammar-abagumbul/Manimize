{
  "doc_id": "6c98281f509d74bc9125c69da7bb76a4",
  "url": "https://docs.manim.community/en/latest/reference/manim.mobject.graphing.coordinate_systems.NumberPlane.html",
  "title": "NumberPlane - Manim Community v0.19.0",
  "content": "NumberPlane[¶](#numberplane \"Link to this heading\")\n===================================================\nQualified name: `manim.mobject.graphing.coordinate\\_systems.NumberPlane`\n*class* NumberPlane(*x\\_range\\=(\\-7\\.111111111111111, 7\\.111111111111111, 1\\)*, *y\\_range\\=(\\-4\\.0, 4\\.0, 1\\)*, *x\\_length\\=None*, *y\\_length\\=None*, *background\\_line\\_style\\=None*, *faded\\_line\\_style\\=None*, *faded\\_line\\_ratio\\=1*, *make\\_smooth\\_after\\_applying\\_functions\\=True*, *\\*\\*kwargs*)[\\[source]](../_modules/manim/mobject/graphing/coordinate_systems.html#NumberPlane)[¶](#manim.mobject.graphing.coordinate_systems.NumberPlane \"Link to this definition\")\nBases: [`Axes`](manim.mobject.graphing.coordinate_systems.Axes.html#manim.mobject.graphing.coordinate_systems.Axes \"manim.mobject.graphing.coordinate_systems.Axes\")\nCreates a cartesian plane with background lines.\nParameters:\n* **x\\_range** (*Sequence**\\[**float**]* *\\|* *None*) – The `[x_min, x_max, x_step]` values of the plane in the horizontal direction.\n* **y\\_range** (*Sequence**\\[**float**]* *\\|* *None*) – The `[y_min, y_max, y_step]` values of the plane in the vertical direction.\n* **x\\_length** (*float* *\\|* *None*) – The width of the plane.\n* **y\\_length** (*float* *\\|* *None*) – The height of the plane.\n* **background\\_line\\_style** (*dict**\\[**str**,* *Any**]* *\\|* *None*) – Arguments that influence the construction of the background lines of the plane.\n* **faded\\_line\\_style** (*dict**\\[**str**,* *Any**]* *\\|* *None*) – Similar to `background_line_style`, affects the construction of the scene’s background lines.\n* **faded\\_line\\_ratio** (*int*) – Determines the number of boxes within the background lines: `2` \\= 4 boxes, `3` \\= 9 boxes.\n* **make\\_smooth\\_after\\_applying\\_functions** (*bool*) – Currently non\\-functional.\n* **kwargs** (*dict**\\[**str**,* *Any**]*) – Additional arguments to be passed to [`Axes`](manim.mobject.graphing.coordinate_systems.Axes.html#manim.mobject.graphing.coordinate_systems.Axes \"manim.mobject.graphing.coordinate_systems.Axes\").\nNote\nIf `x_length` or `y_length` are not defined, they are automatically calculated such that\none unit on each axis is one Manim unit long.\nExamples\nExample: NumberPlaneExample [¶](#numberplaneexample)\n![../_images/NumberPlaneExample-1.png](../_images/NumberPlaneExample-1.png)\n```\nfrom manim import *\nclass NumberPlaneExample(Scene):\n    def construct(self):\n        number_plane = NumberPlane(\n            background_line_style={\n                \"stroke_color\": TEAL,\n                \"stroke_width\": 4,\n                \"stroke_opacity\": 0.6\n            }\n        )\n        self.add(number_plane)\n```\n```\nclass NumberPlaneExample(Scene):\n    def construct(self):\n        number_plane = NumberPlane(\n            background_line_style={\n                \"stroke_color\": TEAL,\n                \"stroke_width\": 4,\n                \"stroke_opacity\": 0.6\n            }\n        )\n        self.add(number_plane)\n```\nExample: NumberPlaneScaled [¶](#numberplanescaled)\n![../_images/NumberPlaneScaled-1.png](../_images/NumberPlaneScaled-1.png)\n```\nfrom manim import *\nclass NumberPlaneScaled(Scene):\n    def construct(self):\n        number_plane = NumberPlane(\n            x_range=(-4, 11, 1),\n            y_range=(-3, 3, 1),\n            x_length=5,\n            y_length=2,\n        ).move_to(LEFT*3)\n        number_plane_scaled_y = NumberPlane(\n            x_range=(-4, 11, 1),\n            x_length=5,\n            y_length=4,\n        ).move_to(RIGHT*3)\n        self.add(number_plane)\n        self.add(number_plane_scaled_y)\n```\n```\nclass NumberPlaneScaled(Scene):\n    def construct(self):\n        number_plane = NumberPlane(\n            x_range=(-4, 11, 1),\n            y_range=(-3, 3, 1),\n            x_length=5,\n            y_length=2,\n        ).move_to(LEFT*3)\n        number_plane_scaled_y = NumberPlane(\n            x_range=(-4, 11, 1),\n            x_length=5,\n            y_length=4,\n        ).move_to(RIGHT*3)\n        self.add(number_plane)\n        self.add(number_plane_scaled_y)\n```\nMethods\n| `get_vector` |  |\n| --- | --- |\n| `prepare_for_nonlinear_transform` |  |\nAttributes\n| `animate` | Used to animate the application of any method of `self`. |\n| --- | --- |\n| `animation_overrides` |  |\n| `color` |  |\n| `depth` | The depth of the mobject. |\n| `fill_color` | If there are multiple colors (for gradient) this returns the first one |\n| `height` | The height of the mobject. |\n| `n_points_per_curve` |  |\n| `sheen_factor` |  |\n| `stroke_color` |  |\n| `width` | The width of the mobject. |\n\\_get\\_lines()[\\[source]](../_modules/manim/mobject/graphing/coordinate_systems.html#NumberPlane._get_lines)[¶](#manim.mobject.graphing.coordinate_systems.NumberPlane._get_lines \"Link to this definition\")\nGenerate all the lines, faded and not faded.Two sets of lines are generated: one parallel to the X\\-axis, and parallel to the Y\\-axis.\nReturns:\nThe first (i.e the non faded lines) and second (i.e the faded lines) sets of lines, respectively.\nReturn type:\nTuple\\[[`VGroup`](manim.mobject.types.vectorized_mobject.VGroup.html#manim.mobject.types.vectorized_mobject.VGroup \"manim.mobject.types.vectorized_mobject.VGroup\"), [`VGroup`](manim.mobject.types.vectorized_mobject.VGroup.html#manim.mobject.types.vectorized_mobject.VGroup \"manim.mobject.types.vectorized_mobject.VGroup\")]\n\\_get\\_lines\\_parallel\\_to\\_axis(*axis\\_parallel\\_to*, *axis\\_perpendicular\\_to*, *freq*, *ratio\\_faded\\_lines*)[\\[source]](../_modules/manim/mobject/graphing/coordinate_systems.html#NumberPlane._get_lines_parallel_to_axis)[¶](#manim.mobject.graphing.coordinate_systems.NumberPlane._get_lines_parallel_to_axis \"Link to this definition\")\nGenerate a set of lines parallel to an axis.\nParameters:\n* **axis\\_parallel\\_to** ([*NumberLine*](manim.mobject.graphing.number_line.NumberLine.html#manim.mobject.graphing.number_line.NumberLine \"manim.mobject.graphing.number_line.NumberLine\")) – The axis with which the lines will be parallel.\n* **axis\\_perpendicular\\_to** ([*NumberLine*](manim.mobject.graphing.number_line.NumberLine.html#manim.mobject.graphing.number_line.NumberLine \"manim.mobject.graphing.number_line.NumberLine\")) – The axis with which the lines will be perpendicular.\n* **ratio\\_faded\\_lines** (*int*) – The ratio between the space between faded lines and the space between non\\-faded lines.\n* **freq** (*float*) – Frequency of non\\-faded lines (number of non\\-faded lines per graph unit).\nReturns:\nThe first (i.e the non\\-faded lines parallel to axis\\_parallel\\_to) and second(i.e the faded lines parallel to axis\\_parallel\\_to) sets of lines, respectively.\nReturn type:\nTuple\\[[`VGroup`](manim.mobject.types.vectorized_mobject.VGroup.html#manim.mobject.types.vectorized_mobject.VGroup \"manim.mobject.types.vectorized_mobject.VGroup\"), [`VGroup`](manim.mobject.types.vectorized_mobject.VGroup.html#manim.mobject.types.vectorized_mobject.VGroup \"manim.mobject.types.vectorized_mobject.VGroup\")]\n\\_init\\_background\\_lines()[\\[source]](../_modules/manim/mobject/graphing/coordinate_systems.html#NumberPlane._init_background_lines)[¶](#manim.mobject.graphing.coordinate_systems.NumberPlane._init_background_lines \"Link to this definition\")\nWill init all the lines of NumberPlanes (faded or not)\nReturn type:\nNone\n\\_original\\_\\_init\\_\\_(*x\\_range\\=(\\-7\\.111111111111111, 7\\.111111111111111, 1\\)*, *y\\_range\\=(\\-4\\.0, 4\\.0, 1\\)*, *x\\_length\\=None*, *y\\_length\\=None*, *background\\_line\\_style\\=None*, *faded\\_line\\_style\\=None*, *faded\\_line\\_ratio\\=1*, *make\\_smooth\\_after\\_applying\\_functions\\=True*, *\\*\\*kwargs*)[¶](#manim.mobject.graphing.coordinate_systems.NumberPlane._original__init__ \"Link to this definition\")\nInitialize self. See help(type(self)) for accurate signature.\nParameters:\n* **x\\_range** (*Sequence**\\[**float**]* *\\|* *None*)\n* **y\\_range** (*Sequence**\\[**float**]* *\\|* *None*)\n* **x\\_length** (*float* *\\|* *None*)\n* **y\\_length** (*float* *\\|* *None*)\n* **background\\_line\\_style** (*dict**\\[**str**,* *Any**]* *\\|* *None*)\n* **faded\\_line\\_style** (*dict**\\[**str**,* *Any**]* *\\|* *None*)\n* **faded\\_line\\_ratio** (*int*)\n* **make\\_smooth\\_after\\_applying\\_functions** (*bool*)\n* **kwargs** (*dict**\\[**str**,* *Any**]*)",
  "scraped_at": "2025-06-24T17:51:55.484256",
  "content_length": 8163,
  "domain": "docs.manim.community",
  "word_count": 651,
  "inspection_status": "approved",
  "filename": "NumberPlane - Manim Community v0.19.0_20250624_175155.json",
  "saved_at": "2025-06-24T17:51:55.484329",
  "approved_at": "2025-06-25T17:18:58.336770"
}