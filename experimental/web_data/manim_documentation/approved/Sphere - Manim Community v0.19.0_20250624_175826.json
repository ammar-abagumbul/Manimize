{
  "doc_id": "807188c136592b89f19703ef773ff129",
  "url": "https://docs.manim.community/en/latest/reference/manim.mobject.three_d.three_dimensions.Sphere.html",
  "title": "Sphere - Manim Community v0.19.0",
  "content": "Sphere[¶](#sphere \"Link to this heading\")\n=========================================\nQualified name: `manim.mobject.three\\_d.three\\_dimensions.Sphere`\n*class* Sphere(*center\\=array(\\[0\\., 0\\., 0\\.])*, *radius\\=1*, *resolution\\=None*, *u\\_range\\=(0, 6\\.283185307179586\\)*, *v\\_range\\=(0, 3\\.141592653589793\\)*, *\\*\\*kwargs*)[\\[source]](../_modules/manim/mobject/three_d/three_dimensions.html#Sphere)[¶](#manim.mobject.three_d.three_dimensions.Sphere \"Link to this definition\")\nBases: [`Surface`](manim.mobject.three_d.three_dimensions.Surface.html#manim.mobject.three_d.three_dimensions.Surface \"manim.mobject.three_d.three_dimensions.Surface\")\nA three\\-dimensional sphere.\nParameters:\n* **center** ([*Point3DLike*](manim.typing.html#manim.typing.Point3DLike \"manim.typing.Point3DLike\")) – Center of the [`Sphere`](#manim.mobject.three_d.three_dimensions.Sphere \"manim.mobject.three_d.three_dimensions.Sphere\").\n* **radius** (*float*) – The radius of the [`Sphere`](#manim.mobject.three_d.three_dimensions.Sphere \"manim.mobject.three_d.three_dimensions.Sphere\").\n* **resolution** (*Sequence**\\[**int**]* *\\|* *None*) – The number of samples taken of the [`Sphere`](#manim.mobject.three_d.three_dimensions.Sphere \"manim.mobject.three_d.three_dimensions.Sphere\"). A tuple can be used\nto define different resolutions for `u` and `v` respectively.\n* **u\\_range** (*Sequence**\\[**float**]*) – The range of the `u` variable: `(u_min, u_max)`.\n* **v\\_range** (*Sequence**\\[**float**]*) – The range of the `v` variable: `(v_min, v_max)`.\nExamples\nExample: ExampleSphere [¶](#examplesphere)\n![../_images/ExampleSphere-1.png](../_images/ExampleSphere-1.png)\n```\nfrom manim import *\nclass ExampleSphere(ThreeDScene):\n    def construct(self):\n        self.set_camera_orientation(phi=PI / 6, theta=PI / 6)\n        sphere1 = Sphere(\n            center=(3, 0, 0),\n            radius=1,\n            resolution=(20, 20),\n            u_range=[0.001, PI - 0.001],\n            v_range=[0, TAU]\n        )\n        sphere1.set_color(RED)\n        self.add(sphere1)\n        sphere2 = Sphere(center=(-1, -3, 0), radius=2, resolution=(18, 18))\n        sphere2.set_color(GREEN)\n        self.add(sphere2)\n        sphere3 = Sphere(center=(-1, 2, 0), radius=2, resolution=(16, 16))\n        sphere3.set_color(BLUE)\n        self.add(sphere3)\n```\n```\nclass ExampleSphere(ThreeDScene):\n    def construct(self):\n        self.set_camera_orientation(phi=PI / 6, theta=PI / 6)\n        sphere1 = Sphere(\n            center=(3, 0, 0),\n            radius=1,\n            resolution=(20, 20),\n            u_range=[0.001, PI - 0.001],\n            v_range=[0, TAU]\n        )\n        sphere1.set_color(RED)\n        self.add(sphere1)\n        sphere2 = Sphere(center=(-1, -3, 0), radius=2, resolution=(18, 18))\n        sphere2.set_color(GREEN)\n        self.add(sphere2)\n        sphere3 = Sphere(center=(-1, 2, 0), radius=2, resolution=(16, 16))\n        sphere3.set_color(BLUE)\n        self.add(sphere3)\n```\nMethods\n| [`func`](#manim.mobject.three_d.three_dimensions.Sphere.func \"manim.mobject.three_d.three_dimensions.Sphere.func\") | The z values defining the [`Sphere`](#manim.mobject.three_d.three_dimensions.Sphere \"manim.mobject.three_d.three_dimensions.Sphere\") being plotted. |\n| --- | --- |\nAttributes\n| `animate` | Used to animate the application of any method of `self`. |\n| --- | --- |\n| `animation_overrides` |  |\n| `color` |  |\n| `depth` | The depth of the mobject. |\n| `fill_color` | If there are multiple colors (for gradient) this returns the first one |\n| `height` | The height of the mobject. |\n| `n_points_per_curve` |  |\n| `sheen_factor` |  |\n| `stroke_color` |  |\n| `width` | The width of the mobject. |\n\\_original\\_\\_init\\_\\_(*center\\=array(\\[0\\., 0\\., 0\\.])*, *radius\\=1*, *resolution\\=None*, *u\\_range\\=(0, 6\\.283185307179586\\)*, *v\\_range\\=(0, 3\\.141592653589793\\)*, *\\*\\*kwargs*)[¶](#manim.mobject.three_d.three_dimensions.Sphere._original__init__ \"Link to this definition\")\nInitialize self. See help(type(self)) for accurate signature.\nParameters:\n* **center** ([*Point3DLike*](manim.typing.html#manim.typing.Point3DLike \"manim.typing.Point3DLike\"))\n* **radius** (*float*)\n* **resolution** (*Sequence**\\[**int**]* *\\|* *None*)\n* **u\\_range** (*Sequence**\\[**float**]*)\n* **v\\_range** (*Sequence**\\[**float**]*)\nReturn type:\nNone\nfunc(*u*, *v*)[\\[source]](../_modules/manim/mobject/three_d/three_dimensions.html#Sphere.func)[¶](#manim.mobject.three_d.three_dimensions.Sphere.func \"Link to this definition\")\nThe z values defining the [`Sphere`](#manim.mobject.three_d.three_dimensions.Sphere \"manim.mobject.three_d.three_dimensions.Sphere\") being plotted.\nReturns:\nThe z values defining the [`Sphere`](#manim.mobject.three_d.three_dimensions.Sphere \"manim.mobject.three_d.three_dimensions.Sphere\").\nReturn type:\n`numpy.array`\nParameters:\n* **u** (*float*)\n* **v** (*float*)",
  "scraped_at": "2025-06-24T17:58:26.237393",
  "content_length": 4846,
  "domain": "docs.manim.community",
  "word_count": 392,
  "inspection_status": "approved",
  "filename": "Sphere - Manim Community v0.19.0_20250624_175826.json",
  "saved_at": "2025-06-24T17:58:26.237451",
  "approved_at": "2025-06-25T17:18:58.372156"
}