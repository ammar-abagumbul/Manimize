{
  "doc_id": "6aaf1c46c83325df2e2a8c8d0a7fc835",
  "url": "https://docs.manim.community/en/latest/reference/manim.animation.changing.TracedPath.html",
  "title": "TracedPath - Manim Community v0.19.0",
  "content": "TracedPath[¶](#tracedpath \"Link to this heading\")\n=================================================\nQualified name: `manim.animation.changing.TracedPath`\n*class* TracedPath(*traced\\_point\\_func*, *stroke\\_width\\=2*, *stroke\\_color\\=ManimColor('\\#FFFFFF')*, *dissipating\\_time\\=None*, *\\*\\*kwargs*)[\\[source]](../_modules/manim/animation/changing.html#TracedPath)[¶](#manim.animation.changing.TracedPath \"Link to this definition\")\nBases: [`VMobject`](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\")\nTraces the path of a point returned by a function call.\nParameters:\n* **traced\\_point\\_func** (*Callable*) – The function to be traced.\n* **stroke\\_width** (*float*) – The width of the trace.\n* **stroke\\_color** ([*ParsableManimColor*](manim.utils.color.core.html#manim.utils.color.core.ParsableManimColor \"manim.utils.color.core.ParsableManimColor\") *\\|* *None*) – The color of the trace.\n* **dissipating\\_time** (*float* *\\|* *None*) – The time taken for the path to dissipate. Default set to `None`\nwhich disables dissipation.\n* **kwargs** (*Any*)\nExamples\nExample: TracedPathExample [¶](#tracedpathexample)\n```\nfrom manim import *\nclass TracedPathExample(Scene):\n    def construct(self):\n        circ = Circle(color=RED).shift(4*LEFT)\n        dot = Dot(color=RED).move_to(circ.get_start())\n        rolling_circle = VGroup(circ, dot)\n        trace = TracedPath(circ.get_start)\n        rolling_circle.add_updater(lambda m: m.rotate(-0.3))\n        self.add(trace, rolling_circle)\n        self.play(rolling_circle.animate.shift(8*RIGHT), run_time=4, rate_func=linear)\n```\n```\nclass TracedPathExample(Scene):\n    def construct(self):\n        circ = Circle(color=RED).shift(4*LEFT)\n        dot = Dot(color=RED).move_to(circ.get_start())\n        rolling_circle = VGroup(circ, dot)\n        trace = TracedPath(circ.get_start)\n        rolling_circle.add_updater(lambda m: m.rotate(-0.3))\n        self.add(trace, rolling_circle)\n        self.play(rolling_circle.animate.shift(8*RIGHT), run_time=4, rate_func=linear)\n```\nExample: DissipatingPathExample [¶](#dissipatingpathexample)\n```\nfrom manim import *\nclass DissipatingPathExample(Scene):\n    def construct(self):\n        a = Dot(RIGHT * 2)\n        b = TracedPath(a.get_center, dissipating_time=0.5, stroke_opacity=[0, 1])\n        self.add(a, b)\n        self.play(a.animate(path_arc=PI / 4).shift(LEFT * 2))\n        self.play(a.animate(path_arc=-PI / 4).shift(LEFT * 2))\n        self.wait()\n```\n```\nclass DissipatingPathExample(Scene):\n    def construct(self):\n        a = Dot(RIGHT * 2)\n        b = TracedPath(a.get_center, dissipating_time=0.5, stroke_opacity=[0, 1])\n        self.add(a, b)\n        self.play(a.animate(path_arc=PI / 4).shift(LEFT * 2))\n        self.play(a.animate(path_arc=-PI / 4).shift(LEFT * 2))\n        self.wait()\n```\nMethods\n| `update_path` |  |\n| --- | --- |\nAttributes\n| `animate` | Used to animate the application of any method of `self`. |\n| --- | --- |\n| `animation_overrides` |  |\n| `color` |  |\n| `depth` | The depth of the mobject. |\n| `fill_color` | If there are multiple colors (for gradient) this returns the first one |\n| `height` | The height of the mobject. |\n| `n_points_per_curve` |  |\n| `sheen_factor` |  |\n| `stroke_color` |  |\n| `width` | The width of the mobject. |\n\\_original\\_\\_init\\_\\_(*traced\\_point\\_func*, *stroke\\_width\\=2*, *stroke\\_color\\=ManimColor('\\#FFFFFF')*, *dissipating\\_time\\=None*, *\\*\\*kwargs*)[¶](#manim.animation.changing.TracedPath._original__init__ \"Link to this definition\")\nInitialize self. See help(type(self)) for accurate signature.\nParameters:\n* **traced\\_point\\_func** (*Callable*)\n* **stroke\\_width** (*float*)\n* **stroke\\_color** ([*ParsableManimColor*](manim.utils.color.core.html#manim.utils.color.core.ParsableManimColor \"manim.utils.color.core.ParsableManimColor\") *\\|* *None*)\n* **dissipating\\_time** (*float* *\\|* *None*)\n* **kwargs** (*Any*)\nReturn type:\nNone",
  "scraped_at": "2025-06-24T17:40:46.080648",
  "content_length": 3991,
  "domain": "docs.manim.community",
  "word_count": 350,
  "inspection_status": "approved",
  "filename": "TracedPath - Manim Community v0.19.0_20250624_174046.json",
  "saved_at": "2025-06-24T17:40:46.080700",
  "approved_at": "2025-06-25T17:18:58.394538"
}