{
  "doc_id": "3d98132cb4893524581edd2a6dd9a11f",
  "url": "https://docs.manim.community/en/latest/reference/manim.mobject.vector_field.VectorField.html",
  "title": "VectorField - Manim Community v0.19.0",
  "content": "VectorField[¶](#vectorfield \"Link to this heading\")\n===================================================\nQualified name: `manim.mobject.vector\\_field.VectorField`\n*class* VectorField(*func*, *color\\=None*, *color\\_scheme\\=None*, *min\\_color\\_scheme\\_value\\=0*, *max\\_color\\_scheme\\_value\\=2*, *colors\\=\\[ManimColor('\\#236B8E'), ManimColor('\\#83C167'), ManimColor('\\#FFFF00'), ManimColor('\\#FC6255')]*, *\\*\\*kwargs*)[\\[source]](../_modules/manim/mobject/vector_field.html#VectorField)[¶](#manim.mobject.vector_field.VectorField \"Link to this definition\")\nBases: [`VGroup`](manim.mobject.types.vectorized_mobject.VGroup.html#manim.mobject.types.vectorized_mobject.VGroup \"manim.mobject.types.vectorized_mobject.VGroup\")\nA vector field.\nVector fields are based on a function defining a vector at every position.\nThis class does by default not include any visible elements but provides\nmethods to move other [`Mobject`](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\") s along the vector field.\nParameters:\n* **func** (*Callable**\\[**\\[**np.ndarray**]**,* *np.ndarray**]*) – The function defining the rate of change at every position of the VectorField.\n* **color** ([*ParsableManimColor*](manim.utils.color.core.html#manim.utils.color.core.ParsableManimColor \"manim.utils.color.core.ParsableManimColor\") *\\|* *None*) – The color of the vector field. If set, position\\-specific coloring is disabled.\n* **color\\_scheme** (*Callable**\\[**\\[**np.ndarray**]**,* *float**]* *\\|* *None*) – A function mapping a vector to a single value. This value gives the position in the color gradient defined using min\\_color\\_scheme\\_value, max\\_color\\_scheme\\_value and colors.\n* **min\\_color\\_scheme\\_value** (*float*) – The value of the color\\_scheme function to be mapped to the first color in colors. Lower values also result in the first color of the gradient.\n* **max\\_color\\_scheme\\_value** (*float*) – The value of the color\\_scheme function to be mapped to the last color in colors. Higher values also result in the last color of the gradient.\n* **colors** (*Sequence**\\[*[*ParsableManimColor*](manim.utils.color.core.html#manim.utils.color.core.ParsableManimColor \"manim.utils.color.core.ParsableManimColor\")*]*) – The colors defining the color gradient of the vector field.\n* **kwargs** – Additional arguments to be passed to the [`VGroup`](manim.mobject.types.vectorized_mobject.VGroup.html#manim.mobject.types.vectorized_mobject.VGroup \"manim.mobject.types.vectorized_mobject.VGroup\") constructor\nMethods\n| [`fit_to_coordinate_system`](#manim.mobject.vector_field.VectorField.fit_to_coordinate_system \"manim.mobject.vector_field.VectorField.fit_to_coordinate_system\") | Scale the vector field to fit a coordinate system. |\n| --- | --- |\n| [`get_colored_background_image`](#manim.mobject.vector_field.VectorField.get_colored_background_image \"manim.mobject.vector_field.VectorField.get_colored_background_image\") | Generate an image that displays the vector field. |\n| [`get_nudge_updater`](#manim.mobject.vector_field.VectorField.get_nudge_updater \"manim.mobject.vector_field.VectorField.get_nudge_updater\") | Get an update function to move a [`Mobject`](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\") along the vector field. |\n| [`get_vectorized_rgba_gradient_function`](#manim.mobject.vector_field.VectorField.get_vectorized_rgba_gradient_function \"manim.mobject.vector_field.VectorField.get_vectorized_rgba_gradient_function\") | Generates a gradient of rgbas as a numpy array |\n| [`nudge`](#manim.mobject.vector_field.VectorField.nudge \"manim.mobject.vector_field.VectorField.nudge\") | Nudge a [`Mobject`](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\") along the vector field. |\n| [`nudge_submobjects`](#manim.mobject.vector_field.VectorField.nudge_submobjects \"manim.mobject.vector_field.VectorField.nudge_submobjects\") | Apply a nudge along the vector field to all submobjects. |\n| [`scale_func`](#manim.mobject.vector_field.VectorField.scale_func \"manim.mobject.vector_field.VectorField.scale_func\") | Scale a vector field function. |\n| [`shift_func`](#manim.mobject.vector_field.VectorField.shift_func \"manim.mobject.vector_field.VectorField.shift_func\") | Shift a vector field function. |\n| [`start_submobject_movement`](#manim.mobject.vector_field.VectorField.start_submobject_movement \"manim.mobject.vector_field.VectorField.start_submobject_movement\") | Start continuously moving all submobjects along the vector field. |\n| [`stop_submobject_movement`](#manim.mobject.vector_field.VectorField.stop_submobject_movement \"manim.mobject.vector_field.VectorField.stop_submobject_movement\") | Stops the continuous movement started using [`start_submobject_movement()`](#manim.mobject.vector_field.VectorField.start_submobject_movement \"manim.mobject.vector_field.VectorField.start_submobject_movement\"). |\nAttributes\n| `animate` | Used to animate the application of any method of `self`. |\n| --- | --- |\n| `animation_overrides` |  |\n| `color` |  |\n| `depth` | The depth of the mobject. |\n| `fill_color` | If there are multiple colors (for gradient) this returns the first one |\n| `height` | The height of the mobject. |\n| `n_points_per_curve` |  |\n| `sheen_factor` |  |\n| `stroke_color` |  |\n| `width` | The width of the mobject. |\n\\_original\\_\\_init\\_\\_(*func*, *color\\=None*, *color\\_scheme\\=None*, *min\\_color\\_scheme\\_value\\=0*, *max\\_color\\_scheme\\_value\\=2*, *colors\\=\\[ManimColor('\\#236B8E'), ManimColor('\\#83C167'), ManimColor('\\#FFFF00'), ManimColor('\\#FC6255')]*, *\\*\\*kwargs*)[¶](#manim.mobject.vector_field.VectorField._original__init__ \"Link to this definition\")\nInitialize self. See help(type(self)) for accurate signature.\nParameters:\n* **func** (*Callable**\\[**\\[**np.ndarray**]**,* *np.ndarray**]*)\n* **color** ([*ParsableManimColor*](manim.utils.color.core.html#manim.utils.color.core.ParsableManimColor \"manim.utils.color.core.ParsableManimColor\") *\\|* *None*)\n* **color\\_scheme** (*Callable**\\[**\\[**np.ndarray**]**,* *float**]* *\\|* *None*)\n* **min\\_color\\_scheme\\_value** (*float*)\n* **max\\_color\\_scheme\\_value** (*float*)\n* **colors** (*Sequence**\\[*[*ParsableManimColor*](manim.utils.color.core.html#manim.utils.color.core.ParsableManimColor \"manim.utils.color.core.ParsableManimColor\")*]*)\nfit\\_to\\_coordinate\\_system(*coordinate\\_system*)[\\[source]](../_modules/manim/mobject/vector_field.html#VectorField.fit_to_coordinate_system)[¶](#manim.mobject.vector_field.VectorField.fit_to_coordinate_system \"Link to this definition\")\nScale the vector field to fit a coordinate system.\nThis method is useful when the vector field is defined in a coordinate system\ndifferent from the one used to display the vector field.\nThis method can only be used once because it transforms the origin of each vector.\nParameters:\n**coordinate\\_system** ([*CoordinateSystem*](manim.mobject.graphing.coordinate_systems.CoordinateSystem.html#manim.mobject.graphing.coordinate_systems.CoordinateSystem \"manim.mobject.graphing.coordinate_systems.CoordinateSystem\")) – The coordinate system to fit the vector field to.\nget\\_colored\\_background\\_image(*sampling\\_rate\\=5*)[\\[source]](../_modules/manim/mobject/vector_field.html#VectorField.get_colored_background_image)[¶](#manim.mobject.vector_field.VectorField.get_colored_background_image \"Link to this definition\")\nGenerate an image that displays the vector field.\nThe color at each position is calculated by passing the positing through a\nseries of steps:\nCalculate the vector field function at that position, map that vector to a\nsingle value using self.color\\_scheme and finally generate a color from\nthat value using the color gradient.\nParameters:\n**sampling\\_rate** (*int*) – The stepsize at which pixels get included in the image. Lower values give\nmore accurate results, but may take a long time to compute.\nReturns:\nThe vector field image.\nReturn type:\nImage.Imgae\nget\\_nudge\\_updater(*speed\\=1*, *pointwise\\=False*)[\\[source]](../_modules/manim/mobject/vector_field.html#VectorField.get_nudge_updater)[¶](#manim.mobject.vector_field.VectorField.get_nudge_updater \"Link to this definition\")\nGet an update function to move a [`Mobject`](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\") along the vector field.\nWhen used with [`add_updater()`](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject.add_updater \"manim.mobject.mobject.Mobject.add_updater\"), the mobject will move along the vector field, where its speed is determined by the magnitude of the vector field.\nParameters:\n* **speed** (*float*) – At speed\\=1 the distance a mobject moves per second is equal to the magnitude of the vector field along its path. The speed value scales the speed of such a mobject.\n* **pointwise** (*bool*) – Whether to move the mobject along the vector field. See [`nudge()`](#manim.mobject.vector_field.VectorField.nudge \"manim.mobject.vector_field.VectorField.nudge\") for details.\nReturns:\nThe update function.\nReturn type:\nCallable\\[\\[[Mobject](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\"), float], [Mobject](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\")]\nget\\_vectorized\\_rgba\\_gradient\\_function(*start*, *end*, *colors*)[\\[source]](../_modules/manim/mobject/vector_field.html#VectorField.get_vectorized_rgba_gradient_function)[¶](#manim.mobject.vector_field.VectorField.get_vectorized_rgba_gradient_function \"Link to this definition\")\nGenerates a gradient of rgbas as a numpy array\nParameters:\n* **start** (*float*) – start value used for inverse interpolation at [`inverse_interpolate()`](manim.utils.bezier.html#manim.utils.bezier.inverse_interpolate \"manim.utils.bezier.inverse_interpolate\")\n* **end** (*float*) – end value used for inverse interpolation at [`inverse_interpolate()`](manim.utils.bezier.html#manim.utils.bezier.inverse_interpolate \"manim.utils.bezier.inverse_interpolate\")\n* **colors** (*Iterable**\\[**TypeAliasForwardRef**(**'\\~manim.utils.color.core.ParsableManimColor'**)**]*) – list of colors to generate the gradient\nReturn type:\nfunction to generate the gradients as numpy arrays representing rgba values\nnudge(*mob*, *dt\\=1*, *substeps\\=1*, *pointwise\\=False*)[\\[source]](../_modules/manim/mobject/vector_field.html#VectorField.nudge)[¶](#manim.mobject.vector_field.VectorField.nudge \"Link to this definition\")\nNudge a [`Mobject`](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\") along the vector field.\nParameters:\n* **mob** ([*Mobject*](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\")) – The mobject to move along the vector field\n* **dt** (*float*) – A scalar to the amount the mobject is moved along the vector field.\nThe actual distance is based on the magnitude of the vector field.\n* **substeps** (*int*) – The amount of steps the whole nudge is divided into. Higher values\ngive more accurate approximations.\n* **pointwise** (*bool*) – Whether to move the mobject along the vector field. If False the\nvector field takes effect on the center of the given\n[`Mobject`](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\"). If True the vector field takes effect on the\npoints of the individual points of the [`Mobject`](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\"),\npotentially distorting it.\nReturns:\nThis vector field.\nReturn type:\n[VectorField](#manim.mobject.vector_field.VectorField \"manim.mobject.vector_field.VectorField\")\nExamples\nExample: Nudging [¶](#nudging)\n```\nfrom manim import *\nclass Nudging(Scene):\n    def construct(self):\n        func = lambda pos: np.sin(pos[1] / 2) * RIGHT + np.cos(pos[0] / 2) * UP\n        vector_field = ArrowVectorField(\n            func, x_range=[-7, 7, 1], y_range=[-4, 4, 1], length_func=lambda x: x / 2\n        )\n        self.add(vector_field)\n        circle = Circle(radius=2).shift(LEFT)\n        self.add(circle.copy().set_color(GRAY))\n        dot = Dot().move_to(circle)\n        vector_field.nudge(circle, -2, 60, True)\n        vector_field.nudge(dot, -2, 60)\n        circle.add_updater(vector_field.get_nudge_updater(pointwise=True))\n        dot.add_updater(vector_field.get_nudge_updater())\n        self.add(circle, dot)\n        self.wait(6)\n```\n```\nclass Nudging(Scene):\n    def construct(self):\n        func = lambda pos: np.sin(pos[1] / 2) * RIGHT + np.cos(pos[0] / 2) * UP\n        vector_field = ArrowVectorField(\n            func, x_range=[-7, 7, 1], y_range=[-4, 4, 1], length_func=lambda x: x / 2\n        )\n        self.add(vector_field)\n        circle = Circle(radius=2).shift(LEFT)\n        self.add(circle.copy().set_color(GRAY))\n        dot = Dot().move_to(circle)\n        vector_field.nudge(circle, -2, 60, True)\n        vector_field.nudge(dot, -2, 60)\n        circle.add_updater(vector_field.get_nudge_updater(pointwise=True))\n        dot.add_updater(vector_field.get_nudge_updater())\n        self.add(circle, dot)\n        self.wait(6)\n```\nnudge\\_submobjects(*dt\\=1*, *substeps\\=1*, *pointwise\\=False*)[\\[source]](../_modules/manim/mobject/vector_field.html#VectorField.nudge_submobjects)[¶](#manim.mobject.vector_field.VectorField.nudge_submobjects \"Link to this definition\")\nApply a nudge along the vector field to all submobjects.\nParameters:\n* **dt** (*float*) – A scalar to the amount the mobject is moved along the vector field.\nThe actual distance is based on the magnitude of the vector field.\n* **substeps** (*int*) – The amount of steps the whole nudge is divided into. Higher values\ngive more accurate approximations.\n* **pointwise** (*bool*) – Whether to move the mobject along the vector field. See [`nudge()`](#manim.mobject.vector_field.VectorField.nudge \"manim.mobject.vector_field.VectorField.nudge\") for details.\nReturns:\nThis vector field.\nReturn type:\n[VectorField](#manim.mobject.vector_field.VectorField \"manim.mobject.vector_field.VectorField\")\n*static* scale\\_func(*func*, *scalar*)[\\[source]](../_modules/manim/mobject/vector_field.html#VectorField.scale_func)[¶](#manim.mobject.vector_field.VectorField.scale_func \"Link to this definition\")\nScale a vector field function.\nParameters:\n* **func** (*Callable**\\[**\\[**ndarray**]**,* *ndarray**]*) – The function defining a vector field.\n* **scalar** (*float*) – The scalar to be applied to the vector field.\nReturn type:\n*Callable*\\[\\[*ndarray*], *ndarray*]\nExamples\nExample: ScaleVectorFieldFunction [¶](#scalevectorfieldfunction)\n```\nfrom manim import *\nclass ScaleVectorFieldFunction(Scene):\n    def construct(self):\n        func = lambda pos: np.sin(pos[1]) * RIGHT + np.cos(pos[0]) * UP\n        vector_field = ArrowVectorField(func)\n        self.add(vector_field)\n        self.wait()\n        func = VectorField.scale_func(func, 0.5)\n        self.play(vector_field.animate.become(ArrowVectorField(func)))\n        self.wait()\n```\n```\nclass ScaleVectorFieldFunction(Scene):\n    def construct(self):\n        func = lambda pos: np.sin(pos[1]) * RIGHT + np.cos(pos[0]) * UP\n        vector_field = ArrowVectorField(func)\n        self.add(vector_field)\n        self.wait()\n        func = VectorField.scale_func(func, 0.5)\n        self.play(vector_field.animate.become(ArrowVectorField(func)))\n        self.wait()\n```\nReturns:\nThe scaled vector field function.\nReturn type:\nCallable\\[\\[np.ndarray], np.ndarray]\nParameters:\n* **func** (*Callable**\\[**\\[**ndarray**]**,* *ndarray**]*)\n* **scalar** (*float*)\n*static* shift\\_func(*func*, *shift\\_vector*)[\\[source]](../_modules/manim/mobject/vector_field.html#VectorField.shift_func)[¶](#manim.mobject.vector_field.VectorField.shift_func \"Link to this definition\")\nShift a vector field function.\nParameters:\n* **func** (*Callable**\\[**\\[**ndarray**]**,* *ndarray**]*) – The function defining a vector field.\n* **shift\\_vector** (*ndarray*) – The shift to be applied to the vector field.\nReturns:\nThe shifted vector field function.\nReturn type:\nCallable\\[\\[np.ndarray], np.ndarray]\nstart\\_submobject\\_movement(*speed\\=1*, *pointwise\\=False*)[\\[source]](../_modules/manim/mobject/vector_field.html#VectorField.start_submobject_movement)[¶](#manim.mobject.vector_field.VectorField.start_submobject_movement \"Link to this definition\")\nStart continuously moving all submobjects along the vector field.\nCalling this method multiple times will result in removing the previous updater created by this method.\nParameters:\n* **speed** (*float*) – The speed at which to move the submobjects. See [`get_nudge_updater()`](#manim.mobject.vector_field.VectorField.get_nudge_updater \"manim.mobject.vector_field.VectorField.get_nudge_updater\") for details.\n* **pointwise** (*bool*) – Whether to move the mobject along the vector field. See [`nudge()`](#manim.mobject.vector_field.VectorField.nudge \"manim.mobject.vector_field.VectorField.nudge\") for details.\nReturns:\nThis vector field.\nReturn type:\n[VectorField](#manim.mobject.vector_field.VectorField \"manim.mobject.vector_field.VectorField\")\nstop\\_submobject\\_movement()[\\[source]](../_modules/manim/mobject/vector_field.html#VectorField.stop_submobject_movement)[¶](#manim.mobject.vector_field.VectorField.stop_submobject_movement \"Link to this definition\")\nStops the continuous movement started using [`start_submobject_movement()`](#manim.mobject.vector_field.VectorField.start_submobject_movement \"manim.mobject.vector_field.VectorField.start_submobject_movement\").\nReturns:\nThis vector field.\nReturn type:\n[VectorField](#manim.mobject.vector_field.VectorField \"manim.mobject.vector_field.VectorField\")",
  "scraped_at": "2025-06-24T18:33:42.120790",
  "content_length": 17716,
  "domain": "docs.manim.community",
  "word_count": 1448,
  "inspection_status": "approved",
  "filename": "VectorField - Manim Community v0.19.0_20250624_183342.json",
  "saved_at": "2025-06-24T18:33:42.120906",
  "approved_at": "2025-06-25T17:18:58.348544"
}