{
  "doc_id": "4446d12e19e8dbc7a568d03de8974d2f",
  "url": "https://docs.manim.community/en/latest/reference/manim.mobject.text.text_mobject.html",
  "title": "text_mobject - Manim Community v0.19.0",
  "content": "text\\_mobject[¶](#module-manim.mobject.text.text_mobject \"Link to this heading\")\n================================================================================\nMobjects used for displaying (non\\-LaTeX) text.\nNote\nJust as you can use [`Tex`](manim.mobject.text.tex_mobject.Tex.html#manim.mobject.text.tex_mobject.Tex \"manim.mobject.text.tex_mobject.Tex\") and [`MathTex`](manim.mobject.text.tex_mobject.MathTex.html#manim.mobject.text.tex_mobject.MathTex \"manim.mobject.text.tex_mobject.MathTex\") (from the module [`tex_mobject`](manim.mobject.text.tex_mobject.html#module-manim.mobject.text.tex_mobject \"manim.mobject.text.tex_mobject\"))\nto insert LaTeX to your videos, you can use [`Text`](manim.mobject.text.text_mobject.Text.html#manim.mobject.text.text_mobject.Text \"manim.mobject.text.text_mobject.Text\") to to add normal text.\nImportant\nSee the corresponding tutorial [Text Without LaTeX](../guides/using_text.html#using-text-objects), especially for information about fonts.\nThe simplest way to add text to your animations is to use the [`Text`](manim.mobject.text.text_mobject.Text.html#manim.mobject.text.text_mobject.Text \"manim.mobject.text.text_mobject.Text\") class. It uses the Pango library to render text.\nWith Pango, you are also able to render non\\-English alphabets like 你好 or こんにちは or 안녕하세요 or مرحبا بالعالم.\nExamples\nExample: HelloWorld [¶](#helloworld)\n![../_images/HelloWorld-2.png](../_images/HelloWorld-2.png)\n```\nfrom manim import *\nclass HelloWorld(Scene):\n    def construct(self):\n        text = Text('Hello world').scale(3)\n        self.add(text)\n```\n```\nclass HelloWorld(Scene):\n    def construct(self):\n        text = Text('Hello world').scale(3)\n        self.add(text)\n```\nExample: TextAlignment [¶](#textalignment)\n![../_images/TextAlignment-1.png](../_images/TextAlignment-1.png)\n```\nfrom manim import *\nclass TextAlignment(Scene):\n    def construct(self):\n        title = Text(\"K-means clustering and Logistic Regression\", color=WHITE)\n        title.scale(0.75)\n        self.add(title.to_edge(UP))\n        t1 = Text(\"1. Measuring\").set_color(WHITE)\n        t2 = Text(\"2. Clustering\").set_color(WHITE)\n        t3 = Text(\"3. Regression\").set_color(WHITE)\n        t4 = Text(\"4. Prediction\").set_color(WHITE)\n        x = VGroup(t1, t2, t3, t4).arrange(direction=DOWN, aligned_edge=LEFT).scale(0.7).next_to(ORIGIN,DR)\n        x.set_opacity(0.5)\n        x.submobjects[1].set_opacity(1)\n        self.add(x)\n```\n```\nclass TextAlignment(Scene):\n    def construct(self):\n        title = Text(\"K-means clustering and Logistic Regression\", color=WHITE)\n        title.scale(0.75)\n        self.add(title.to_edge(UP))\n        t1 = Text(\"1. Measuring\").set_color(WHITE)\n        t2 = Text(\"2. Clustering\").set_color(WHITE)\n        t3 = Text(\"3. Regression\").set_color(WHITE)\n        t4 = Text(\"4. Prediction\").set_color(WHITE)\n        x = VGroup(t1, t2, t3, t4).arrange(direction=DOWN, aligned_edge=LEFT).scale(0.7).next_to(ORIGIN,DR)\n        x.set_opacity(0.5)\n        x.submobjects[1].set_opacity(1)\n        self.add(x)\n```\nClasses\n| [`MarkupText`](manim.mobject.text.text_mobject.MarkupText.html#manim.mobject.text.text_mobject.MarkupText \"manim.mobject.text.text_mobject.MarkupText\") | Display (non\\-LaTeX) text rendered using [Pango](https://pango.org/). |\n| --- | --- |\n| [`Paragraph`](manim.mobject.text.text_mobject.Paragraph.html#manim.mobject.text.text_mobject.Paragraph \"manim.mobject.text.text_mobject.Paragraph\") | Display a paragraph of text. |\n| [`Text`](manim.mobject.text.text_mobject.Text.html#manim.mobject.text.text_mobject.Text \"manim.mobject.text.text_mobject.Text\") |  |\nFunctions\nregister\\_font(*font\\_file*)[\\[source]](../_modules/manim/mobject/text/text_mobject.html#register_font)[¶](#manim.mobject.text.text_mobject.register_font \"Link to this definition\")\nTemporarily add a font file to Pango’s search path.\nThis searches for the font\\_file at various places. The order it searches it described below.\n1. Absolute path.\n2. In `assets/fonts` folder.\n3. In `font/` folder.\n4. In the same directory.\nParameters:\n**font\\_file** (*str* *\\|* *Path*) – The font file to add.\nExamples\nUse `with register_font(...)` to add a font file to search\npath.\n```\nwith register_font(\"path/to/font_file.ttf\"):\n    a = Text(\"Hello\", font=\"Custom Font Name\")\n```\nRaises:\n* **FileNotFoundError:** – If the font doesn’t exists.\n* **AttributeError:** – If this method is used on macOS.\n* **.. important ::** – This method is available for macOS for `ManimPango>=v0.2.3`. Using this\n method with previous releases will raise an `AttributeError` on macOS.\nParameters:\n**font\\_file** (*str* *\\|* *Path*)\nremove\\_invisible\\_chars(*mobject*)[\\[source]](../_modules/manim/mobject/text/text_mobject.html#remove_invisible_chars)[¶](#manim.mobject.text.text_mobject.remove_invisible_chars \"Link to this definition\")\nFunction to remove unwanted invisible characters from some mobjects.\nParameters:\n**mobject** ([*SVGMobject*](manim.mobject.svg.svg_mobject.SVGMobject.html#manim.mobject.svg.svg_mobject.SVGMobject \"manim.mobject.svg.svg_mobject.SVGMobject\")) – Any SVGMobject from which we want to remove unwanted invisible characters.\nReturns:\nThe SVGMobject without unwanted invisible characters.\nReturn type:\n[`SVGMobject`](manim.mobject.svg.svg_mobject.SVGMobject.html#manim.mobject.svg.svg_mobject.SVGMobject \"manim.mobject.svg.svg_mobject.SVGMobject\")",
  "scraped_at": "2025-06-24T17:57:32.208809",
  "content_length": 5369,
  "domain": "docs.manim.community",
  "word_count": 424,
  "inspection_status": "approved",
  "filename": "text_mobject - Manim Community v0.19.0_20250624_175732.json",
  "saved_at": "2025-06-24T17:57:32.208867",
  "approved_at": "2025-06-25T17:18:58.294888"
}