{
  "doc_id": "b1f993c239fb37d103649dd491a75bb4",
  "url": "https://docs.manim.community/en/latest/reference/manim.animation.animation.Add.html",
  "title": "Add - Manim Community v0.19.0",
  "content": "Add[¶](#add \"Link to this heading\")\n===================================\nQualified name: `manim.animation.animation.Add`\n*class* Add(*mobject\\=None*, *\\*args*, *use\\_override\\=True*, *\\*\\*kwargs*)[\\[source]](../_modules/manim/animation/animation.html#Add)[¶](#manim.animation.animation.Add \"Link to this definition\")\nBases: [`Animation`](manim.animation.animation.Animation.html#manim.animation.animation.Animation \"manim.animation.animation.Animation\")\nAdd Mobjects to a scene, without animating them in any other way. This\nis similar to the [`Scene.add()`](manim.scene.scene.Scene.html#manim.scene.scene.Scene.add \"manim.scene.scene.Scene.add\") method, but [`Add`](#manim.animation.animation.Add \"manim.animation.animation.Add\") is an\nanimation which can be grouped into other animations.\nParameters:\n* **mobjects** ([*Mobject*](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\")) – One [`Mobject`](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\") or more to add to a scene.\n* **run\\_time** (*float*) – The duration of the animation after adding the `mobjects`. Defaults\nto 0, which means this is an instant animation without extra wait time\nafter adding them.\n* **\\*\\*kwargs** (*Any*) – Additional arguments to pass to the parent [`Animation`](manim.animation.animation.Animation.html#manim.animation.animation.Animation \"manim.animation.animation.Animation\") class.\nExamples\nExample: DefaultAddScene [¶](#defaultaddscene)\n```\nfrom manim import *\nclass DefaultAddScene(Scene):\n    def construct(self):\n        text_1 = Text(\"I was added with Add!\")\n        text_2 = Text(\"Me too!\")\n        text_3 = Text(\"And me!\")\n        texts = VGroup(text_1, text_2, text_3).arrange(DOWN)\n        rect = SurroundingRectangle(texts, buff=0.5)\n        self.play(\n            Create(rect, run_time=3.0),\n            Succession(\n                Wait(1.0),\n                # You can Add a Mobject in the middle of an animation...\n                Add(text_1),\n                Wait(1.0),\n                # ...or multiple Mobjects at once!\n                Add(text_2, text_3),\n            ),\n        )\n        self.wait()\n```\n```\nclass DefaultAddScene(Scene):\n    def construct(self):\n        text_1 = Text(\"I was added with Add!\")\n        text_2 = Text(\"Me too!\")\n        text_3 = Text(\"And me!\")\n        texts = VGroup(text_1, text_2, text_3).arrange(DOWN)\n        rect = SurroundingRectangle(texts, buff=0.5)\n        self.play(\n            Create(rect, run_time=3.0),\n            Succession(\n                Wait(1.0),\n                # You can Add a Mobject in the middle of an animation...\n                Add(text_1),\n                Wait(1.0),\n                # ...or multiple Mobjects at once!\n                Add(text_2, text_3),\n            ),\n        )\n        self.wait()\n```\nExample: AddWithRunTimeScene [¶](#addwithruntimescene)\n```\nfrom manim import *\nclass AddWithRunTimeScene(Scene):\n    def construct(self):\n        # A 5x5 grid of circles\n        circles = VGroup(\n            *[Circle(radius=0.5) for _ in range(25)]\n        ).arrange_in_grid(5, 5)\n        self.play(\n            Succession(\n                # Add a run_time of 0.2 to wait for 0.2 seconds after\n                # adding the circle, instead of using Wait(0.2) after Add!\n                *[Add(circle, run_time=0.2) for circle in circles],\n                rate_func=smooth,\n            )\n        )\n        self.wait()\n```\n```\nclass AddWithRunTimeScene(Scene):\n    def construct(self):\n        # A 5x5 grid of circles\n        circles = VGroup(\n            *[Circle(radius=0.5) for _ in range(25)]\n        ).arrange_in_grid(5, 5)\n        self.play(\n            Succession(\n                # Add a run_time of 0.2 to wait for 0.2 seconds after\n                # adding the circle, instead of using Wait(0.2) after Add!\n                *[Add(circle, run_time=0.2) for circle in circles],\n                rate_func=smooth,\n            )\n        )\n        self.wait()\n```\nMethods\n| [`begin`](#manim.animation.animation.Add.begin \"manim.animation.animation.Add.begin\") | Begin the animation. |\n| --- | --- |\n| [`clean_up_from_scene`](#manim.animation.animation.Add.clean_up_from_scene \"manim.animation.animation.Add.clean_up_from_scene\") | Clean up the [`Scene`](manim.scene.scene.Scene.html#manim.scene.scene.Scene \"manim.scene.scene.Scene\") after finishing the animation. |\n| [`finish`](#manim.animation.animation.Add.finish \"manim.animation.animation.Add.finish\") | Finish the animation. |\n| [`interpolate`](#manim.animation.animation.Add.interpolate \"manim.animation.animation.Add.interpolate\") | Set the animation progress. |\n| [`update_mobjects`](#manim.animation.animation.Add.update_mobjects \"manim.animation.animation.Add.update_mobjects\") | Updates things like starting\\_mobject, and (for Transforms) target\\_mobject. |\nAttributes\n| `run_time` |  |\n| --- | --- |\n\\_original\\_\\_init\\_\\_(*\\*mobjects*, *run\\_time\\=0\\.0*, *\\*\\*kwargs*)[¶](#manim.animation.animation.Add._original__init__ \"Link to this definition\")\nInitialize self. See help(type(self)) for accurate signature.\nParameters:\n* **mobjects** ([*Mobject*](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\"))\n* **run\\_time** (*float*)\n* **kwargs** (*Any*)\nReturn type:\nNone\nbegin()[\\[source]](../_modules/manim/animation/animation.html#Add.begin)[¶](#manim.animation.animation.Add.begin \"Link to this definition\")\nBegin the animation.\nThis method is called right as an animation is being played. As much\ninitialization as possible, especially any mobject copying, should live in this\nmethod.\nReturn type:\nNone\nclean\\_up\\_from\\_scene(*scene*)[\\[source]](../_modules/manim/animation/animation.html#Add.clean_up_from_scene)[¶](#manim.animation.animation.Add.clean_up_from_scene \"Link to this definition\")\nClean up the [`Scene`](manim.scene.scene.Scene.html#manim.scene.scene.Scene \"manim.scene.scene.Scene\") after finishing the animation.\nThis includes to [`remove()`](manim.scene.scene.Scene.html#manim.scene.scene.Scene.remove \"manim.scene.scene.Scene.remove\") the Animation’s\n[`Mobject`](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\") if the animation is a remover.\nParameters:\n**scene** ([*Scene*](manim.scene.scene.Scene.html#manim.scene.scene.Scene \"manim.scene.scene.Scene\")) – The scene the animation should be cleaned up from.\nReturn type:\nNone\nfinish()[\\[source]](../_modules/manim/animation/animation.html#Add.finish)[¶](#manim.animation.animation.Add.finish \"Link to this definition\")\nFinish the animation.\nThis method gets called when the animation is over.\nReturn type:\nNone\ninterpolate(*alpha*)[\\[source]](../_modules/manim/animation/animation.html#Add.interpolate)[¶](#manim.animation.animation.Add.interpolate \"Link to this definition\")\nSet the animation progress.\nThis method gets called for every frame during an animation.\nParameters:\n**alpha** (*float*) – The relative time to set the animation to, 0 meaning the start, 1 meaning\nthe end.\nReturn type:\nNone\nupdate\\_mobjects(*dt*)[\\[source]](../_modules/manim/animation/animation.html#Add.update_mobjects)[¶](#manim.animation.animation.Add.update_mobjects \"Link to this definition\")\nUpdates things like starting\\_mobject, and (for\nTransforms) target\\_mobject. Note, since typically\n(always?) self.mobject will have its updating\nsuspended during the animation, this will do\nnothing to self.mobject.\nParameters:\n**dt** (*float*)\nReturn type:\nNone",
  "scraped_at": "2025-06-24T17:40:32.926620",
  "content_length": 7531,
  "domain": "docs.manim.community",
  "word_count": 639,
  "inspection_status": "pending",
  "filename": "Add - Manim Community v0.19.0_20250624_174032.json",
  "saved_at": "2025-06-24T17:40:32.926684"
}