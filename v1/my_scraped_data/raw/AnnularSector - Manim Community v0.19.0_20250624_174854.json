{
  "doc_id": "429a393cc283cbadd974d66fe18d7987",
  "url": "https://docs.manim.community/en/latest/reference/manim.mobject.geometry.arc.AnnularSector.html",
  "title": "AnnularSector - Manim Community v0.19.0",
  "content": "AnnularSector[¶](#annularsector \"Link to this heading\")\n=======================================================\nQualified name: `manim.mobject.geometry.arc.AnnularSector`\n*class* AnnularSector(*inner\\_radius\\=1*, *outer\\_radius\\=2*, *angle\\=1\\.5707963267948966*, *start\\_angle\\=0*, *fill\\_opacity\\=1*, *stroke\\_width\\=0*, *color\\=ManimColor('\\#FFFFFF')*, *\\*\\*kwargs*)[\\[source]](../_modules/manim/mobject/geometry/arc.html#AnnularSector)[¶](#manim.mobject.geometry.arc.AnnularSector \"Link to this definition\")\nBases: [`Arc`](manim.mobject.geometry.arc.Arc.html#manim.mobject.geometry.arc.Arc \"manim.mobject.geometry.arc.Arc\")\nA sector of an annulus.\nParameters:\n* **inner\\_radius** (*float*) – The inside radius of the Annular Sector.\n* **outer\\_radius** (*float*) – The outside radius of the Annular Sector.\n* **angle** (*float*) – The clockwise angle of the Annular Sector.\n* **start\\_angle** (*float*) – The starting clockwise angle of the Annular Sector.\n* **fill\\_opacity** (*float*) – The opacity of the color filled in the Annular Sector.\n* **stroke\\_width** (*float*) – The stroke width of the Annular Sector.\n* **color** ([*ParsableManimColor*](manim.utils.color.core.html#manim.utils.color.core.ParsableManimColor \"manim.utils.color.core.ParsableManimColor\")) – The color filled into the Annular Sector.\n* **kwargs** (*Any*)\nExamples\nExample: AnnularSectorExample [¶](#annularsectorexample)\n![../_images/AnnularSectorExample-1.png](../_images/AnnularSectorExample-1.png)\n```\nfrom manim import *\nclass AnnularSectorExample(Scene):\n    def construct(self):\n        # Changes background color to clearly visualize changes in fill_opacity.\n        self.camera.background_color = WHITE\n        # The default parameter start_angle is 0, so the AnnularSector starts from the +x-axis.\n        s1 = AnnularSector(color=YELLOW).move_to(2 * UL)\n        # Different inner_radius and outer_radius than the default.\n        s2 = AnnularSector(inner_radius=1.5, outer_radius=2, angle=45 * DEGREES, color=RED).move_to(2 * UR)\n        # fill_opacity is typically a number > 0 and <= 1. If fill_opacity=0, the AnnularSector is transparent.\n        s3 = AnnularSector(inner_radius=1, outer_radius=1.5, angle=PI, fill_opacity=0.25, color=BLUE).move_to(2 * DL)\n        # With a negative value for the angle, the AnnularSector is drawn clockwise from the start value.\n        s4 = AnnularSector(inner_radius=1, outer_radius=1.5, angle=-3 * PI / 2, color=GREEN).move_to(2 * DR)\n        self.add(s1, s2, s3, s4)\n```\n```\nclass AnnularSectorExample(Scene):\n    def construct(self):\n        # Changes background color to clearly visualize changes in fill_opacity.\n        self.camera.background_color = WHITE\n        # The default parameter start_angle is 0, so the AnnularSector starts from the +x-axis.\n        s1 = AnnularSector(color=YELLOW).move_to(2 * UL)\n        # Different inner_radius and outer_radius than the default.\n        s2 = AnnularSector(inner_radius=1.5, outer_radius=2, angle=45 * DEGREES, color=RED).move_to(2 * UR)\n        # fill_opacity is typically a number > 0 and <= 1. If fill_opacity=0, the AnnularSector is transparent.\n        s3 = AnnularSector(inner_radius=1, outer_radius=1.5, angle=PI, fill_opacity=0.25, color=BLUE).move_to(2 * DL)\n        # With a negative value for the angle, the AnnularSector is drawn clockwise from the start value.\n        s4 = AnnularSector(inner_radius=1, outer_radius=1.5, angle=-3 * PI / 2, color=GREEN).move_to(2 * DR)\n        self.add(s1, s2, s3, s4)\n```\nMethods\n| [`generate_points`](#manim.mobject.geometry.arc.AnnularSector.generate_points \"manim.mobject.geometry.arc.AnnularSector.generate_points\") | Initializes `points` and therefore the shape. |\n| --- | --- |\n| [`init_points`](#manim.mobject.geometry.arc.AnnularSector.init_points \"manim.mobject.geometry.arc.AnnularSector.init_points\") | Initializes `points` and therefore the shape. |\nAttributes\n| `animate` | Used to animate the application of any method of `self`. |\n| --- | --- |\n| `animation_overrides` |  |\n| `color` |  |\n| `depth` | The depth of the mobject. |\n| `fill_color` | If there are multiple colors (for gradient) this returns the first one |\n| `height` | The height of the mobject. |\n| `n_points_per_curve` |  |\n| `sheen_factor` |  |\n| `stroke_color` |  |\n| `width` | The width of the mobject. |\n\\_original\\_\\_init\\_\\_(*inner\\_radius\\=1*, *outer\\_radius\\=2*, *angle\\=1\\.5707963267948966*, *start\\_angle\\=0*, *fill\\_opacity\\=1*, *stroke\\_width\\=0*, *color\\=ManimColor('\\#FFFFFF')*, *\\*\\*kwargs*)[¶](#manim.mobject.geometry.arc.AnnularSector._original__init__ \"Link to this definition\")\nInitialize self. See help(type(self)) for accurate signature.\nParameters:\n* **inner\\_radius** (*float*)\n* **outer\\_radius** (*float*)\n* **angle** (*float*)\n* **start\\_angle** (*float*)\n* **fill\\_opacity** (*float*)\n* **stroke\\_width** (*float*)\n* **color** ([*ParsableManimColor*](manim.utils.color.core.html#manim.utils.color.core.ParsableManimColor \"manim.utils.color.core.ParsableManimColor\"))\n* **kwargs** (*Any*)\nReturn type:\nNone\ngenerate\\_points()[\\[source]](../_modules/manim/mobject/geometry/arc.html#AnnularSector.generate_points)[¶](#manim.mobject.geometry.arc.AnnularSector.generate_points \"Link to this definition\")\nInitializes `points` and therefore the shape.\nGets called upon creation. This is an empty method that can be implemented by\nsubclasses.\nReturn type:\nNone\ninit\\_points()[¶](#manim.mobject.geometry.arc.AnnularSector.init_points \"Link to this definition\")\nInitializes `points` and therefore the shape.\nGets called upon creation. This is an empty method that can be implemented by\nsubclasses.\nReturn type:\nNone",
  "scraped_at": "2025-06-24T17:48:54.437148",
  "content_length": 5644,
  "domain": "docs.manim.community",
  "word_count": 572,
  "inspection_status": "pending",
  "filename": "AnnularSector - Manim Community v0.19.0_20250624_174854.json",
  "saved_at": "2025-06-24T17:48:54.437210"
}