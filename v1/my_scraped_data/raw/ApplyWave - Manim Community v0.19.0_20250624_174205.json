{
  "doc_id": "7f3451fc904f0995812e58a9731af2a8",
  "url": "https://docs.manim.community/en/latest/reference/manim.animation.indication.ApplyWave.html",
  "title": "ApplyWave - Manim Community v0.19.0",
  "content": "ApplyWave[¶](#applywave \"Link to this heading\")\n===============================================\nQualified name: `manim.animation.indication.ApplyWave`\n*class* ApplyWave(*mobject\\=None*, *\\*args*, *use\\_override\\=True*, *\\*\\*kwargs*)[\\[source]](../_modules/manim/animation/indication.html#ApplyWave)[¶](#manim.animation.indication.ApplyWave \"Link to this definition\")\nBases: [`Homotopy`](manim.animation.movement.Homotopy.html#manim.animation.movement.Homotopy \"manim.animation.movement.Homotopy\")\nSend a wave through the Mobject distorting it temporarily.\nParameters:\n* **mobject** ([*Mobject*](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\")) – The mobject to be distorted.\n* **direction** (*np.ndarray*) – The direction in which the wave nudges points of the shape\n* **amplitude** (*float*) – The distance points of the shape get shifted\n* **wave\\_func** (*Callable**\\[**\\[**float**]**,* *float**]*) – The function defining the shape of one wave flank.\n* **time\\_width** (*float*) – The length of the wave relative to the width of the mobject.\n* **ripples** (*int*) – The number of ripples of the wave\n* **run\\_time** (*float*) – The duration of the animation.\nExamples\nExample: ApplyingWaves [¶](#applyingwaves)\n```\nfrom manim import *\nclass ApplyingWaves(Scene):\n    def construct(self):\n        tex = Tex(\"WaveWaveWaveWaveWave\").scale(2)\n        self.play(ApplyWave(tex))\n        self.play(ApplyWave(\n            tex,\n            direction=RIGHT,\n            time_width=0.5,\n            amplitude=0.3\n        ))\n        self.play(ApplyWave(\n            tex,\n            rate_func=linear,\n            ripples=4\n        ))\n```\n```\nclass ApplyingWaves(Scene):\n    def construct(self):\n        tex = Tex(\"WaveWaveWaveWaveWave\").scale(2)\n        self.play(ApplyWave(tex))\n        self.play(ApplyWave(\n            tex,\n            direction=RIGHT,\n            time_width=0.5,\n            amplitude=0.3\n        ))\n        self.play(ApplyWave(\n            tex,\n            rate_func=linear,\n            ripples=4\n        ))\n```\nMethods\nAttributes\n| `run_time` |  |\n| --- | --- |\n\\_original\\_\\_init\\_\\_(*mobject*, *direction\\=array(\\[0\\.*, *1\\.*, *0\\.])*, *amplitude\\=0\\.2*, *wave\\_func\\=\\<function smooth\\>*, *time\\_width\\=1*, *ripples\\=1*, *run\\_time\\=2*, *\\*\\*kwargs*)[¶](#manim.animation.indication.ApplyWave._original__init__ \"Link to this definition\")\nInitialize self. See help(type(self)) for accurate signature.\nParameters:\n* **mobject** ([*Mobject*](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\"))\n* **direction** (*ndarray*)\n* **amplitude** (*float*)\n* **wave\\_func** (*Callable**\\[**\\[**float**]**,* *float**]*)\n* **time\\_width** (*float*)\n* **ripples** (*int*)\n* **run\\_time** (*float*)\nReturn type:\nNone",
  "scraped_at": "2025-06-24T17:42:05.883774",
  "content_length": 2813,
  "domain": "docs.manim.community",
  "word_count": 228,
  "inspection_status": "pending",
  "filename": "ApplyWave - Manim Community v0.19.0_20250624_174205.json",
  "saved_at": "2025-06-24T17:42:05.883822"
}