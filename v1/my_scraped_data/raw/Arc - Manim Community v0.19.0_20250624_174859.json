{
  "doc_id": "d1dc1473fcf5dd00ab5f2a72b5d16b1b",
  "url": "https://docs.manim.community/en/latest/reference/manim.mobject.geometry.arc.Arc.html",
  "title": "Arc - Manim Community v0.19.0",
  "content": "Arc[¶](#arc \"Link to this heading\")\n===================================\nQualified name: `manim.mobject.geometry.arc.Arc`\n*class* Arc(*radius\\=1\\.0*, *start\\_angle\\=0*, *angle\\=1\\.5707963267948966*, *num\\_components\\=9*, *arc\\_center\\=array(\\[0\\., 0\\., 0\\.])*, *\\*\\*kwargs*)[\\[source]](../_modules/manim/mobject/geometry/arc.html#Arc)[¶](#manim.mobject.geometry.arc.Arc \"Link to this definition\")\nBases: [`TipableVMobject`](manim.mobject.geometry.arc.TipableVMobject.html#manim.mobject.geometry.arc.TipableVMobject \"manim.mobject.geometry.arc.TipableVMobject\")\nA circular arc.\nExamples\nA simple arc of angle Pi.\nExample: ArcExample [¶](#arcexample)\n![../_images/ArcExample-1.png](../_images/ArcExample-1.png)\n```\nfrom manim import *\nclass ArcExample(Scene):\n    def construct(self):\n        self.add(Arc(angle=PI))\n```\n```\nclass ArcExample(Scene):\n    def construct(self):\n        self.add(Arc(angle=PI))\n```\nMethods\n| [`generate_points`](#manim.mobject.geometry.arc.Arc.generate_points \"manim.mobject.geometry.arc.Arc.generate_points\") | Initializes `points` and therefore the shape. |\n| --- | --- |\n| [`get_arc_center`](#manim.mobject.geometry.arc.Arc.get_arc_center \"manim.mobject.geometry.arc.Arc.get_arc_center\") | Looks at the normals to the first two anchors, and finds their intersection points |\n| `init_points` |  |\n| `move_arc_center_to` |  |\n| `stop_angle` |  |\nAttributes\n| `animate` | Used to animate the application of any method of `self`. |\n| --- | --- |\n| `animation_overrides` |  |\n| `color` |  |\n| `depth` | The depth of the mobject. |\n| `fill_color` | If there are multiple colors (for gradient) this returns the first one |\n| `height` | The height of the mobject. |\n| `n_points_per_curve` |  |\n| `sheen_factor` |  |\n| `stroke_color` |  |\n| `width` | The width of the mobject. |\nParameters:\n* **radius** (*float* *\\|* *None*)\n* **start\\_angle** (*float*)\n* **angle** (*float*)\n* **num\\_components** (*int*)\n* **arc\\_center** ([*Point3DLike*](manim.typing.html#manim.typing.Point3DLike \"manim.typing.Point3DLike\"))\n* **kwargs** (*Any*)\n\\_original\\_\\_init\\_\\_(*radius\\=1\\.0*, *start\\_angle\\=0*, *angle\\=1\\.5707963267948966*, *num\\_components\\=9*, *arc\\_center\\=array(\\[0\\., 0\\., 0\\.])*, *\\*\\*kwargs*)[¶](#manim.mobject.geometry.arc.Arc._original__init__ \"Link to this definition\")\nInitialize self. See help(type(self)) for accurate signature.\nParameters:\n* **radius** (*float* *\\|* *None*)\n* **start\\_angle** (*float*)\n* **angle** (*float*)\n* **num\\_components** (*int*)\n* **arc\\_center** ([*Point3DLike*](manim.typing.html#manim.typing.Point3DLike \"manim.typing.Point3DLike\"))\n* **kwargs** (*Any*)\ngenerate\\_points()[\\[source]](../_modules/manim/mobject/geometry/arc.html#Arc.generate_points)[¶](#manim.mobject.geometry.arc.Arc.generate_points \"Link to this definition\")\nInitializes `points` and therefore the shape.\nGets called upon creation. This is an empty method that can be implemented by\nsubclasses.\nReturn type:\nNone\nget\\_arc\\_center(*warning\\=True*)[\\[source]](../_modules/manim/mobject/geometry/arc.html#Arc.get_arc_center)[¶](#manim.mobject.geometry.arc.Arc.get_arc_center \"Link to this definition\")\nLooks at the normals to the first two\nanchors, and finds their intersection points\nParameters:\n**warning** (*bool*)\nReturn type:\n[*Point3D*](manim.typing.html#manim.typing.Point3D \"manim.typing.Point3D\")",
  "scraped_at": "2025-06-24T17:48:59.599646",
  "content_length": 3333,
  "domain": "docs.manim.community",
  "word_count": 306,
  "inspection_status": "pending",
  "filename": "Arc - Manim Community v0.19.0_20250624_174859.json",
  "saved_at": "2025-06-24T17:48:59.599708"
}