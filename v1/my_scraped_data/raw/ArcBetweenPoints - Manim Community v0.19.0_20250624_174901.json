{
  "doc_id": "b2a5424f70b9ff65b484f99796d85ab7",
  "url": "https://docs.manim.community/en/latest/reference/manim.mobject.geometry.arc.ArcBetweenPoints.html",
  "title": "ArcBetweenPoints - Manim Community v0.19.0",
  "content": "ArcBetweenPoints[¶](#arcbetweenpoints \"Link to this heading\")\n=============================================================\nQualified name: `manim.mobject.geometry.arc.ArcBetweenPoints`\n*class* ArcBetweenPoints(*start*, *end*, *angle\\=1\\.5707963267948966*, *radius\\=None*, *\\*\\*kwargs*)[\\[source]](../_modules/manim/mobject/geometry/arc.html#ArcBetweenPoints)[¶](#manim.mobject.geometry.arc.ArcBetweenPoints \"Link to this definition\")\nBases: [`Arc`](manim.mobject.geometry.arc.Arc.html#manim.mobject.geometry.arc.Arc \"manim.mobject.geometry.arc.Arc\")\nInherits from Arc and additionally takes 2 points between which the arc is spanned.\nExample\nExample: ArcBetweenPointsExample [¶](#arcbetweenpointsexample)\n```\nfrom manim import *\nclass ArcBetweenPointsExample(Scene):\n    def construct(self):\n        circle = Circle(radius=2, stroke_color=GREY)\n        dot_1 = Dot(color=GREEN).move_to([2, 0, 0]).scale(0.5)\n        dot_1_text = Tex(\"(2,0)\").scale(0.5).next_to(dot_1, RIGHT).set_color(BLUE)\n        dot_2 = Dot(color=GREEN).move_to([0, 2, 0]).scale(0.5)\n        dot_2_text = Tex(\"(0,2)\").scale(0.5).next_to(dot_2, UP).set_color(BLUE)\n        arc= ArcBetweenPoints(start=2 * RIGHT, end=2 * UP, stroke_color=YELLOW)\n        self.add(circle, dot_1, dot_2, dot_1_text, dot_2_text)\n        self.play(Create(arc))\n```\n```\nclass ArcBetweenPointsExample(Scene):\n    def construct(self):\n        circle = Circle(radius=2, stroke_color=GREY)\n        dot_1 = Dot(color=GREEN).move_to([2, 0, 0]).scale(0.5)\n        dot_1_text = Tex(\"(2,0)\").scale(0.5).next_to(dot_1, RIGHT).set_color(BLUE)\n        dot_2 = Dot(color=GREEN).move_to([0, 2, 0]).scale(0.5)\n        dot_2_text = Tex(\"(0,2)\").scale(0.5).next_to(dot_2, UP).set_color(BLUE)\n        arc= ArcBetweenPoints(start=2 * RIGHT, end=2 * UP, stroke_color=YELLOW)\n        self.add(circle, dot_1, dot_2, dot_1_text, dot_2_text)\n        self.play(Create(arc))\n```\nMethods\nAttributes\n| `animate` | Used to animate the application of any method of `self`. |\n| --- | --- |\n| `animation_overrides` |  |\n| `color` |  |\n| `depth` | The depth of the mobject. |\n| `fill_color` | If there are multiple colors (for gradient) this returns the first one |\n| `height` | The height of the mobject. |\n| `n_points_per_curve` |  |\n| `sheen_factor` |  |\n| `stroke_color` |  |\n| `width` | The width of the mobject. |\nParameters:\n* **start** ([*Point3DLike*](manim.typing.html#manim.typing.Point3DLike \"manim.typing.Point3DLike\"))\n* **end** ([*Point3DLike*](manim.typing.html#manim.typing.Point3DLike \"manim.typing.Point3DLike\"))\n* **angle** (*float*)\n* **radius** (*float* *\\|* *None*)\n* **kwargs** (*Any*)\n\\_original\\_\\_init\\_\\_(*start*, *end*, *angle\\=1\\.5707963267948966*, *radius\\=None*, *\\*\\*kwargs*)[¶](#manim.mobject.geometry.arc.ArcBetweenPoints._original__init__ \"Link to this definition\")\nInitialize self. See help(type(self)) for accurate signature.\nParameters:\n* **start** ([*Point3DLike*](manim.typing.html#manim.typing.Point3DLike \"manim.typing.Point3DLike\"))\n* **end** ([*Point3DLike*](manim.typing.html#manim.typing.Point3DLike \"manim.typing.Point3DLike\"))\n* **angle** (*float*)\n* **radius** (*float* *\\|* *None*)\n* **kwargs** (*Any*)\nReturn type:\nNone",
  "scraped_at": "2025-06-24T17:49:01.985755",
  "content_length": 3185,
  "domain": "docs.manim.community",
  "word_count": 271,
  "inspection_status": "pending",
  "filename": "ArcBetweenPoints - Manim Community v0.19.0_20250624_174901.json",
  "saved_at": "2025-06-24T17:49:01.985811"
}