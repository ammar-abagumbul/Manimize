{
  "doc_id": "3bc0b3abbf7ac95246846e76a32332f3",
  "url": "https://docs.manim.community/en/latest/reference/manim.mobject.graphing.coordinate_systems.ComplexPlane.html",
  "title": "ComplexPlane - Manim Community v0.19.0",
  "content": "ComplexPlane[¶](#complexplane \"Link to this heading\")\n=====================================================\nQualified name: `manim.mobject.graphing.coordinate\\_systems.ComplexPlane`\n*class* ComplexPlane(*\\*\\*kwargs*)[\\[source]](../_modules/manim/mobject/graphing/coordinate_systems.html#ComplexPlane)[¶](#manim.mobject.graphing.coordinate_systems.ComplexPlane \"Link to this definition\")\nBases: [`NumberPlane`](manim.mobject.graphing.coordinate_systems.NumberPlane.html#manim.mobject.graphing.coordinate_systems.NumberPlane \"manim.mobject.graphing.coordinate_systems.NumberPlane\")\nA [`NumberPlane`](manim.mobject.graphing.coordinate_systems.NumberPlane.html#manim.mobject.graphing.coordinate_systems.NumberPlane \"manim.mobject.graphing.coordinate_systems.NumberPlane\") specialized for use with complex numbers.\nExamples\nExample: ComplexPlaneExample [¶](#complexplaneexample)\n![../_images/ComplexPlaneExample-1.png](../_images/ComplexPlaneExample-1.png)\n```\nfrom manim import *\nclass ComplexPlaneExample(Scene):\n    def construct(self):\n        plane = ComplexPlane().add_coordinates()\n        self.add(plane)\n        d1 = Dot(plane.n2p(2 + 1j), color=YELLOW)\n        d2 = Dot(plane.n2p(-3 - 2j), color=YELLOW)\n        label1 = MathTex(\"2+i\").next_to(d1, UR, 0.1)\n        label2 = MathTex(\"-3-2i\").next_to(d2, UR, 0.1)\n        self.add(\n            d1,\n            label1,\n            d2,\n            label2,\n        )\n```\n```\nclass ComplexPlaneExample(Scene):\n    def construct(self):\n        plane = ComplexPlane().add_coordinates()\n        self.add(plane)\n        d1 = Dot(plane.n2p(2 + 1j), color=YELLOW)\n        d2 = Dot(plane.n2p(-3 - 2j), color=YELLOW)\n        label1 = MathTex(\"2+i\").next_to(d1, UR, 0.1)\n        label2 = MathTex(\"-3-2i\").next_to(d2, UR, 0.1)\n        self.add(\n            d1,\n            label1,\n            d2,\n            label2,\n        )\n```\nReferences: [`Dot`](manim.mobject.geometry.arc.Dot.html#manim.mobject.geometry.arc.Dot \"manim.mobject.geometry.arc.Dot\") [`MathTex`](manim.mobject.text.tex_mobject.MathTex.html#manim.mobject.text.tex_mobject.MathTex \"manim.mobject.text.tex_mobject.MathTex\")\nMethods\n| [`add_coordinates`](#manim.mobject.graphing.coordinate_systems.ComplexPlane.add_coordinates \"manim.mobject.graphing.coordinate_systems.ComplexPlane.add_coordinates\") | Adds the labels produced from `get_coordinate_labels()` to the plane. |\n| --- | --- |\n| [`get_coordinate_labels`](#manim.mobject.graphing.coordinate_systems.ComplexPlane.get_coordinate_labels \"manim.mobject.graphing.coordinate_systems.ComplexPlane.get_coordinate_labels\") | Generates the [`DecimalNumber`](manim.mobject.text.numbers.DecimalNumber.html#manim.mobject.text.numbers.DecimalNumber \"manim.mobject.text.numbers.DecimalNumber\") mobjects for the coordinates of the plane. |\n| [`n2p`](#manim.mobject.graphing.coordinate_systems.ComplexPlane.n2p \"manim.mobject.graphing.coordinate_systems.ComplexPlane.n2p\") | Abbreviation for [`number_to_point()`](#manim.mobject.graphing.coordinate_systems.ComplexPlane.number_to_point \"manim.mobject.graphing.coordinate_systems.ComplexPlane.number_to_point\"). |\n| [`number_to_point`](#manim.mobject.graphing.coordinate_systems.ComplexPlane.number_to_point \"manim.mobject.graphing.coordinate_systems.ComplexPlane.number_to_point\") | Accepts a float/complex number and returns the equivalent point on the plane. |\n| [`p2n`](#manim.mobject.graphing.coordinate_systems.ComplexPlane.p2n \"manim.mobject.graphing.coordinate_systems.ComplexPlane.p2n\") | Abbreviation for [`point_to_number()`](#manim.mobject.graphing.coordinate_systems.ComplexPlane.point_to_number \"manim.mobject.graphing.coordinate_systems.ComplexPlane.point_to_number\"). |\n| [`point_to_number`](#manim.mobject.graphing.coordinate_systems.ComplexPlane.point_to_number \"manim.mobject.graphing.coordinate_systems.ComplexPlane.point_to_number\") | Accepts a point and returns a complex number equivalent to that point on the plane. |\nAttributes\n| `animate` | Used to animate the application of any method of `self`. |\n| --- | --- |\n| `animation_overrides` |  |\n| `color` |  |\n| `depth` | The depth of the mobject. |\n| `fill_color` | If there are multiple colors (for gradient) this returns the first one |\n| `height` | The height of the mobject. |\n| `n_points_per_curve` |  |\n| `sheen_factor` |  |\n| `stroke_color` |  |\n| `width` | The width of the mobject. |\nParameters:\n**kwargs** (*Any*)\n\\_get\\_default\\_coordinate\\_values()[\\[source]](../_modules/manim/mobject/graphing/coordinate_systems.html#ComplexPlane._get_default_coordinate_values)[¶](#manim.mobject.graphing.coordinate_systems.ComplexPlane._get_default_coordinate_values \"Link to this definition\")\nGenerate a list containing the numerical values of the plane’s labels.\nReturns:\nA list of floats representing the x\\-axis and complex numbers representing the y\\-axis.\nReturn type:\nList\\[float \\| complex]\n\\_original\\_\\_init\\_\\_(*\\*\\*kwargs*)[¶](#manim.mobject.graphing.coordinate_systems.ComplexPlane._original__init__ \"Link to this definition\")\nInitialize self. See help(type(self)) for accurate signature.\nParameters:\n**kwargs** (*Any*)\nReturn type:\nNone\nadd\\_coordinates(*\\*numbers*, *\\*\\*kwargs*)[\\[source]](../_modules/manim/mobject/graphing/coordinate_systems.html#ComplexPlane.add_coordinates)[¶](#manim.mobject.graphing.coordinate_systems.ComplexPlane.add_coordinates \"Link to this definition\")\nAdds the labels produced from `get_coordinate_labels()` to the plane.\nParameters:\n* **numbers** (*Iterable**\\[**float* *\\|* *complex**]*) – An iterable of floats/complex numbers. Floats are positioned along the x\\-axis, complex numbers along the y\\-axis.\n* **kwargs** (*Any*) – Additional arguments to be passed to [`get_number_mobject()`](manim.mobject.graphing.number_line.NumberLine.html#manim.mobject.graphing.number_line.NumberLine.get_number_mobject \"manim.mobject.graphing.number_line.NumberLine.get_number_mobject\"), i.e. [`DecimalNumber`](manim.mobject.text.numbers.DecimalNumber.html#manim.mobject.text.numbers.DecimalNumber \"manim.mobject.text.numbers.DecimalNumber\").\nReturn type:\n*Self*\nget\\_coordinate\\_labels(*\\*numbers*, *\\*\\*kwargs*)[\\[source]](../_modules/manim/mobject/graphing/coordinate_systems.html#ComplexPlane.get_coordinate_labels)[¶](#manim.mobject.graphing.coordinate_systems.ComplexPlane.get_coordinate_labels \"Link to this definition\")\nGenerates the [`DecimalNumber`](manim.mobject.text.numbers.DecimalNumber.html#manim.mobject.text.numbers.DecimalNumber \"manim.mobject.text.numbers.DecimalNumber\") mobjects for the coordinates of the plane.\nParameters:\n* **numbers** (*Iterable**\\[**float* *\\|* *complex**]*) – An iterable of floats/complex numbers. Floats are positioned along the x\\-axis, complex numbers along the y\\-axis.\n* **kwargs** (*Any*) – Additional arguments to be passed to [`get_number_mobject()`](manim.mobject.graphing.number_line.NumberLine.html#manim.mobject.graphing.number_line.NumberLine.get_number_mobject \"manim.mobject.graphing.number_line.NumberLine.get_number_mobject\"), i.e. [`DecimalNumber`](manim.mobject.text.numbers.DecimalNumber.html#manim.mobject.text.numbers.DecimalNumber \"manim.mobject.text.numbers.DecimalNumber\").\nReturns:\nA [`VGroup`](manim.mobject.types.vectorized_mobject.VGroup.html#manim.mobject.types.vectorized_mobject.VGroup \"manim.mobject.types.vectorized_mobject.VGroup\") containing the positioned label mobjects.\nReturn type:\n[`VGroup`](manim.mobject.types.vectorized_mobject.VGroup.html#manim.mobject.types.vectorized_mobject.VGroup \"manim.mobject.types.vectorized_mobject.VGroup\")\nn2p(*number*)[\\[source]](../_modules/manim/mobject/graphing/coordinate_systems.html#ComplexPlane.n2p)[¶](#manim.mobject.graphing.coordinate_systems.ComplexPlane.n2p \"Link to this definition\")\nAbbreviation for [`number_to_point()`](#manim.mobject.graphing.coordinate_systems.ComplexPlane.number_to_point \"manim.mobject.graphing.coordinate_systems.ComplexPlane.number_to_point\").\nParameters:\n**number** (*float* *\\|* *complex*)\nReturn type:\n*ndarray*\nnumber\\_to\\_point(*number*)[\\[source]](../_modules/manim/mobject/graphing/coordinate_systems.html#ComplexPlane.number_to_point)[¶](#manim.mobject.graphing.coordinate_systems.ComplexPlane.number_to_point \"Link to this definition\")\nAccepts a float/complex number and returns the equivalent point on the plane.\nParameters:\n**number** (*float* *\\|* *complex*) – The number. Can be a float or a complex number.\nReturns:\nThe point on the plane.\nReturn type:\nnp.ndarray\np2n(*point*)[\\[source]](../_modules/manim/mobject/graphing/coordinate_systems.html#ComplexPlane.p2n)[¶](#manim.mobject.graphing.coordinate_systems.ComplexPlane.p2n \"Link to this definition\")\nAbbreviation for [`point_to_number()`](#manim.mobject.graphing.coordinate_systems.ComplexPlane.point_to_number \"manim.mobject.graphing.coordinate_systems.ComplexPlane.point_to_number\").\nParameters:\n**point** ([*Point3DLike*](manim.typing.html#manim.typing.Point3DLike \"manim.typing.Point3DLike\"))\nReturn type:\ncomplex\npoint\\_to\\_number(*point*)[\\[source]](../_modules/manim/mobject/graphing/coordinate_systems.html#ComplexPlane.point_to_number)[¶](#manim.mobject.graphing.coordinate_systems.ComplexPlane.point_to_number \"Link to this definition\")\nAccepts a point and returns a complex number equivalent to that point on the plane.\nParameters:\n**point** ([*Point3DLike*](manim.typing.html#manim.typing.Point3DLike \"manim.typing.Point3DLike\")) – The point in manim’s coordinate\\-system\nReturns:\nA complex number consisting of real and imaginary components.\nReturn type:\ncomplex",
  "scraped_at": "2025-06-24T17:51:50.064870",
  "content_length": 9506,
  "domain": "docs.manim.community",
  "word_count": 589,
  "inspection_status": "pending",
  "filename": "ComplexPlane - Manim Community v0.19.0_20250624_175150.json",
  "saved_at": "2025-06-24T17:51:50.064967"
}