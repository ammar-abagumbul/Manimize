{
  "doc_id": "df36523f20b3ffd7ba647c565e768103",
  "url": "https://docs.manim.community/en/latest/reference/manim.mobject.three_d.three_dimensions.Cone.html",
  "title": "Cone - Manim Community v0.19.0",
  "content": "Cone[¶](#cone \"Link to this heading\")\n=====================================\nQualified name: `manim.mobject.three\\_d.three\\_dimensions.Cone`\n*class* Cone(*base\\_radius\\=1*, *height\\=1*, *direction\\=array(\\[0\\., 0\\., 1\\.])*, *show\\_base\\=False*, *v\\_range\\=\\[0, 6\\.283185307179586]*, *u\\_min\\=0*, *checkerboard\\_colors\\=False*, *\\*\\*kwargs*)[\\[source]](../_modules/manim/mobject/three_d/three_dimensions.html#Cone)[¶](#manim.mobject.three_d.three_dimensions.Cone \"Link to this definition\")\nBases: [`Surface`](manim.mobject.three_d.three_dimensions.Surface.html#manim.mobject.three_d.three_dimensions.Surface \"manim.mobject.three_d.three_dimensions.Surface\")\nA circular cone.\nCan be defined using 2 parameters: its height, and its base radius.\nThe polar angle, theta, can be calculated using arctan(base\\_radius /\nheight) The spherical radius, r, is calculated using the pythagorean\ntheorem.\nParameters:\n* **base\\_radius** (*float*) – The base radius from which the cone tapers.\n* **height** (*float*) – The height measured from the plane formed by the base\\_radius to\nthe apex of the cone.\n* **direction** (*np.ndarray*) – The direction of the apex.\n* **show\\_base** (*bool*) – Whether to show the base plane or not.\n* **v\\_range** (*Sequence**\\[**float**]*) – The azimuthal angle to start and end at.\n* **u\\_min** (*float*) – The radius at the apex.\n* **checkerboard\\_colors** (*bool*) – Show checkerboard grid texture on the cone.\n* **kwargs** (*Any*)\nExamples\nExample: ExampleCone [¶](#examplecone)\n![../_images/ExampleCone-1.png](../_images/ExampleCone-1.png)\n```\nfrom manim import *\nclass ExampleCone(ThreeDScene):\n    def construct(self):\n        axes = ThreeDAxes()\n        cone = Cone(direction=X_AXIS+Y_AXIS+2*Z_AXIS, resolution=8)\n        self.set_camera_orientation(phi=5*PI/11, theta=PI/9)\n        self.add(axes, cone)\n```\n```\nclass ExampleCone(ThreeDScene):\n    def construct(self):\n        axes = ThreeDAxes()\n        cone = Cone(direction=X_AXIS+Y_AXIS+2*Z_AXIS, resolution=8)\n        self.set_camera_orientation(phi=5*PI/11, theta=PI/9)\n        self.add(axes, cone)\n```\nMethods\n| [`func`](#manim.mobject.three_d.three_dimensions.Cone.func \"manim.mobject.three_d.three_dimensions.Cone.func\") | Converts from spherical coordinates to cartesian. |\n| --- | --- |\n| [`get_direction`](#manim.mobject.three_d.three_dimensions.Cone.get_direction \"manim.mobject.three_d.three_dimensions.Cone.get_direction\") | Returns the current direction of the apex of the [`Cone`](#manim.mobject.three_d.three_dimensions.Cone \"manim.mobject.three_d.three_dimensions.Cone\"). |\n| [`get_end`](#manim.mobject.three_d.three_dimensions.Cone.get_end \"manim.mobject.three_d.three_dimensions.Cone.get_end\") | Returns the point, where the stroke that surrounds the [`Mobject`](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\") ends. |\n| [`get_start`](#manim.mobject.three_d.three_dimensions.Cone.get_start \"manim.mobject.three_d.three_dimensions.Cone.get_start\") | Returns the point, where the stroke that surrounds the [`Mobject`](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\") starts. |\n| [`set_direction`](#manim.mobject.three_d.three_dimensions.Cone.set_direction \"manim.mobject.three_d.three_dimensions.Cone.set_direction\") | Changes the direction of the apex of the [`Cone`](#manim.mobject.three_d.three_dimensions.Cone \"manim.mobject.three_d.three_dimensions.Cone\"). |\nAttributes\n| `animate` | Used to animate the application of any method of `self`. |\n| --- | --- |\n| `animation_overrides` |  |\n| `color` |  |\n| `depth` | The depth of the mobject. |\n| `fill_color` | If there are multiple colors (for gradient) this returns the first one |\n| `height` | The height of the mobject. |\n| `n_points_per_curve` |  |\n| `sheen_factor` |  |\n| `stroke_color` |  |\n| `width` | The width of the mobject. |\n\\_original\\_\\_init\\_\\_(*base\\_radius\\=1*, *height\\=1*, *direction\\=array(\\[0\\., 0\\., 1\\.])*, *show\\_base\\=False*, *v\\_range\\=\\[0, 6\\.283185307179586]*, *u\\_min\\=0*, *checkerboard\\_colors\\=False*, *\\*\\*kwargs*)[¶](#manim.mobject.three_d.three_dimensions.Cone._original__init__ \"Link to this definition\")\nInitialize self. See help(type(self)) for accurate signature.\nParameters:\n* **base\\_radius** (*float*)\n* **height** (*float*)\n* **direction** (*ndarray*)\n* **show\\_base** (*bool*)\n* **v\\_range** (*Sequence**\\[**float**]*)\n* **u\\_min** (*float*)\n* **checkerboard\\_colors** (*bool*)\n* **kwargs** (*Any*)\nReturn type:\nNone\nfunc(*u*, *v*)[\\[source]](../_modules/manim/mobject/three_d/three_dimensions.html#Cone.func)[¶](#manim.mobject.three_d.three_dimensions.Cone.func \"Link to this definition\")\nConverts from spherical coordinates to cartesian.\nParameters:\n* **u** (*float*) – The radius.\n* **v** (*float*) – The azimuthal angle.\nReturns:\nPoints defining the [`Cone`](#manim.mobject.three_d.three_dimensions.Cone \"manim.mobject.three_d.three_dimensions.Cone\").\nReturn type:\n`numpy.array`\nget\\_direction()[\\[source]](../_modules/manim/mobject/three_d/three_dimensions.html#Cone.get_direction)[¶](#manim.mobject.three_d.three_dimensions.Cone.get_direction \"Link to this definition\")\nReturns the current direction of the apex of the [`Cone`](#manim.mobject.three_d.three_dimensions.Cone \"manim.mobject.three_d.three_dimensions.Cone\").\nReturns:\n**direction** – The direction of the apex.\nReturn type:\n`numpy.array`\nget\\_end()[\\[source]](../_modules/manim/mobject/three_d/three_dimensions.html#Cone.get_end)[¶](#manim.mobject.three_d.three_dimensions.Cone.get_end \"Link to this definition\")\nReturns the point, where the stroke that surrounds the [`Mobject`](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\") ends.\nReturn type:\n*ndarray*\nget\\_start()[\\[source]](../_modules/manim/mobject/three_d/three_dimensions.html#Cone.get_start)[¶](#manim.mobject.three_d.three_dimensions.Cone.get_start \"Link to this definition\")\nReturns the point, where the stroke that surrounds the [`Mobject`](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\") starts.\nReturn type:\n*ndarray*\nset\\_direction(*direction*)[\\[source]](../_modules/manim/mobject/three_d/three_dimensions.html#Cone.set_direction)[¶](#manim.mobject.three_d.three_dimensions.Cone.set_direction \"Link to this definition\")\nChanges the direction of the apex of the [`Cone`](#manim.mobject.three_d.three_dimensions.Cone \"manim.mobject.three_d.three_dimensions.Cone\").\nParameters:\n**direction** (*ndarray*) – The direction of the apex.\nReturn type:\nNone",
  "scraped_at": "2025-06-24T17:58:10.897867",
  "content_length": 6572,
  "domain": "docs.manim.community",
  "word_count": 540,
  "inspection_status": "pending",
  "filename": "Cone - Manim Community v0.19.0_20250624_175810.json",
  "saved_at": "2025-06-24T17:58:10.897931"
}