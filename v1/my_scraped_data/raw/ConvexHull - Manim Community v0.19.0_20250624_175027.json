{
  "doc_id": "4779d41f2313a235e11ae2f14de2be68",
  "url": "https://docs.manim.community/en/latest/reference/manim.mobject.geometry.polygram.ConvexHull.html",
  "title": "ConvexHull - Manim Community v0.19.0",
  "content": "ConvexHull[¶](#convexhull \"Link to this heading\")\n=================================================\nQualified name: `manim.mobject.geometry.polygram.ConvexHull`\n*class* ConvexHull(*\\*points*, *tolerance\\=1e\\-05*, *\\*\\*kwargs*)[\\[source]](../_modules/manim/mobject/geometry/polygram.html#ConvexHull)[¶](#manim.mobject.geometry.polygram.ConvexHull \"Link to this definition\")\nBases: [`Polygram`](manim.mobject.geometry.polygram.Polygram.html#manim.mobject.geometry.polygram.Polygram \"manim.mobject.geometry.polygram.Polygram\")\nConstructs a convex hull for a set of points in no particular order.\nParameters:\n* **points** ([*Point3DLike*](manim.typing.html#manim.typing.Point3DLike \"manim.typing.Point3DLike\")) – The points to consider.\n* **tolerance** (*float*) – The tolerance used by quickhull.\n* **kwargs** (*Any*) – Forwarded to the parent constructor.\nExamples\nExample: ConvexHullExample [¶](#convexhullexample)\n![../_images/ConvexHullExample-1.png](../_images/ConvexHullExample-1.png)\n```\nfrom manim import *\nclass ConvexHullExample(Scene):\n    def construct(self):\n        points = [\n            [-2.35, -2.25, 0],\n            [1.65, -2.25, 0],\n            [2.65, -0.25, 0],\n            [1.65, 1.75, 0],\n            [-0.35, 2.75, 0],\n            [-2.35, 0.75, 0],\n            [-0.35, -1.25, 0],\n            [0.65, -0.25, 0],\n            [-1.35, 0.25, 0],\n            [0.15, 0.75, 0]\n        ]\n        hull = ConvexHull(*points, color=BLUE)\n        dots = VGroup(*[Dot(point) for point in points])\n        self.add(hull)\n        self.add(dots)\n```\n```\nclass ConvexHullExample(Scene):\n    def construct(self):\n        points = [\n            [-2.35, -2.25, 0],\n            [1.65, -2.25, 0],\n            [2.65, -0.25, 0],\n            [1.65, 1.75, 0],\n            [-0.35, 2.75, 0],\n            [-2.35, 0.75, 0],\n            [-0.35, -1.25, 0],\n            [0.65, -0.25, 0],\n            [-1.35, 0.25, 0],\n            [0.15, 0.75, 0]\n        ]\n        hull = ConvexHull(*points, color=BLUE)\n        dots = VGroup(*[Dot(point) for point in points])\n        self.add(hull)\n        self.add(dots)\n```\nMethods\nAttributes\n| `animate` | Used to animate the application of any method of `self`. |\n| --- | --- |\n| `animation_overrides` |  |\n| `color` |  |\n| `depth` | The depth of the mobject. |\n| `fill_color` | If there are multiple colors (for gradient) this returns the first one |\n| `height` | The height of the mobject. |\n| `n_points_per_curve` |  |\n| `sheen_factor` |  |\n| `stroke_color` |  |\n| `width` | The width of the mobject. |\n\\_original\\_\\_init\\_\\_(*\\*points*, *tolerance\\=1e\\-05*, *\\*\\*kwargs*)[¶](#manim.mobject.geometry.polygram.ConvexHull._original__init__ \"Link to this definition\")\nInitialize self. See help(type(self)) for accurate signature.\nParameters:\n* **points** ([*Point3DLike*](manim.typing.html#manim.typing.Point3DLike \"manim.typing.Point3DLike\"))\n* **tolerance** (*float*)\n* **kwargs** (*Any*)\nReturn type:\nNone",
  "scraped_at": "2025-06-24T17:50:27.245583",
  "content_length": 2930,
  "domain": "docs.manim.community",
  "word_count": 288,
  "inspection_status": "pending",
  "filename": "ConvexHull - Manim Community v0.19.0_20250624_175027.json",
  "saved_at": "2025-06-24T17:50:27.245639"
}