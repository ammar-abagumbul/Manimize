{
  "doc_id": "c628be7139d8f46787577ad3cb44cf27",
  "url": "https://docs.manim.community/en/latest/reference/manim.mobject.three_d.three_dimensions.Dot3D.html",
  "title": "Dot3D - Manim Community v0.19.0",
  "content": "Dot3D[¶](#dot3d \"Link to this heading\")\n=======================================\nQualified name: `manim.mobject.three\\_d.three\\_dimensions.Dot3D`\n*class* Dot3D(*point\\=array(\\[0\\., 0\\., 0\\.])*, *radius\\=0\\.08*, *color\\=ManimColor('\\#FFFFFF')*, *resolution\\=(8, 8\\)*, *\\*\\*kwargs*)[\\[source]](../_modules/manim/mobject/three_d/three_dimensions.html#Dot3D)[¶](#manim.mobject.three_d.three_dimensions.Dot3D \"Link to this definition\")\nBases: [`Sphere`](manim.mobject.three_d.three_dimensions.Sphere.html#manim.mobject.three_d.three_dimensions.Sphere \"manim.mobject.three_d.three_dimensions.Sphere\")\nA spherical dot.\nParameters:\n* **point** (*list* *\\|* *np.ndarray*) – The location of the dot.\n* **radius** (*float*) – The radius of the dot.\n* **color** ([*ParsableManimColor*](manim.utils.color.core.html#manim.utils.color.core.ParsableManimColor \"manim.utils.color.core.ParsableManimColor\")) – The color of the [`Dot3D`](#manim.mobject.three_d.three_dimensions.Dot3D \"manim.mobject.three_d.three_dimensions.Dot3D\").\n* **resolution** (*tuple**\\[**int**,* *int**]*) – The number of samples taken of the [`Dot3D`](#manim.mobject.three_d.three_dimensions.Dot3D \"manim.mobject.three_d.three_dimensions.Dot3D\"). A tuple can be\nused to define different resolutions for `u` and `v` respectively.\nExamples\nExample: Dot3DExample [¶](#dot3dexample)\n![../_images/Dot3DExample-1.png](../_images/Dot3DExample-1.png)\n```\nfrom manim import *\nclass Dot3DExample(ThreeDScene):\n    def construct(self):\n        self.set_camera_orientation(phi=75*DEGREES, theta=-45*DEGREES)\n        axes = ThreeDAxes()\n        dot_1 = Dot3D(point=axes.coords_to_point(0, 0, 1), color=RED)\n        dot_2 = Dot3D(point=axes.coords_to_point(2, 0, 0), radius=0.1, color=BLUE)\n        dot_3 = Dot3D(point=[0, 0, 0], radius=0.1, color=ORANGE)\n        self.add(axes, dot_1, dot_2,dot_3)\n```\n```\nclass Dot3DExample(ThreeDScene):\n    def construct(self):\n        self.set_camera_orientation(phi=75*DEGREES, theta=-45*DEGREES)\n        axes = ThreeDAxes()\n        dot_1 = Dot3D(point=axes.coords_to_point(0, 0, 1), color=RED)\n        dot_2 = Dot3D(point=axes.coords_to_point(2, 0, 0), radius=0.1, color=BLUE)\n        dot_3 = Dot3D(point=[0, 0, 0], radius=0.1, color=ORANGE)\n        self.add(axes, dot_1, dot_2,dot_3)\n```\nMethods\nAttributes\n| `animate` | Used to animate the application of any method of `self`. |\n| --- | --- |\n| `animation_overrides` |  |\n| `color` |  |\n| `depth` | The depth of the mobject. |\n| `fill_color` | If there are multiple colors (for gradient) this returns the first one |\n| `height` | The height of the mobject. |\n| `n_points_per_curve` |  |\n| `sheen_factor` |  |\n| `stroke_color` |  |\n| `width` | The width of the mobject. |\n\\_original\\_\\_init\\_\\_(*point\\=array(\\[0\\., 0\\., 0\\.])*, *radius\\=0\\.08*, *color\\=ManimColor('\\#FFFFFF')*, *resolution\\=(8, 8\\)*, *\\*\\*kwargs*)[¶](#manim.mobject.three_d.three_dimensions.Dot3D._original__init__ \"Link to this definition\")\nInitialize self. See help(type(self)) for accurate signature.\nParameters:\n* **point** (*list* *\\|* *ndarray*)\n* **radius** (*float*)\n* **color** ([*ParsableManimColor*](manim.utils.color.core.html#manim.utils.color.core.ParsableManimColor \"manim.utils.color.core.ParsableManimColor\"))\n* **resolution** (*tuple**\\[**int**,* *int**]*)\nReturn type:\nNone",
  "scraped_at": "2025-06-24T17:58:18.532247",
  "content_length": 3293,
  "domain": "docs.manim.community",
  "word_count": 288,
  "inspection_status": "pending",
  "filename": "Dot3D - Manim Community v0.19.0_20250624_175818.json",
  "saved_at": "2025-06-24T17:58:18.532306"
}