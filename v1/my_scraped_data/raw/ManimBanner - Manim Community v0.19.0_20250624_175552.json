{
  "doc_id": "910057759852b82acaa28b54cfc31bff",
  "url": "https://docs.manim.community/en/latest/reference/manim.mobject.logo.ManimBanner.html",
  "title": "ManimBanner - Manim Community v0.19.0",
  "content": "ManimBanner[¶](#manimbanner \"Link to this heading\")\n===================================================\nQualified name: `manim.mobject.logo.ManimBanner`\n*class* ManimBanner(*dark\\_theme\\=True*)[\\[source]](../_modules/manim/mobject/logo.html#ManimBanner)[¶](#manim.mobject.logo.ManimBanner \"Link to this definition\")\nBases: [`VGroup`](manim.mobject.types.vectorized_mobject.VGroup.html#manim.mobject.types.vectorized_mobject.VGroup \"manim.mobject.types.vectorized_mobject.VGroup\")\nConvenience class representing Manim’s banner.\nCan be animated using custom methods.\nParameters:\n**dark\\_theme** (*bool*) – If `True` (the default), the dark theme version of the logo\n(with light text font) will be rendered. Otherwise, if `False`,\nthe light theme version (with dark text font) is used.\nExamples\nExample: DarkThemeBanner [¶](#darkthemebanner)\n```\nfrom manim import *\nclass DarkThemeBanner(Scene):\n    def construct(self):\n        banner = ManimBanner()\n        self.play(banner.create())\n        self.play(banner.expand())\n        self.wait()\n        self.play(Unwrite(banner))\n```\n```\nclass DarkThemeBanner(Scene):\n    def construct(self):\n        banner = ManimBanner()\n        self.play(banner.create())\n        self.play(banner.expand())\n        self.wait()\n        self.play(Unwrite(banner))\n```\nExample: LightThemeBanner [¶](#lightthemebanner)\n```\nfrom manim import *\nclass LightThemeBanner(Scene):\n    def construct(self):\n        self.camera.background_color = \"#ece6e2\"\n        banner = ManimBanner(dark_theme=False)\n        self.play(banner.create())\n        self.play(banner.expand())\n        self.wait()\n        self.play(Unwrite(banner))\n```\n```\nclass LightThemeBanner(Scene):\n    def construct(self):\n        self.camera.background_color = \"#ece6e2\"\n        banner = ManimBanner(dark_theme=False)\n        self.play(banner.create())\n        self.play(banner.expand())\n        self.wait()\n        self.play(Unwrite(banner))\n```\nMethods\n| [`create`](#manim.mobject.logo.ManimBanner.create \"manim.mobject.logo.ManimBanner.create\") | The creation animation for Manim's logo. |\n| --- | --- |\n| [`expand`](#manim.mobject.logo.ManimBanner.expand \"manim.mobject.logo.ManimBanner.expand\") | An animation that expands Manim's logo into its banner. |\n| [`scale`](#manim.mobject.logo.ManimBanner.scale \"manim.mobject.logo.ManimBanner.scale\") | Scale the banner by the specified scale factor. |\nAttributes\n| `animate` | Used to animate the application of any method of `self`. |\n| --- | --- |\n| `animation_overrides` |  |\n| `color` |  |\n| `depth` | The depth of the mobject. |\n| `fill_color` | If there are multiple colors (for gradient) this returns the first one |\n| `height` | The height of the mobject. |\n| `n_points_per_curve` |  |\n| `sheen_factor` |  |\n| `stroke_color` |  |\n| `width` | The width of the mobject. |\n\\_original\\_\\_init\\_\\_(*dark\\_theme\\=True*)[¶](#manim.mobject.logo.ManimBanner._original__init__ \"Link to this definition\")\nInitialize self. See help(type(self)) for accurate signature.\nParameters:\n**dark\\_theme** (*bool*)\ncreate(*run\\_time\\=2*)[\\[source]](../_modules/manim/mobject/logo.html#ManimBanner.create)[¶](#manim.mobject.logo.ManimBanner.create \"Link to this definition\")\nThe creation animation for Manim’s logo.\nParameters:\n**run\\_time** (*float*) – The run time of the animation.\nReturns:\nAn animation to be used in a [`Scene.play()`](manim.scene.scene.Scene.html#manim.scene.scene.Scene.play \"manim.scene.scene.Scene.play\") call.\nReturn type:\n[`AnimationGroup`](manim.animation.composition.AnimationGroup.html#manim.animation.composition.AnimationGroup \"manim.animation.composition.AnimationGroup\")\nexpand(*run\\_time\\=1\\.5*, *direction\\='center'*)[\\[source]](../_modules/manim/mobject/logo.html#ManimBanner.expand)[¶](#manim.mobject.logo.ManimBanner.expand \"Link to this definition\")\nAn animation that expands Manim’s logo into its banner.\nThe returned animation transforms the banner from its initial\nstate (representing Manim’s logo with just the icons) to its\nexpanded state (showing the full name together with the icons).\nSee the class documentation for how to use this.\nNote\nBefore calling this method, the text “anim” is not a\nsubmobject of the banner object. After the expansion,\nit is added as a submobject so subsequent animations\nto the banner object apply to the text “anim” as well.\nParameters:\n* **run\\_time** (*float*) – The run time of the animation.\n* **direction** (*str*) – The direction in which the logo is expanded.\nReturns:\nAn animation to be used in a [`Scene.play()`](manim.scene.scene.Scene.html#manim.scene.scene.Scene.play \"manim.scene.scene.Scene.play\") call.\nReturn type:\n[`Succession`](manim.animation.composition.Succession.html#manim.animation.composition.Succession \"manim.animation.composition.Succession\")\nExamples\nExample: ExpandDirections [¶](#expanddirections)\n```\nfrom manim import *\nclass ExpandDirections(Scene):\n    def construct(self):\n        banners = [ManimBanner().scale(0.5).shift(UP*x) for x in [-2, 0, 2]]\n        self.play(\n            banners[0].expand(direction=\"right\"),\n            banners[1].expand(direction=\"center\"),\n            banners[2].expand(direction=\"left\"),\n        )\n```\n```\nclass ExpandDirections(Scene):\n    def construct(self):\n        banners = [ManimBanner().scale(0.5).shift(UP*x) for x in [-2, 0, 2]]\n        self.play(\n            banners[0].expand(direction=\"right\"),\n            banners[1].expand(direction=\"center\"),\n            banners[2].expand(direction=\"left\"),\n        )\n```\nscale(*scale\\_factor*, *\\*\\*kwargs*)[\\[source]](../_modules/manim/mobject/logo.html#ManimBanner.scale)[¶](#manim.mobject.logo.ManimBanner.scale \"Link to this definition\")\nScale the banner by the specified scale factor.\nParameters:\n* **scale\\_factor** (*float*) – The factor used for scaling the banner.\n* **kwargs** (*Any*)\nReturns:\nThe scaled banner.\nReturn type:\n[`ManimBanner`](#manim.mobject.logo.ManimBanner \"manim.mobject.logo.ManimBanner\")",
  "scraped_at": "2025-06-24T17:55:52.958839",
  "content_length": 5936,
  "domain": "docs.manim.community",
  "word_count": 530,
  "inspection_status": "pending",
  "filename": "ManimBanner - Manim Community v0.19.0_20250624_175552.json",
  "saved_at": "2025-06-24T17:55:52.958910"
}