{
  "doc_id": "8284bffa82e67929b1eabfdac7b0f08e",
  "url": "https://docs.manim.community/en/latest/reference/manim.mobject.graphing.number_line.NumberLine.html",
  "title": "NumberLine - Manim Community v0.19.0",
  "content": "NumberLine[¶](#numberline \"Link to this heading\")\n=================================================\nQualified name: `manim.mobject.graphing.number\\_line.NumberLine`\n*class* NumberLine(*x\\_range\\=None*, *length\\=None*, *unit\\_size\\=1*, *include\\_ticks\\=True*, *tick\\_size\\=0\\.1*, *numbers\\_with\\_elongated\\_ticks\\=None*, *longer\\_tick\\_multiple\\=2*, *exclude\\_origin\\_tick\\=False*, *rotation\\=0*, *stroke\\_width\\=2\\.0*, *include\\_tip\\=False*, *tip\\_width\\=0\\.35*, *tip\\_height\\=0\\.35*, *tip\\_shape\\=None*, *include\\_numbers\\=False*, *font\\_size\\=36*, *label\\_direction\\=array(\\[ 0\\.*, *\\-1\\.*, *0\\.])*, *label\\_constructor\\=\\<class 'manim.mobject.text.tex\\_mobject.MathTex'\\>*, *scaling\\=\\<manim.mobject.graphing.scale.LinearBase object\\>*, *line\\_to\\_number\\_buff\\=0\\.25*, *decimal\\_number\\_config\\=None*, *numbers\\_to\\_exclude\\=None*, *numbers\\_to\\_include\\=None*, *\\*\\*kwargs*)[\\[source]](../_modules/manim/mobject/graphing/number_line.html#NumberLine)[¶](#manim.mobject.graphing.number_line.NumberLine \"Link to this definition\")\nBases: [`Line`](manim.mobject.geometry.line.Line.html#manim.mobject.geometry.line.Line \"manim.mobject.geometry.line.Line\")\nCreates a number line with tick marks.\nParameters:\n* **x\\_range** (*Sequence**\\[**float**]* *\\|* *None*) – The `[x_min, x_max, x_step]` values to create the line.\n* **length** (*float* *\\|* *None*) – The length of the number line.\n* **unit\\_size** (*float*) – The distance between each tick of the line. Overwritten by `length`, if specified.\n* **include\\_ticks** (*bool*) – Whether to include ticks on the number line.\n* **tick\\_size** (*float*) – The length of each tick mark.\n* **numbers\\_with\\_elongated\\_ticks** (*Iterable**\\[**float**]* *\\|* *None*) – An iterable of specific values with elongated ticks.\n* **longer\\_tick\\_multiple** (*int*) – Influences how many times larger elongated ticks are than regular ticks (2 \\= 2x).\n* **rotation** (*float*) – The angle (in radians) at which the line is rotated.\n* **stroke\\_width** (*float*) – The thickness of the line.\n* **include\\_tip** (*bool*) – Whether to add a tip to the end of the line.\n* **tip\\_width** (*float*) – The width of the tip.\n* **tip\\_height** (*float*) – The height of the tip.\n* **tip\\_shape** (*type**\\[*[*ArrowTip*](manim.mobject.geometry.tips.ArrowTip.html#manim.mobject.geometry.tips.ArrowTip \"manim.mobject.geometry.tips.ArrowTip\")*]* *\\|* *None*) – The mobject class used to construct the tip, or `None` (the\ndefault) for the default arrow tip. Passed classes have to inherit\nfrom [`ArrowTip`](manim.mobject.geometry.tips.ArrowTip.html#manim.mobject.geometry.tips.ArrowTip \"manim.mobject.geometry.tips.ArrowTip\").\n* **include\\_numbers** (*bool*) – Whether to add numbers to the tick marks. The number of decimal places is determined\nby the step size, this default can be overridden by `decimal_number_config`.\n* **scaling** (*\\_ScaleBase*) – The way the `x_range` is value is scaled, i.e. [`LogBase`](manim.mobject.graphing.scale.LogBase.html#manim.mobject.graphing.scale.LogBase \"manim.mobject.graphing.scale.LogBase\") for a logarithmic numberline. Defaults to [`LinearBase`](manim.mobject.graphing.scale.LinearBase.html#manim.mobject.graphing.scale.LinearBase \"manim.mobject.graphing.scale.LinearBase\").\n* **font\\_size** (*float*) – The size of the label mobjects. Defaults to 36\\.\n* **label\\_direction** (*Sequence**\\[**float**]*) – The specific position to which label mobjects are added on the line.\n* **label\\_constructor** ([*VMobject*](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\")) – Determines the mobject class that will be used to construct the labels of the number line.\n* **line\\_to\\_number\\_buff** (*float*) – The distance between the line and the label mobject.\n* **decimal\\_number\\_config** (*dict* *\\|* *None*) – Arguments that can be passed to [`DecimalNumber`](manim.mobject.text.numbers.DecimalNumber.html#manim.mobject.text.numbers.DecimalNumber \"manim.mobject.text.numbers.DecimalNumber\") to influence number mobjects.\n* **numbers\\_to\\_exclude** (*Iterable**\\[**float**]* *\\|* *None*) – An explicit iterable of numbers to not be added to the number line.\n* **numbers\\_to\\_include** (*Iterable**\\[**float**]* *\\|* *None*) – An explicit iterable of numbers to add to the number line\n* **kwargs** – Additional arguments to be passed to [`Line`](manim.mobject.geometry.line.Line.html#manim.mobject.geometry.line.Line \"manim.mobject.geometry.line.Line\").\n* **exclude\\_origin\\_tick** (*bool*)\nNote\nNumber ranges that include both negative and positive values will be generated\nfrom the 0 point, and may not include a tick at the min / max\nvalues as the tick locations are dependent on the step size.\nExamples\nExample: NumberLineExample [¶](#numberlineexample)\n![../_images/NumberLineExample-1.png](../_images/NumberLineExample-1.png)\n```\nfrom manim import *\nclass NumberLineExample(Scene):\n    def construct(self):\n        l0 = NumberLine(\n            x_range=[-10, 10, 2],\n            length=10,\n            color=BLUE,\n            include_numbers=True,\n            label_direction=UP,\n        )\n        l1 = NumberLine(\n            x_range=[-10, 10, 2],\n            unit_size=0.5,\n            numbers_with_elongated_ticks=[-2, 4],\n            include_numbers=True,\n            font_size=24,\n        )\n        num6 = l1.numbers[8]\n        num6.set_color(RED)\n        l2 = NumberLine(\n            x_range=[-2.5, 2.5 + 0.5, 0.5],\n            length=12,\n            decimal_number_config={\"num_decimal_places\": 2},\n            include_numbers=True,\n        )\n        l3 = NumberLine(\n            x_range=[-5, 5 + 1, 1],\n            length=6,\n            include_tip=True,\n            include_numbers=True,\n            rotation=10 * DEGREES,\n        )\n        line_group = VGroup(l0, l1, l2, l3).arrange(DOWN, buff=1)\n        self.add(line_group)\n```\n```\nclass NumberLineExample(Scene):\n    def construct(self):\n        l0 = NumberLine(\n            x_range=[-10, 10, 2],\n            length=10,\n            color=BLUE,\n            include_numbers=True,\n            label_direction=UP,\n        )\n        l1 = NumberLine(\n            x_range=[-10, 10, 2],\n            unit_size=0.5,\n            numbers_with_elongated_ticks=[-2, 4],\n            include_numbers=True,\n            font_size=24,\n        )\n        num6 = l1.numbers[8]\n        num6.set_color(RED)\n        l2 = NumberLine(\n            x_range=[-2.5, 2.5 + 0.5, 0.5],\n            length=12,\n            decimal_number_config={\"num_decimal_places\": 2},\n            include_numbers=True,\n        )\n        l3 = NumberLine(\n            x_range=[-5, 5 + 1, 1],\n            length=6,\n            include_tip=True,\n            include_numbers=True,\n            rotation=10 * DEGREES,\n        )\n        line_group = VGroup(l0, l1, l2, l3).arrange(DOWN, buff=1)\n        self.add(line_group)\n```\nMethods\n| [`add_labels`](#manim.mobject.graphing.number_line.NumberLine.add_labels \"manim.mobject.graphing.number_line.NumberLine.add_labels\") | Adds specifically positioned labels to the [`NumberLine`](#manim.mobject.graphing.number_line.NumberLine \"manim.mobject.graphing.number_line.NumberLine\") using a `dict`. |\n| --- | --- |\n| [`add_numbers`](#manim.mobject.graphing.number_line.NumberLine.add_numbers \"manim.mobject.graphing.number_line.NumberLine.add_numbers\") | Adds [`DecimalNumber`](manim.mobject.text.numbers.DecimalNumber.html#manim.mobject.text.numbers.DecimalNumber \"manim.mobject.text.numbers.DecimalNumber\") mobjects representing their position at each tick of the number line. |\n| [`add_ticks`](#manim.mobject.graphing.number_line.NumberLine.add_ticks \"manim.mobject.graphing.number_line.NumberLine.add_ticks\") | Adds ticks to the number line. |\n| `get_labels` |  |\n| [`get_number_mobject`](#manim.mobject.graphing.number_line.NumberLine.get_number_mobject \"manim.mobject.graphing.number_line.NumberLine.get_number_mobject\") | Generates a positioned [`DecimalNumber`](manim.mobject.text.numbers.DecimalNumber.html#manim.mobject.text.numbers.DecimalNumber \"manim.mobject.text.numbers.DecimalNumber\") mobject generated according to `label_constructor`. |\n| `get_number_mobjects` |  |\n| [`get_tick`](#manim.mobject.graphing.number_line.NumberLine.get_tick \"manim.mobject.graphing.number_line.NumberLine.get_tick\") | Generates a tick and positions it along the number line. |\n| `get_tick_marks` |  |\n| [`get_tick_range`](#manim.mobject.graphing.number_line.NumberLine.get_tick_range \"manim.mobject.graphing.number_line.NumberLine.get_tick_range\") | Generates the range of values on which labels are plotted based on the `x_range` attribute of the number line. |\n| `get_unit_size` |  |\n| `get_unit_vector` |  |\n| [`n2p`](#manim.mobject.graphing.number_line.NumberLine.n2p \"manim.mobject.graphing.number_line.NumberLine.n2p\") | Abbreviation for [`number_to_point()`](#manim.mobject.graphing.number_line.NumberLine.number_to_point \"manim.mobject.graphing.number_line.NumberLine.number_to_point\"). |\n| [`number_to_point`](#manim.mobject.graphing.number_line.NumberLine.number_to_point \"manim.mobject.graphing.number_line.NumberLine.number_to_point\") | Accepts a value along the number line and returns a point with respect to the scene. |\n| [`p2n`](#manim.mobject.graphing.number_line.NumberLine.p2n \"manim.mobject.graphing.number_line.NumberLine.p2n\") | Abbreviation for [`point_to_number()`](#manim.mobject.graphing.number_line.NumberLine.point_to_number \"manim.mobject.graphing.number_line.NumberLine.point_to_number\"). |\n| [`point_to_number`](#manim.mobject.graphing.number_line.NumberLine.point_to_number \"manim.mobject.graphing.number_line.NumberLine.point_to_number\") | Accepts a point with respect to the scene and returns a float along the number line. |\n| `rotate_about_number` |  |\n| `rotate_about_zero` |  |\nAttributes\n| `animate` | Used to animate the application of any method of `self`. |\n| --- | --- |\n| `animation_overrides` |  |\n| `color` |  |\n| `depth` | The depth of the mobject. |\n| `fill_color` | If there are multiple colors (for gradient) this returns the first one |\n| `height` | The height of the mobject. |\n| `n_points_per_curve` |  |\n| `sheen_factor` |  |\n| `stroke_color` |  |\n| `width` | The width of the mobject. |\n\\_create\\_label\\_tex(*label\\_tex*, *label\\_constructor\\=None*, *\\*\\*kwargs*)[\\[source]](../_modules/manim/mobject/graphing/number_line.html#NumberLine._create_label_tex)[¶](#manim.mobject.graphing.number_line.NumberLine._create_label_tex \"Link to this definition\")\nChecks if the label is a [`VMobject`](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\"), otherwise, creates a\nlabel by passing `label_tex` to `label_constructor`.\nParameters:\n* **label\\_tex** (*str* *\\|* *float* *\\|* [*VMobject*](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\")) – The label for which a mobject should be created. If the label already\nis a mobject, no new mobject is created.\n* **label\\_constructor** (*Callable* *\\|* *None*) – Optional. A class or function returning a mobject when\npassing `label_tex` as an argument. If `None` is passed\n(the default), the label constructor from the `label_constructor`\nattribute is used.\nReturns:\nThe label.\nReturn type:\n[`VMobject`](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\")\n\\_original\\_\\_init\\_\\_(*x\\_range\\=None*, *length\\=None*, *unit\\_size\\=1*, *include\\_ticks\\=True*, *tick\\_size\\=0\\.1*, *numbers\\_with\\_elongated\\_ticks\\=None*, *longer\\_tick\\_multiple\\=2*, *exclude\\_origin\\_tick\\=False*, *rotation\\=0*, *stroke\\_width\\=2\\.0*, *include\\_tip\\=False*, *tip\\_width\\=0\\.35*, *tip\\_height\\=0\\.35*, *tip\\_shape\\=None*, *include\\_numbers\\=False*, *font\\_size\\=36*, *label\\_direction\\=array(\\[ 0\\.*, *\\-1\\.*, *0\\.])*, *label\\_constructor\\=\\<class 'manim.mobject.text.tex\\_mobject.MathTex'\\>*, *scaling\\=\\<manim.mobject.graphing.scale.LinearBase object\\>*, *line\\_to\\_number\\_buff\\=0\\.25*, *decimal\\_number\\_config\\=None*, *numbers\\_to\\_exclude\\=None*, *numbers\\_to\\_include\\=None*, *\\*\\*kwargs*)[¶](#manim.mobject.graphing.number_line.NumberLine._original__init__ \"Link to this definition\")\nInitialize self. See help(type(self)) for accurate signature.\nParameters:\n* **x\\_range** (*Sequence**\\[**float**]* *\\|* *None*)\n* **length** (*float* *\\|* *None*)\n* **unit\\_size** (*float*)\n* **include\\_ticks** (*bool*)\n* **tick\\_size** (*float*)\n* **numbers\\_with\\_elongated\\_ticks** (*Iterable**\\[**float**]* *\\|* *None*)\n* **longer\\_tick\\_multiple** (*int*)\n* **exclude\\_origin\\_tick** (*bool*)\n* **rotation** (*float*)\n* **stroke\\_width** (*float*)\n* **include\\_tip** (*bool*)\n* **tip\\_width** (*float*)\n* **tip\\_height** (*float*)\n* **tip\\_shape** (*type**\\[*[*ArrowTip*](manim.mobject.geometry.tips.ArrowTip.html#manim.mobject.geometry.tips.ArrowTip \"manim.mobject.geometry.tips.ArrowTip\")*]* *\\|* *None*)\n* **include\\_numbers** (*bool*)\n* **font\\_size** (*float*)\n* **label\\_direction** (*Sequence**\\[**float**]*)\n* **label\\_constructor** ([*VMobject*](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\"))\n* **scaling** (*\\_ScaleBase*)\n* **line\\_to\\_number\\_buff** (*float*)\n* **decimal\\_number\\_config** (*dict* *\\|* *None*)\n* **numbers\\_to\\_exclude** (*Iterable**\\[**float**]* *\\|* *None*)\n* **numbers\\_to\\_include** (*Iterable**\\[**float**]* *\\|* *None*)\nadd\\_labels(*dict\\_values*, *direction\\=None*, *buff\\=None*, *font\\_size\\=None*, *label\\_constructor\\=None*)[\\[source]](../_modules/manim/mobject/graphing/number_line.html#NumberLine.add_labels)[¶](#manim.mobject.graphing.number_line.NumberLine.add_labels \"Link to this definition\")\nAdds specifically positioned labels to the [`NumberLine`](#manim.mobject.graphing.number_line.NumberLine \"manim.mobject.graphing.number_line.NumberLine\") using a `dict`.\nThe labels can be accessed after creation via `self.labels`.\nParameters:\n* **dict\\_values** (*dict**\\[**float**,* *str* *\\|* *float* *\\|* [*VMobject*](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\")*]*) – A dictionary consisting of the position along the number line and the mobject to be added:\n`{1: Tex(\"Monday\"), 3: Tex(\"Tuesday\")}`. `label_constructor` will be used\nto construct the labels if the value is not a mobject (`str` or `float`).\n* **direction** (*Sequence**\\[**float**]*) – Determines the direction at which the label is positioned next to the line.\n* **buff** (*float* *\\|* *None*) – The distance of the label from the line.\n* **font\\_size** (*float* *\\|* *None*) – The font size of the mobject to be positioned.\n* **label\\_constructor** ([*VMobject*](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\") *\\|* *None*) – The [`VMobject`](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\") class that will be used to construct the label.\nDefaults to the `label_constructor` attribute of the number line\nif not specified.\nRaises:\n**AttributeError** – If the label does not have a `font_size` attribute, an `AttributeError` is raised.\nadd\\_numbers(*x\\_values\\=None*, *excluding\\=None*, *font\\_size\\=None*, *label\\_constructor\\=None*, *\\*\\*kwargs*)[\\[source]](../_modules/manim/mobject/graphing/number_line.html#NumberLine.add_numbers)[¶](#manim.mobject.graphing.number_line.NumberLine.add_numbers \"Link to this definition\")\nAdds [`DecimalNumber`](manim.mobject.text.numbers.DecimalNumber.html#manim.mobject.text.numbers.DecimalNumber \"manim.mobject.text.numbers.DecimalNumber\") mobjects representing their position\nat each tick of the number line. The numbers can be accessed after creation\nvia `self.numbers`.\nParameters:\n* **x\\_values** (*Iterable**\\[**float**]* *\\|* *None*) – An iterable of the values used to position and create the labels.\nDefaults to the output produced by [`get_tick_range()`](#manim.mobject.graphing.number_line.NumberLine.get_tick_range \"manim.mobject.graphing.number_line.NumberLine.get_tick_range\")\n* **excluding** (*Iterable**\\[**float**]* *\\|* *None*) – A list of values to exclude from `x_values`.\n* **font\\_size** (*float* *\\|* *None*) – The font size of the labels. Defaults to the `font_size` attribute\nof the number line.\n* **label\\_constructor** ([*VMobject*](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\") *\\|* *None*) – The [`VMobject`](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\") class that will be used to construct the label.\nDefaults to the `label_constructor` attribute of the number line\nif not specified.\nadd\\_ticks()[\\[source]](../_modules/manim/mobject/graphing/number_line.html#NumberLine.add_ticks)[¶](#manim.mobject.graphing.number_line.NumberLine.add_ticks \"Link to this definition\")\nAdds ticks to the number line. Ticks can be accessed after creation\nvia `self.ticks`.\nget\\_number\\_mobject(*x*, *direction\\=None*, *buff\\=None*, *font\\_size\\=None*, *label\\_constructor\\=None*, *\\*\\*number\\_config*)[\\[source]](../_modules/manim/mobject/graphing/number_line.html#NumberLine.get_number_mobject)[¶](#manim.mobject.graphing.number_line.NumberLine.get_number_mobject \"Link to this definition\")\nGenerates a positioned [`DecimalNumber`](manim.mobject.text.numbers.DecimalNumber.html#manim.mobject.text.numbers.DecimalNumber \"manim.mobject.text.numbers.DecimalNumber\") mobject\ngenerated according to `label_constructor`.\nParameters:\n* **x** (*float*) – The x\\-value at which the mobject should be positioned.\n* **direction** (*Sequence**\\[**float**]* *\\|* *None*) – Determines the direction at which the label is positioned next to the line.\n* **buff** (*float* *\\|* *None*) – The distance of the label from the line.\n* **font\\_size** (*float* *\\|* *None*) – The font size of the label mobject.\n* **label\\_constructor** ([*VMobject*](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\") *\\|* *None*) – The [`VMobject`](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\") class that will be used to construct the label.\nDefaults to the `label_constructor` attribute of the number line\nif not specified.\nReturns:\nThe positioned mobject.\nReturn type:\n[`DecimalNumber`](manim.mobject.text.numbers.DecimalNumber.html#manim.mobject.text.numbers.DecimalNumber \"manim.mobject.text.numbers.DecimalNumber\")\nget\\_tick(*x*, *size\\=None*)[\\[source]](../_modules/manim/mobject/graphing/number_line.html#NumberLine.get_tick)[¶](#manim.mobject.graphing.number_line.NumberLine.get_tick \"Link to this definition\")\nGenerates a tick and positions it along the number line.\nParameters:\n* **x** (*float*) – The position of the tick.\n* **size** (*float* *\\|* *None*) – The factor by which the tick is scaled.\nReturns:\nA positioned tick.\nReturn type:\n[`Line`](manim.mobject.geometry.line.Line.html#manim.mobject.geometry.line.Line \"manim.mobject.geometry.line.Line\")\nget\\_tick\\_range()[\\[source]](../_modules/manim/mobject/graphing/number_line.html#NumberLine.get_tick_range)[¶](#manim.mobject.graphing.number_line.NumberLine.get_tick_range \"Link to this definition\")\nGenerates the range of values on which labels are plotted based on the\n`x_range` attribute of the number line.\nReturns:\nA numpy array of floats represnting values along the number line.\nReturn type:\nnp.ndarray\nn2p(*number*)[\\[source]](../_modules/manim/mobject/graphing/number_line.html#NumberLine.n2p)[¶](#manim.mobject.graphing.number_line.NumberLine.n2p \"Link to this definition\")\nAbbreviation for [`number_to_point()`](#manim.mobject.graphing.number_line.NumberLine.number_to_point \"manim.mobject.graphing.number_line.NumberLine.number_to_point\").\nParameters:\n**number** (*float* *\\|* *ndarray*)\nReturn type:\n*ndarray*\nnumber\\_to\\_point(*number*)[\\[source]](../_modules/manim/mobject/graphing/number_line.html#NumberLine.number_to_point)[¶](#manim.mobject.graphing.number_line.NumberLine.number_to_point \"Link to this definition\")\nAccepts a value along the number line and returns a point with\nrespect to the scene.\nEquivalent to NumberLine @ number\nParameters:\n**number** (*float* *\\|* *ndarray*) – The value to be transformed into a coordinate. Or a list of values.\nReturns:\nA point with respect to the scene’s coordinate system. Or a list of points.\nReturn type:\nnp.ndarray\nExamples\n```\n>>> from manim import NumberLine\n>>> number_line = NumberLine()\n>>> number_line.number_to_point(0)\narray([0., 0., 0.])\n>>> number_line.number_to_point(1)\narray([1., 0., 0.])\n>>> number_line @ 1\narray([1., 0., 0.])\n>>> number_line.number_to_point([1, 2, 3])\narray([[1., 0., 0.],\n       [2., 0., 0.],\n       [3., 0., 0.]])\n```\np2n(*point*)[\\[source]](../_modules/manim/mobject/graphing/number_line.html#NumberLine.p2n)[¶](#manim.mobject.graphing.number_line.NumberLine.p2n \"Link to this definition\")\nAbbreviation for [`point_to_number()`](#manim.mobject.graphing.number_line.NumberLine.point_to_number \"manim.mobject.graphing.number_line.NumberLine.point_to_number\").\nParameters:\n**point** (*Sequence**\\[**float**]*)\nReturn type:\nfloat\npoint\\_to\\_number(*point*)[\\[source]](../_modules/manim/mobject/graphing/number_line.html#NumberLine.point_to_number)[¶](#manim.mobject.graphing.number_line.NumberLine.point_to_number \"Link to this definition\")\nAccepts a point with respect to the scene and returns\na float along the number line.\nParameters:\n**point** (*Sequence**\\[**float**]*) – A sequence of values consisting of `(x_coord, y_coord, z_coord)`.\nReturns:\nA float representing a value along the number line.\nReturn type:\nfloat\nExamples\n```\n>>> from manim import NumberLine\n>>> number_line = NumberLine()\n>>> number_line.point_to_number((0, 0, 0))\nnp.float64(0.0)\n>>> number_line.point_to_number((1, 0, 0))\nnp.float64(1.0)\n>>> number_line.point_to_number([[0.5, 0, 0], [1, 0, 0], [1.5, 0, 0]])\narray([0.5, 1. , 1.5])\n```",
  "scraped_at": "2025-06-24T17:55:30.689299",
  "content_length": 22526,
  "domain": "docs.manim.community",
  "word_count": 1851,
  "inspection_status": "pending",
  "filename": "NumberLine - Manim Community v0.19.0_20250624_175530.json",
  "saved_at": "2025-06-24T17:55:30.689407"
}