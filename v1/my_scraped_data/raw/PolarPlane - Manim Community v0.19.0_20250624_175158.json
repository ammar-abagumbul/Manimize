{
  "doc_id": "c00be6ab7b84182f01759a36d8aee4f5",
  "url": "https://docs.manim.community/en/latest/reference/manim.mobject.graphing.coordinate_systems.PolarPlane.html",
  "title": "PolarPlane - Manim Community v0.19.0",
  "content": "PolarPlane[¶](#polarplane \"Link to this heading\")\n=================================================\nQualified name: `manim.mobject.graphing.coordinate\\_systems.PolarPlane`\n*class* PolarPlane(*radius\\_max\\=4\\.0*, *size\\=None*, *radius\\_step\\=1*, *azimuth\\_step\\=None*, *azimuth\\_units\\='PI radians'*, *azimuth\\_compact\\_fraction\\=True*, *azimuth\\_offset\\=0*, *azimuth\\_direction\\='CCW'*, *azimuth\\_label\\_buff\\=0\\.1*, *azimuth\\_label\\_font\\_size\\=24*, *radius\\_config\\=None*, *background\\_line\\_style\\=None*, *faded\\_line\\_style\\=None*, *faded\\_line\\_ratio\\=1*, *make\\_smooth\\_after\\_applying\\_functions\\=True*, *\\*\\*kwargs*)[\\[source]](../_modules/manim/mobject/graphing/coordinate_systems.html#PolarPlane)[¶](#manim.mobject.graphing.coordinate_systems.PolarPlane \"Link to this definition\")\nBases: [`Axes`](manim.mobject.graphing.coordinate_systems.Axes.html#manim.mobject.graphing.coordinate_systems.Axes \"manim.mobject.graphing.coordinate_systems.Axes\")\nCreates a polar plane with background lines.\nParameters:\n* **azimuth\\_step** (*float* *\\|* *None*) – The number of divisions in the azimuth (also known as the angular coordinate or polar angle). If `None` is specified then it will use the default\nspecified by `azimuth_units`:\n\t+ `\"PI radians\"` or `\"TAU radians\"`: 20\n\t+ `\"degrees\"`: 36\n\t+ `\"gradians\"`: 40\n\t+ `None`: 1\nA non\\-integer value will result in a partial division at the end of the circle.\n* **size** (*float* *\\|* *None*) – The diameter of the plane.\n* **radius\\_step** (*float*) – The distance between faded radius lines.\n* **radius\\_max** (*float*) – The maximum value of the radius.\n* **azimuth\\_units** (*str* *\\|* *None*) – Specifies a default labelling system for the azimuth. Choices are:\n\t+ `\"PI radians\"`: Fractional labels in the interval \\\\(\\\\left\\[0, 2\\\\pi\\\\right]\\\\) with \\\\(\\\\pi\\\\) as a constant.\n\t+ `\"TAU radians\"`: Fractional labels in the interval \\\\(\\\\left\\[0, \\\\tau\\\\right]\\\\) (where \\\\(\\\\tau \\= 2\\\\pi\\\\)) with \\\\(\\\\tau\\\\) as a constant.\n\t+ `\"degrees\"`: Decimal labels in the interval \\\\(\\\\left\\[0, 360\\\\right]\\\\) with a degree (\\\\(^{\\\\circ}\\\\)) symbol.\n\t+ `\"gradians\"`: Decimal labels in the interval \\\\(\\\\left\\[0, 400\\\\right]\\\\) with a superscript “g” (\\\\(^{g}\\\\)).\n\t+ `None`: Decimal labels in the interval \\\\(\\\\left\\[0, 1\\\\right]\\\\).\n* **azimuth\\_compact\\_fraction** (*bool*) – If the `azimuth_units` choice has fractional labels, choose whether to\ncombine the constant in a compact form \\\\(\\\\tfrac{xu}{y}\\\\) as opposed to\n\\\\(\\\\tfrac{x}{y}u\\\\), where \\\\(u\\\\) is the constant.\n* **azimuth\\_offset** (*float*) – The angle offset of the azimuth, expressed in radians.\n* **azimuth\\_direction** (*str*) – The direction of the azimuth.\n\t+ `\"CW\"`: Clockwise.\n\t+ `\"CCW\"`: Anti\\-clockwise.\n* **azimuth\\_label\\_buff** (*float*) – The buffer for the azimuth labels.\n* **azimuth\\_label\\_font\\_size** (*float*) – The font size of the azimuth labels.\n* **radius\\_config** (*dict**\\[**str**,* *Any**]* *\\|* *None*) – The axis config for the radius.\n* **background\\_line\\_style** (*dict**\\[**str**,* *Any**]* *\\|* *None*)\n* **faded\\_line\\_style** (*dict**\\[**str**,* *Any**]* *\\|* *None*)\n* **faded\\_line\\_ratio** (*int*)\n* **make\\_smooth\\_after\\_applying\\_functions** (*bool*)\n* **kwargs** (*Any*)\nExamples\nExample: PolarPlaneExample [¶](#polarplaneexample)\n![../_images/PolarPlaneExample-1.png](../_images/PolarPlaneExample-1.png)\n```\nfrom manim import *\nclass PolarPlaneExample(Scene):\n    def construct(self):\n        polarplane_pi = PolarPlane(\n            azimuth_units=\"PI radians\",\n            size=6,\n            azimuth_label_font_size=33.6,\n            radius_config={\"font_size\": 33.6},\n        ).add_coordinates()\n        self.add(polarplane_pi)\n```\n```\nclass PolarPlaneExample(Scene):\n    def construct(self):\n        polarplane_pi = PolarPlane(\n            azimuth_units=\"PI radians\",\n            size=6,\n            azimuth_label_font_size=33.6,\n            radius_config={\"font_size\": 33.6},\n        ).add_coordinates()\n        self.add(polarplane_pi)\n```\nReferences: [`PolarPlane`](#manim.mobject.graphing.coordinate_systems.PolarPlane \"manim.mobject.graphing.coordinate_systems.PolarPlane\")\nMethods\n| [`add_coordinates`](#manim.mobject.graphing.coordinate_systems.PolarPlane.add_coordinates \"manim.mobject.graphing.coordinate_systems.PolarPlane.add_coordinates\") | Adds the coordinates. |\n| --- | --- |\n| [`get_axes`](#manim.mobject.graphing.coordinate_systems.PolarPlane.get_axes \"manim.mobject.graphing.coordinate_systems.PolarPlane.get_axes\") | Gets the axes. |\n| [`get_coordinate_labels`](#manim.mobject.graphing.coordinate_systems.PolarPlane.get_coordinate_labels \"manim.mobject.graphing.coordinate_systems.PolarPlane.get_coordinate_labels\") | Gets labels for the coordinates |\n| `get_radian_label` |  |\n| `get_vector` |  |\n| `prepare_for_nonlinear_transform` |  |\nAttributes\n| `animate` | Used to animate the application of any method of `self`. |\n| --- | --- |\n| `animation_overrides` |  |\n| `color` |  |\n| `depth` | The depth of the mobject. |\n| `fill_color` | If there are multiple colors (for gradient) this returns the first one |\n| `height` | The height of the mobject. |\n| `n_points_per_curve` |  |\n| `sheen_factor` |  |\n| `stroke_color` |  |\n| `width` | The width of the mobject. |\n\\_get\\_lines()[\\[source]](../_modules/manim/mobject/graphing/coordinate_systems.html#PolarPlane._get_lines)[¶](#manim.mobject.graphing.coordinate_systems.PolarPlane._get_lines \"Link to this definition\")\nGenerate all the lines and circles, faded and not faded.\nReturns:\nThe first (i.e the non faded lines and circles) and second (i.e the faded lines and circles) sets of lines and circles, respectively.\nReturn type:\nTuple\\[[`VGroup`](manim.mobject.types.vectorized_mobject.VGroup.html#manim.mobject.types.vectorized_mobject.VGroup \"manim.mobject.types.vectorized_mobject.VGroup\"), [`VGroup`](manim.mobject.types.vectorized_mobject.VGroup.html#manim.mobject.types.vectorized_mobject.VGroup \"manim.mobject.types.vectorized_mobject.VGroup\")]\n\\_init\\_background\\_lines()[\\[source]](../_modules/manim/mobject/graphing/coordinate_systems.html#PolarPlane._init_background_lines)[¶](#manim.mobject.graphing.coordinate_systems.PolarPlane._init_background_lines \"Link to this definition\")\nWill init all the lines of NumberPlanes (faded or not)\nReturn type:\nNone\n\\_original\\_\\_init\\_\\_(*radius\\_max\\=4\\.0*, *size\\=None*, *radius\\_step\\=1*, *azimuth\\_step\\=None*, *azimuth\\_units\\='PI radians'*, *azimuth\\_compact\\_fraction\\=True*, *azimuth\\_offset\\=0*, *azimuth\\_direction\\='CCW'*, *azimuth\\_label\\_buff\\=0\\.1*, *azimuth\\_label\\_font\\_size\\=24*, *radius\\_config\\=None*, *background\\_line\\_style\\=None*, *faded\\_line\\_style\\=None*, *faded\\_line\\_ratio\\=1*, *make\\_smooth\\_after\\_applying\\_functions\\=True*, *\\*\\*kwargs*)[¶](#manim.mobject.graphing.coordinate_systems.PolarPlane._original__init__ \"Link to this definition\")\nInitialize self. See help(type(self)) for accurate signature.\nParameters:\n* **radius\\_max** (*float*)\n* **size** (*float* *\\|* *None*)\n* **radius\\_step** (*float*)\n* **azimuth\\_step** (*float* *\\|* *None*)\n* **azimuth\\_units** (*str* *\\|* *None*)\n* **azimuth\\_compact\\_fraction** (*bool*)\n* **azimuth\\_offset** (*float*)\n* **azimuth\\_direction** (*str*)\n* **azimuth\\_label\\_buff** (*float*)\n* **azimuth\\_label\\_font\\_size** (*float*)\n* **radius\\_config** (*dict**\\[**str**,* *Any**]* *\\|* *None*)\n* **background\\_line\\_style** (*dict**\\[**str**,* *Any**]* *\\|* *None*)\n* **faded\\_line\\_style** (*dict**\\[**str**,* *Any**]* *\\|* *None*)\n* **faded\\_line\\_ratio** (*int*)\n* **make\\_smooth\\_after\\_applying\\_functions** (*bool*)\n* **kwargs** (*Any*)\nReturn type:\nNone\nadd\\_coordinates(*r\\_values\\=None*, *a\\_values\\=None*)[\\[source]](../_modules/manim/mobject/graphing/coordinate_systems.html#PolarPlane.add_coordinates)[¶](#manim.mobject.graphing.coordinate_systems.PolarPlane.add_coordinates \"Link to this definition\")\nAdds the coordinates.\nParameters:\n* **r\\_values** (*Iterable**\\[**float**]* *\\|* *None*) – Iterable of values along the radius, by default None.\n* **a\\_values** (*Iterable**\\[**float**]* *\\|* *None*) – Iterable of values along the azimuth, by default None.\nReturn type:\n*Self*\nget\\_axes()[\\[source]](../_modules/manim/mobject/graphing/coordinate_systems.html#PolarPlane.get_axes)[¶](#manim.mobject.graphing.coordinate_systems.PolarPlane.get_axes \"Link to this definition\")\nGets the axes.\nReturns:\nA pair of axes.\nReturn type:\n[`VGroup`](manim.mobject.types.vectorized_mobject.VGroup.html#manim.mobject.types.vectorized_mobject.VGroup \"manim.mobject.types.vectorized_mobject.VGroup\")\nget\\_coordinate\\_labels(*r\\_values\\=None*, *a\\_values\\=None*, *\\*\\*kwargs*)[\\[source]](../_modules/manim/mobject/graphing/coordinate_systems.html#PolarPlane.get_coordinate_labels)[¶](#manim.mobject.graphing.coordinate_systems.PolarPlane.get_coordinate_labels \"Link to this definition\")\nGets labels for the coordinates\nParameters:\n* **r\\_values** (*Iterable**\\[**float**]* *\\|* *None*) – Iterable of values along the radius, by default None.\n* **a\\_values** (*Iterable**\\[**float**]* *\\|* *None*) – Iterable of values along the azimuth, by default None.\n* **kwargs** (*Any*)\nReturns:\nLabels for the radius and azimuth values.\nReturn type:\n[VDict](manim.mobject.types.vectorized_mobject.VDict.html#manim.mobject.types.vectorized_mobject.VDict \"manim.mobject.types.vectorized_mobject.VDict\")",
  "scraped_at": "2025-06-24T17:51:58.056057",
  "content_length": 9339,
  "domain": "docs.manim.community",
  "word_count": 789,
  "inspection_status": "pending",
  "filename": "PolarPlane - Manim Community v0.19.0_20250624_175158.json",
  "saved_at": "2025-06-24T17:51:58.056127"
}