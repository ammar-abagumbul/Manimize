{
  "doc_id": "679fa0f7990346f0c6d1a024ab08764d",
  "url": "https://docs.manim.community/en/latest/reference/manim.utils.color.core.RandomColorGenerator.html",
  "title": "RandomColorGenerator - Manim Community v0.19.0",
  "content": "RandomColorGenerator[¶](#randomcolorgenerator \"Link to this heading\")\n=====================================================================\nQualified name: `manim.utils.color.core.RandomColorGenerator`\n*class* RandomColorGenerator(*seed\\=None*, *sample\\_colors\\=None*)[\\[source]](../_modules/manim/utils/color/core.html#RandomColorGenerator)[¶](#manim.utils.color.core.RandomColorGenerator \"Link to this definition\")\nBases: `object`\nMethods\n| [`next`](#manim.utils.color.core.RandomColorGenerator.next \"manim.utils.color.core.RandomColorGenerator.next\") | Returns the next color from the configured color list. |\n| --- | --- |\nParameters:\n* **seed** (*int* *\\|* *None*)\n* **sample\\_colors** (*list**\\[*[*ManimColor*](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor \"manim.utils.color.core.ManimColor\")*]* *\\|* *None*)\n*classmethod* \\_random\\_color()[\\[source]](../_modules/manim/utils/color/core.html#RandomColorGenerator._random_color)[¶](#manim.utils.color.core.RandomColorGenerator._random_color \"Link to this definition\")\nInternal method to generate a random color using the singleton instance of\nRandomColorGenerator.\nIt will be used by proxy method random\\_color publicly available\nand makes it backwards compatible.\nReturns:\nA randomly selected color from the configured color list of\nthe singleton instance.\nReturn type:\n[ManimColor](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor \"manim.utils.color.core.ManimColor\")\n\\_singleton*: [RandomColorGenerator](#manim.utils.color.core.RandomColorGenerator \"manim.utils.color.core.RandomColorGenerator\") \\| None* *\\= \\<manim.utils.color.core.RandomColorGenerator object\\>*[¶](#manim.utils.color.core.RandomColorGenerator._singleton \"Link to this definition\")\nA generator for producing random colors from a given list of Manim colors,\noptionally in a reproducible sequence using a seed value.\nWhen initialized with a specific seed, this class produces a deterministic\nsequence of [`ManimColor`](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor \"manim.utils.color.core.ManimColor\") instances. If no seed is provided, the selection is\nnon\\-deterministic using Python’s global random state.\nParameters:\n* **seed** – A seed value to initialize the internal random number generator.\nIf `None` (the default), colors are chosen using the global random state.\n* **sample\\_colors** – A custom list of Manim colors to sample from. Defaults to the full Manim\ncolor palette.\nExamples\nWithout a seed (non\\-deterministic):\n```\n>>> from manim import RandomColorGenerator, ManimColor, RED, GREEN, BLUE\n>>> rnd = RandomColorGenerator()\n>>> isinstance(rnd.next(), ManimColor)\nTrue\n```\nWith a seed (deterministic sequence):\n```\n>>> rnd = RandomColorGenerator(42)\n>>> rnd.next()\nManimColor('#ECE7E2')\n>>> rnd.next()\nManimColor('#BBBBBB')\n>>> rnd.next()\nManimColor('#BBBBBB')\n```\nRe\\-initializing with the same seed gives the same sequence:\n```\n>>> rnd2 = RandomColorGenerator(42)\n>>> rnd2.next()\nManimColor('#ECE7E2')\n>>> rnd2.next()\nManimColor('#BBBBBB')\n>>> rnd2.next()\nManimColor('#BBBBBB')\n```\nUsing a custom color list:\n```\n>>> custom_palette = [RED, GREEN, BLUE]\n>>> rnd_custom = RandomColorGenerator(1, sample_colors=custom_palette)\n>>> rnd_custom.next() in custom_palette\nTrue\n>>> rnd_custom.next() in custom_palette\nTrue\n```\nWithout a seed and custom palette (non\\-deterministic):\n```\n>>> rnd_nodet = RandomColorGenerator(sample_colors=[RED])\n>>> rnd_nodet.next()\nManimColor('#FC6255')\n```\nnext()[\\[source]](../_modules/manim/utils/color/core.html#RandomColorGenerator.next)[¶](#manim.utils.color.core.RandomColorGenerator.next \"Link to this definition\")\nReturns the next color from the configured color list.\nReturns:\nA randomly selected color from the specified color list.\nReturn type:\n[ManimColor](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor \"manim.utils.color.core.ManimColor\")\nExamples\nUsage:\n```\n>>> from manim import RandomColorGenerator, RED\n>>> rnd = RandomColorGenerator(sample_colors=[RED])\n>>> rnd.next()\nManimColor('#FC6255')\n```",
  "scraped_at": "2025-06-24T18:35:06.731896",
  "content_length": 4086,
  "domain": "docs.manim.community",
  "word_count": 368,
  "inspection_status": "pending",
  "filename": "RandomColorGenerator - Manim Community v0.19.0_20250624_183506.json",
  "saved_at": "2025-06-24T18:35:06.731951"
}