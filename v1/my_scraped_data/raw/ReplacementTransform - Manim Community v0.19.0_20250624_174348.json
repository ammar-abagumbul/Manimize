{
  "doc_id": "0a9e9e6720ecce4cb656970453d5ba12",
  "url": "https://docs.manim.community/en/latest/reference/manim.animation.transform.ReplacementTransform.html",
  "title": "ReplacementTransform - Manim Community v0.19.0",
  "content": "ReplacementTransform[¶](#replacementtransform \"Link to this heading\")\n=====================================================================\nQualified name: `manim.animation.transform.ReplacementTransform`\n*class* ReplacementTransform(*mobject\\=None*, *\\*args*, *use\\_override\\=True*, *\\*\\*kwargs*)[\\[source]](../_modules/manim/animation/transform.html#ReplacementTransform)[¶](#manim.animation.transform.ReplacementTransform \"Link to this definition\")\nBases: [`Transform`](manim.animation.transform.Transform.html#manim.animation.transform.Transform \"manim.animation.transform.Transform\")\nReplaces and morphs a mobject into a target mobject.\nParameters:\n* **mobject** ([*Mobject*](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\")) – The starting [`Mobject`](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\").\n* **target\\_mobject** ([*Mobject*](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\")) – The target [`Mobject`](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\").\n* **kwargs** – Further keyword arguments that are passed to [`Transform`](manim.animation.transform.Transform.html#manim.animation.transform.Transform \"manim.animation.transform.Transform\").\nExamples\nExample: ReplacementTransformOrTransform [¶](#replacementtransformortransform)\n```\nfrom manim import *\nclass ReplacementTransformOrTransform(Scene):\n    def construct(self):\n        # set up the numbers\n        r_transform = VGroup(*[Integer(i) for i in range(1,4)])\n        text_1 = Text(\"ReplacementTransform\", color=RED)\n        r_transform.add(text_1)\n        transform = VGroup(*[Integer(i) for i in range(4,7)])\n        text_2 = Text(\"Transform\", color=BLUE)\n        transform.add(text_2)\n        ints = VGroup(r_transform, transform)\n        texts = VGroup(text_1, text_2).scale(0.75)\n        r_transform.arrange(direction=UP, buff=1)\n        transform.arrange(direction=UP, buff=1)\n        ints.arrange(buff=2)\n        self.add(ints, texts)\n        # The mobs replace each other and none are left behind\n        self.play(ReplacementTransform(r_transform[0], r_transform[1]))\n        self.play(ReplacementTransform(r_transform[1], r_transform[2]))\n        # The mobs linger after the Transform()\n        self.play(Transform(transform[0], transform[1]))\n        self.play(Transform(transform[1], transform[2]))\n        self.wait()\n```\n```\nclass ReplacementTransformOrTransform(Scene):\n    def construct(self):\n        # set up the numbers\n        r_transform = VGroup(*[Integer(i) for i in range(1,4)])\n        text_1 = Text(\"ReplacementTransform\", color=RED)\n        r_transform.add(text_1)\n        transform = VGroup(*[Integer(i) for i in range(4,7)])\n        text_2 = Text(\"Transform\", color=BLUE)\n        transform.add(text_2)\n        ints = VGroup(r_transform, transform)\n        texts = VGroup(text_1, text_2).scale(0.75)\n        r_transform.arrange(direction=UP, buff=1)\n        transform.arrange(direction=UP, buff=1)\n        ints.arrange(buff=2)\n        self.add(ints, texts)\n        # The mobs replace each other and none are left behind\n        self.play(ReplacementTransform(r_transform[0], r_transform[1]))\n        self.play(ReplacementTransform(r_transform[1], r_transform[2]))\n        # The mobs linger after the Transform()\n        self.play(Transform(transform[0], transform[1]))\n        self.play(Transform(transform[1], transform[2]))\n        self.wait()\n```\nMethods\nAttributes\n| `path_arc` |  |\n| --- | --- |\n| `path_func` |  |\n| `run_time` |  |\n\\_original\\_\\_init\\_\\_(*mobject*, *target\\_mobject*, *\\*\\*kwargs*)[¶](#manim.animation.transform.ReplacementTransform._original__init__ \"Link to this definition\")\nInitialize self. See help(type(self)) for accurate signature.\nParameters:\n* **mobject** ([*Mobject*](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\"))\n* **target\\_mobject** ([*Mobject*](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\"))\nReturn type:\nNone",
  "scraped_at": "2025-06-24T17:43:48.051290",
  "content_length": 4151,
  "domain": "docs.manim.community",
  "word_count": 268,
  "inspection_status": "pending",
  "filename": "ReplacementTransform - Manim Community v0.19.0_20250624_174348.json",
  "saved_at": "2025-06-24T17:43:48.051337"
}