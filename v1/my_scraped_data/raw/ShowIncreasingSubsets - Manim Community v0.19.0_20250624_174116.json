{
  "doc_id": "c6ace3a21a7f185f38c3f652647c5c99",
  "url": "https://docs.manim.community/en/latest/reference/manim.animation.creation.ShowIncreasingSubsets.html",
  "title": "ShowIncreasingSubsets - Manim Community v0.19.0",
  "content": "ShowIncreasingSubsets[¶](#showincreasingsubsets \"Link to this heading\")\n=======================================================================\nQualified name: `manim.animation.creation.ShowIncreasingSubsets`\n*class* ShowIncreasingSubsets(*mobject\\=None*, *\\*args*, *use\\_override\\=True*, *\\*\\*kwargs*)[\\[source]](../_modules/manim/animation/creation.html#ShowIncreasingSubsets)[¶](#manim.animation.creation.ShowIncreasingSubsets \"Link to this definition\")\nBases: [`Animation`](manim.animation.animation.Animation.html#manim.animation.animation.Animation \"manim.animation.animation.Animation\")\nShow one submobject at a time, leaving all previous ones displayed on screen.\nExamples\nExample: ShowIncreasingSubsetsScene [¶](#showincreasingsubsetsscene)\n```\nfrom manim import *\nclass ShowIncreasingSubsetsScene(Scene):\n    def construct(self):\n        p = VGroup(Dot(), Square(), Triangle())\n        self.add(p)\n        self.play(ShowIncreasingSubsets(p))\n        self.wait()\n```\n```\nclass ShowIncreasingSubsetsScene(Scene):\n    def construct(self):\n        p = VGroup(Dot(), Square(), Triangle())\n        self.add(p)\n        self.play(ShowIncreasingSubsets(p))\n        self.wait()\n```\nMethods\n| [`interpolate_mobject`](#manim.animation.creation.ShowIncreasingSubsets.interpolate_mobject \"manim.animation.creation.ShowIncreasingSubsets.interpolate_mobject\") | Interpolates the mobject of the `Animation` based on alpha value. |\n| --- | --- |\n| `update_submobject_list` |  |\nAttributes\n| `run_time` |  |\n| --- | --- |\nParameters:\n* **group** ([*Mobject*](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\"))\n* **suspend\\_mobject\\_updating** (*bool*)\n* **int\\_func** (*Callable**\\[**\\[**np.ndarray**]**,* *np.ndarray**]*)\n\\_original\\_\\_init\\_\\_(*group*, *suspend\\_mobject\\_updating\\=False*, *int\\_func\\=\\<ufunc 'floor'\\>*, *reverse\\_rate\\_function\\=False*, *\\*\\*kwargs*)[¶](#manim.animation.creation.ShowIncreasingSubsets._original__init__ \"Link to this definition\")\nInitialize self. See help(type(self)) for accurate signature.\nParameters:\n* **group** ([*Mobject*](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\"))\n* **suspend\\_mobject\\_updating** (*bool*)\n* **int\\_func** (*Callable**\\[**\\[**ndarray**]**,* *ndarray**]*)\nReturn type:\nNone\ninterpolate\\_mobject(*alpha*)[\\[source]](../_modules/manim/animation/creation.html#ShowIncreasingSubsets.interpolate_mobject)[¶](#manim.animation.creation.ShowIncreasingSubsets.interpolate_mobject \"Link to this definition\")\nInterpolates the mobject of the `Animation` based on alpha value.\nParameters:\n**alpha** (*float*) – A float between 0 and 1 expressing the ratio to which the animation\nis completed. For example, alpha\\-values of 0, 0\\.5, and 1 correspond\nto the animation being completed 0%, 50%, and 100%, respectively.\nReturn type:\nNone",
  "scraped_at": "2025-06-24T17:41:16.649260",
  "content_length": 2875,
  "domain": "docs.manim.community",
  "word_count": 205,
  "inspection_status": "pending",
  "filename": "ShowIncreasingSubsets - Manim Community v0.19.0_20250624_174116.json",
  "saved_at": "2025-06-24T17:41:16.649949"
}