{
  "doc_id": "b2ff381935f2619d205863ee8d18d0d9",
  "url": "https://docs.manim.community/en/latest/reference/manim.animation.indication.ShowPassingFlash.html",
  "title": "ShowPassingFlash - Manim Community v0.19.0",
  "content": "ShowPassingFlash[¶](#showpassingflash \"Link to this heading\")\n=============================================================\nQualified name: `manim.animation.indication.ShowPassingFlash`\n*class* ShowPassingFlash(*mobject\\=None*, *\\*args*, *use\\_override\\=True*, *\\*\\*kwargs*)[\\[source]](../_modules/manim/animation/indication.html#ShowPassingFlash)[¶](#manim.animation.indication.ShowPassingFlash \"Link to this definition\")\nBases: [`ShowPartial`](manim.animation.creation.ShowPartial.html#manim.animation.creation.ShowPartial \"manim.animation.creation.ShowPartial\")\nShow only a sliver of the VMobject each frame.\nParameters:\n* **mobject** ([*VMobject*](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\")) – The mobject whose stroke is animated.\n* **time\\_width** (*float*) – The length of the sliver relative to the length of the stroke.\nExamples\nExample: TimeWidthValues [¶](#timewidthvalues)\n```\nfrom manim import *\nclass TimeWidthValues(Scene):\n    def construct(self):\n        p = RegularPolygon(5, color=DARK_GRAY, stroke_width=6).scale(3)\n        lbl = VMobject()\n        self.add(p, lbl)\n        p = p.copy().set_color(BLUE)\n        for time_width in [0.2, 0.5, 1, 2]:\n            lbl.become(Tex(r\"\\texttt{time\\_width={{%.1f}}}\"%time_width))\n            self.play(ShowPassingFlash(\n                p.copy().set_color(BLUE),\n                run_time=2,\n                time_width=time_width\n            ))\n```\n```\nclass TimeWidthValues(Scene):\n    def construct(self):\n        p = RegularPolygon(5, color=DARK_GRAY, stroke_width=6).scale(3)\n        lbl = VMobject()\n        self.add(p, lbl)\n        p = p.copy().set_color(BLUE)\n        for time_width in [0.2, 0.5, 1, 2]:\n            lbl.become(Tex(r\"\\texttt{time\\_width={{%.1f}}}\"%time_width))\n            self.play(ShowPassingFlash(\n                p.copy().set_color(BLUE),\n                run_time=2,\n                time_width=time_width\n            ))\n```\nSee also\n[`Create`](manim.animation.creation.Create.html#manim.animation.creation.Create \"manim.animation.creation.Create\")\nMethods\n| [`clean_up_from_scene`](#manim.animation.indication.ShowPassingFlash.clean_up_from_scene \"manim.animation.indication.ShowPassingFlash.clean_up_from_scene\") | Clean up the [`Scene`](manim.scene.scene.Scene.html#manim.scene.scene.Scene \"manim.scene.scene.Scene\") after finishing the animation. |\n| --- | --- |\nAttributes\n| `run_time` |  |\n| --- | --- |\n\\_original\\_\\_init\\_\\_(*mobject*, *time\\_width\\=0\\.1*, *\\*\\*kwargs*)[¶](#manim.animation.indication.ShowPassingFlash._original__init__ \"Link to this definition\")\nInitialize self. See help(type(self)) for accurate signature.\nParameters:\n* **mobject** ([*VMobject*](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\"))\n* **time\\_width** (*float*)\nReturn type:\nNone\nclean\\_up\\_from\\_scene(*scene*)[\\[source]](../_modules/manim/animation/indication.html#ShowPassingFlash.clean_up_from_scene)[¶](#manim.animation.indication.ShowPassingFlash.clean_up_from_scene \"Link to this definition\")\nClean up the [`Scene`](manim.scene.scene.Scene.html#manim.scene.scene.Scene \"manim.scene.scene.Scene\") after finishing the animation.\nThis includes to [`remove()`](manim.scene.scene.Scene.html#manim.scene.scene.Scene.remove \"manim.scene.scene.Scene.remove\") the Animation’s\n[`Mobject`](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\") if the animation is a remover.\nParameters:\n**scene** ([*Scene*](manim.scene.scene.Scene.html#manim.scene.scene.Scene \"manim.scene.scene.Scene\")) – The scene the animation should be cleaned up from.\nReturn type:\nNone",
  "scraped_at": "2025-06-24T17:42:21.487738",
  "content_length": 3785,
  "domain": "docs.manim.community",
  "word_count": 235,
  "inspection_status": "pending",
  "filename": "ShowPassingFlash - Manim Community v0.19.0_20250624_174221.json",
  "saved_at": "2025-06-24T17:42:21.487795"
}