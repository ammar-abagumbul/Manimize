{
  "doc_id": "68a0b97bac042e7fed1c2b04053f3678",
  "url": "https://docs.manim.community/en/latest/reference/manim.animation.transform_matching_parts.TransformMatchingAbstractBase.html",
  "title": "TransformMatchingAbstractBase - Manim Community v0.19.0",
  "content": "TransformMatchingAbstractBase[¶](#transformmatchingabstractbase \"Link to this heading\")\n=======================================================================================\nQualified name: `manim.animation.transform\\_matching\\_parts.TransformMatchingAbstractBase`\n*class* TransformMatchingAbstractBase(*mobject\\=None*, *\\*args*, *use\\_override\\=True*, *\\*\\*kwargs*)[\\[source]](../_modules/manim/animation/transform_matching_parts.html#TransformMatchingAbstractBase)[¶](#manim.animation.transform_matching_parts.TransformMatchingAbstractBase \"Link to this definition\")\nBases: [`AnimationGroup`](manim.animation.composition.AnimationGroup.html#manim.animation.composition.AnimationGroup \"manim.animation.composition.AnimationGroup\")\nAbstract base class for transformations that keep track of matching parts.\nSubclasses have to implement the two static methods\n`get_mobject_parts()` and\n`get_mobject_key()`.\nBasically, this transformation first maps all submobjects returned\nby the `get_mobject_parts` method to certain keys by applying the\n`get_mobject_key` method. Then, submobjects with matching keys\nare transformed into each other.\nParameters:\n* **mobject** ([*Mobject*](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\")) – The starting [`Mobject`](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\").\n* **target\\_mobject** ([*Mobject*](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\")) – The target [`Mobject`](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\").\n* **transform\\_mismatches** (*bool*) – Controls whether submobjects without a matching key are transformed\ninto each other by using [`Transform`](manim.animation.transform.Transform.html#manim.animation.transform.Transform \"manim.animation.transform.Transform\"). Default: `False`.\n* **fade\\_transform\\_mismatches** (*bool*) – Controls whether submobjects without a matching key are transformed\ninto each other by using [`FadeTransform`](manim.animation.transform.FadeTransform.html#manim.animation.transform.FadeTransform \"manim.animation.transform.FadeTransform\"). Default: `False`.\n* **key\\_map** (*dict* *\\|* *None*) – Optional. A dictionary mapping keys belonging to some of the starting mobject’s\nsubmobjects (i.e., the return values of the `get_mobject_key` method)\nto some keys belonging to the target mobject’s submobjects that should\nbe transformed although the keys don’t match.\n* **kwargs** – All further keyword arguments are passed to the submobject transformations.\nNote\nIf neither `transform_mismatches` nor `fade_transform_mismatches`\nare set to `True`, submobjects without matching keys in the starting\nmobject are faded out in the direction of the unmatched submobjects in\nthe target mobject, and unmatched submobjects in the target mobject\nare faded in from the direction of the unmatched submobjects in the\nstart mobject.\nMethods\n| [`clean_up_from_scene`](#manim.animation.transform_matching_parts.TransformMatchingAbstractBase.clean_up_from_scene \"manim.animation.transform_matching_parts.TransformMatchingAbstractBase.clean_up_from_scene\") | Clean up the [`Scene`](manim.scene.scene.Scene.html#manim.scene.scene.Scene \"manim.scene.scene.Scene\") after finishing the animation. |\n| --- | --- |\n| `get_mobject_key` |  |\n| `get_mobject_parts` |  |\n| `get_shape_map` |  |\nAttributes\n| `run_time` |  |\n| --- | --- |\n\\_original\\_\\_init\\_\\_(*mobject*, *target\\_mobject*, *transform\\_mismatches\\=False*, *fade\\_transform\\_mismatches\\=False*, *key\\_map\\=None*, *\\*\\*kwargs*)[¶](#manim.animation.transform_matching_parts.TransformMatchingAbstractBase._original__init__ \"Link to this definition\")\nInitialize self. See help(type(self)) for accurate signature.\nParameters:\n* **mobject** ([*Mobject*](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\"))\n* **target\\_mobject** ([*Mobject*](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\"))\n* **transform\\_mismatches** (*bool*)\n* **fade\\_transform\\_mismatches** (*bool*)\n* **key\\_map** (*dict* *\\|* *None*)\nclean\\_up\\_from\\_scene(*scene*)[\\[source]](../_modules/manim/animation/transform_matching_parts.html#TransformMatchingAbstractBase.clean_up_from_scene)[¶](#manim.animation.transform_matching_parts.TransformMatchingAbstractBase.clean_up_from_scene \"Link to this definition\")\nClean up the [`Scene`](manim.scene.scene.Scene.html#manim.scene.scene.Scene \"manim.scene.scene.Scene\") after finishing the animation.\nThis includes to [`remove()`](manim.scene.scene.Scene.html#manim.scene.scene.Scene.remove \"manim.scene.scene.Scene.remove\") the Animation’s\n[`Mobject`](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\") if the animation is a remover.\nParameters:\n**scene** ([*Scene*](manim.scene.scene.Scene.html#manim.scene.scene.Scene \"manim.scene.scene.Scene\")) – The scene the animation should be cleaned up from.\nReturn type:\nNone",
  "scraped_at": "2025-06-24T17:44:11.750736",
  "content_length": 5089,
  "domain": "docs.manim.community",
  "word_count": 372,
  "inspection_status": "pending",
  "filename": "TransformMatchingAbstractBase - Manim Community v0.19.0_20250624_174411.json",
  "saved_at": "2025-06-24T17:44:11.750793"
}