{
  "doc_id": "4766eca4830bb29fa3417d9dc5ede384",
  "url": "https://docs.manim.community/en/latest/reference/manim.mobject.geometry.boolean_ops.Union.html",
  "title": "Union - Manim Community v0.19.0",
  "content": "Union[¶](#union \"Link to this heading\")\n=======================================\nQualified name: `manim.mobject.geometry.boolean\\_ops.Union`\n*class* Union(*\\*vmobjects*, *\\*\\*kwargs*)[\\[source]](../_modules/manim/mobject/geometry/boolean_ops.html#Union)[¶](#manim.mobject.geometry.boolean_ops.Union \"Link to this definition\")\nBases: `_BooleanOps`\nUnion of two or more [`VMobject`](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\") s. This returns the common region of\nthe `VMobject` s.\nParameters:\n* **vmobjects** ([*VMobject*](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\")) – The [`VMobject`](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\") s to find the union of.\n* **kwargs** (*Any*)\nRaises:\n**ValueError** – If less than 2 [`VMobject`](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\") s are passed.\nExample\nExample: UnionExample [¶](#unionexample)\n![../_images/UnionExample-1.png](../_images/UnionExample-1.png)\n```\nfrom manim import *\nclass UnionExample(Scene):\n    def construct(self):\n        sq = Square(color=RED, fill_opacity=1)\n        sq.move_to([-2, 0, 0])\n        cr = Circle(color=BLUE, fill_opacity=1)\n        cr.move_to([-1.3, 0.7, 0])\n        un = Union(sq, cr, color=GREEN, fill_opacity=1)\n        un.move_to([1.5, 0.3, 0])\n        self.add(sq, cr, un)\n```\n```\nclass UnionExample(Scene):\n    def construct(self):\n        sq = Square(color=RED, fill_opacity=1)\n        sq.move_to([-2, 0, 0])\n        cr = Circle(color=BLUE, fill_opacity=1)\n        cr.move_to([-1.3, 0.7, 0])\n        un = Union(sq, cr, color=GREEN, fill_opacity=1)\n        un.move_to([1.5, 0.3, 0])\n        self.add(sq, cr, un)\n```\nMethods\nAttributes\n| `animate` | Used to animate the application of any method of `self`. |\n| --- | --- |\n| `animation_overrides` |  |\n| `color` |  |\n| `depth` | The depth of the mobject. |\n| `fill_color` | If there are multiple colors (for gradient) this returns the first one |\n| `height` | The height of the mobject. |\n| `n_points_per_curve` |  |\n| `sheen_factor` |  |\n| `stroke_color` |  |\n| `width` | The width of the mobject. |\n\\_original\\_\\_init\\_\\_(*\\*vmobjects*, *\\*\\*kwargs*)[¶](#manim.mobject.geometry.boolean_ops.Union._original__init__ \"Link to this definition\")\nInitialize self. See help(type(self)) for accurate signature.\nParameters:\n* **vmobjects** ([*VMobject*](manim.mobject.types.vectorized_mobject.VMobject.html#manim.mobject.types.vectorized_mobject.VMobject \"manim.mobject.types.vectorized_mobject.VMobject\"))\n* **kwargs** (*Any*)\nReturn type:\nNone",
  "scraped_at": "2025-06-24T17:49:42.669713",
  "content_length": 2901,
  "domain": "docs.manim.community",
  "word_count": 246,
  "inspection_status": "pending",
  "filename": "Union - Manim Community v0.19.0_20250624_174942.json",
  "saved_at": "2025-06-24T17:49:42.669768"
}