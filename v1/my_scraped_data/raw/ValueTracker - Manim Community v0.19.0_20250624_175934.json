{
  "doc_id": "3f38dacc94f17e4568157fdd1d775653",
  "url": "https://docs.manim.community/en/latest/reference/manim.mobject.value_tracker.ValueTracker.html",
  "title": "ValueTracker - Manim Community v0.19.0",
  "content": "ValueTracker[¶](#valuetracker \"Link to this heading\")\n=====================================================\nQualified name: `manim.mobject.value\\_tracker.ValueTracker`\n*class* ValueTracker(*value\\=0*, *\\*\\*kwargs*)[\\[source]](../_modules/manim/mobject/value_tracker.html#ValueTracker)[¶](#manim.mobject.value_tracker.ValueTracker \"Link to this definition\")\nBases: [`Mobject`](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\")\nA mobject that can be used for tracking (real\\-valued) parameters.\nUseful for animating parameter changes.\nNot meant to be displayed. Instead the position encodes some\nnumber, often one which another animation or continual\\_animation\nuses for its update function, and by treating it as a mobject it can\nstill be animated and manipulated just like anything else.\nThis value changes continuously when animated using the `animate` syntax.\nExamples\nExample: ValueTrackerExample [¶](#valuetrackerexample)\n```\nfrom manim import *\nclass ValueTrackerExample(Scene):\n    def construct(self):\n        number_line = NumberLine()\n        pointer = Vector(DOWN)\n        label = MathTex(\"x\").add_updater(lambda m: m.next_to(pointer, UP))\n        tracker = ValueTracker(0)\n        pointer.add_updater(\n            lambda m: m.next_to(\n                        number_line.n2p(tracker.get_value()),\n                        UP\n                    )\n        )\n        self.add(number_line, pointer,label)\n        tracker += 1.5\n        self.wait(1)\n        tracker -= 4\n        self.wait(0.5)\n        self.play(tracker.animate.set_value(5))\n        self.wait(0.5)\n        self.play(tracker.animate.set_value(3))\n        self.play(tracker.animate.increment_value(-2))\n        self.wait(0.5)\n```\n```\nclass ValueTrackerExample(Scene):\n    def construct(self):\n        number_line = NumberLine()\n        pointer = Vector(DOWN)\n        label = MathTex(\"x\").add_updater(lambda m: m.next_to(pointer, UP))\n        tracker = ValueTracker(0)\n        pointer.add_updater(\n            lambda m: m.next_to(\n                        number_line.n2p(tracker.get_value()),\n                        UP\n                    )\n        )\n        self.add(number_line, pointer,label)\n        tracker += 1.5\n        self.wait(1)\n        tracker -= 4\n        self.wait(0.5)\n        self.play(tracker.animate.set_value(5))\n        self.wait(0.5)\n        self.play(tracker.animate.set_value(3))\n        self.play(tracker.animate.increment_value(-2))\n        self.wait(0.5)\n```\nNote\nYou can also link ValueTrackers to updaters. In this case, you have to make sure that the\nValueTracker is added to the scene by `add`\nExample: ValueTrackerExample [¶](#valuetrackerexample)\n```\nfrom manim import *\nclass ValueTrackerExample(Scene):\n    def construct(self):\n        tracker = ValueTracker(0)\n        label = Dot(radius=3).add_updater(lambda x : x.set_x(tracker.get_value()))\n        self.add(label)\n        self.add(tracker)\n        tracker.add_updater(lambda mobject, dt: mobject.increment_value(dt))\n        self.wait(2)\n```\n```\nclass ValueTrackerExample(Scene):\n    def construct(self):\n        tracker = ValueTracker(0)\n        label = Dot(radius=3).add_updater(lambda x : x.set_x(tracker.get_value()))\n        self.add(label)\n        self.add(tracker)\n        tracker.add_updater(lambda mobject, dt: mobject.increment_value(dt))\n        self.wait(2)\n```\nMethods\n| [`get_value`](#manim.mobject.value_tracker.ValueTracker.get_value \"manim.mobject.value_tracker.ValueTracker.get_value\") | Get the current value of this ValueTracker. |\n| --- | --- |\n| [`increment_value`](#manim.mobject.value_tracker.ValueTracker.increment_value \"manim.mobject.value_tracker.ValueTracker.increment_value\") | Increments (adds) a scalar value to the ValueTracker |\n| [`interpolate`](#manim.mobject.value_tracker.ValueTracker.interpolate \"manim.mobject.value_tracker.ValueTracker.interpolate\") | Turns self into an interpolation between mobject1 and mobject2\\. |\n| [`set_value`](#manim.mobject.value_tracker.ValueTracker.set_value \"manim.mobject.value_tracker.ValueTracker.set_value\") | Sets a new scalar value to the ValueTracker |\nAttributes\n| `animate` | Used to animate the application of any method of `self`. |\n| --- | --- |\n| `animation_overrides` |  |\n| `depth` | The depth of the mobject. |\n| `height` | The height of the mobject. |\n| `width` | The width of the mobject. |\n\\_original\\_\\_init\\_\\_(*value\\=0*, *\\*\\*kwargs*)[¶](#manim.mobject.value_tracker.ValueTracker._original__init__ \"Link to this definition\")\nInitialize self. See help(type(self)) for accurate signature.\nget\\_value()[\\[source]](../_modules/manim/mobject/value_tracker.html#ValueTracker.get_value)[¶](#manim.mobject.value_tracker.ValueTracker.get_value \"Link to this definition\")\nGet the current value of this ValueTracker.\nReturn type:\nfloat\nincrement\\_value(*d\\_value*)[\\[source]](../_modules/manim/mobject/value_tracker.html#ValueTracker.increment_value)[¶](#manim.mobject.value_tracker.ValueTracker.increment_value \"Link to this definition\")\nIncrements (adds) a scalar value to the ValueTracker\nParameters:\n**d\\_value** (*float*)\ninterpolate(*mobject1*, *mobject2*, *alpha*, *path\\_func\\=\\<function interpolate\\>*)[\\[source]](../_modules/manim/mobject/value_tracker.html#ValueTracker.interpolate)[¶](#manim.mobject.value_tracker.ValueTracker.interpolate \"Link to this definition\")\nTurns self into an interpolation between mobject1\nand mobject2\\.\nset\\_value(*value*)[\\[source]](../_modules/manim/mobject/value_tracker.html#ValueTracker.set_value)[¶](#manim.mobject.value_tracker.ValueTracker.set_value \"Link to this definition\")\nSets a new scalar value to the ValueTracker\nParameters:\n**value** (*float*)",
  "scraped_at": "2025-06-24T17:59:34.346624",
  "content_length": 5690,
  "domain": "docs.manim.community",
  "word_count": 445,
  "inspection_status": "pending",
  "filename": "ValueTracker - Manim Community v0.19.0_20250624_175934.json",
  "saved_at": "2025-06-24T17:59:34.346686"
}