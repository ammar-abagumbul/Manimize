{
  "doc_id": "1f1a8366e20eaa1d2c3b339f1061ce96",
  "url": "https://docs.manim.community/en/latest/reference/manim.animation.animation.html",
  "title": "animation - Manim Community v0.19.0",
  "content": "animation[¶](#module-manim.animation.animation \"Link to this heading\")\n======================================================================\nAnimate mobjects.\nClasses\n| [`Add`](manim.animation.animation.Add.html#manim.animation.animation.Add \"manim.animation.animation.Add\") | Add Mobjects to a scene, without animating them in any other way. |\n| --- | --- |\n| [`Animation`](manim.animation.animation.Animation.html#manim.animation.animation.Animation \"manim.animation.animation.Animation\") | An animation. |\n| [`Wait`](manim.animation.animation.Wait.html#manim.animation.animation.Wait \"manim.animation.animation.Wait\") | A \"no operation\" animation. |\nFunctions\noverride\\_animation(*animation\\_class*)[\\[source]](../_modules/manim/animation/animation.html#override_animation)[¶](#manim.animation.animation.override_animation \"Link to this definition\")\nDecorator used to mark methods as overrides for specific [`Animation`](manim.animation.animation.Animation.html#manim.animation.animation.Animation \"manim.animation.animation.Animation\") types.\nShould only be used to decorate methods of classes derived from [`Mobject`](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject \"manim.mobject.mobject.Mobject\").\n`Animation` overrides get inherited to subclasses of the `Mobject` who defined\nthem. They don’t override subclasses of the `Animation` they override.\nSee also\n[`add_animation_override()`](manim.mobject.mobject.Mobject.html#manim.mobject.mobject.Mobject.add_animation_override \"manim.mobject.mobject.Mobject.add_animation_override\")\nParameters:\n**animation\\_class** (*type**\\[*[*Animation*](manim.animation.animation.Animation.html#manim.animation.animation.Animation \"manim.animation.animation.Animation\")*]*) – The animation to be overridden.\nReturns:\nThe actual decorator. This marks the method as overriding an animation.\nReturn type:\nCallable\\[\\[Callable], Callable]\nExamples\nExample: OverrideAnimationExample [¶](#overrideanimationexample)\n```\nfrom manim import *\nclass MySquare(Square):\n    @override_animation(FadeIn)\n    def _fade_in_override(self, **kwargs):\n        return Create(self, **kwargs)\nclass OverrideAnimationExample(Scene):\n    def construct(self):\n        self.play(FadeIn(MySquare()))\n```\n```\nclass MySquare(Square):\n    @override_animation(FadeIn)\n    def _fade_in_override(self, **kwargs):\n        return Create(self, **kwargs)\nclass OverrideAnimationExample(Scene):\n    def construct(self):\n        self.play(FadeIn(MySquare()))\n```\nprepare\\_animation(*anim*)[\\[source]](../_modules/manim/animation/animation.html#prepare_animation)[¶](#manim.animation.animation.prepare_animation \"Link to this definition\")\nReturns either an unchanged animation, or the animation built\nfrom a passed animation factory.\nExamples\n```\n>>> from manim import Square, FadeIn\n>>> s = Square()\n>>> prepare_animation(FadeIn(s))\nFadeIn(Square)\n```\n```\n>>> prepare_animation(s.animate.scale(2).rotate(42))\n_MethodAnimation(Square)\n```\n```\n>>> prepare_animation(42)\nTraceback (most recent call last):\n...\nTypeError: Object 42 cannot be converted to an animation\n```\nParameters:\n**anim** ([*Animation*](manim.animation.animation.Animation.html#manim.animation.animation.Animation \"manim.animation.animation.Animation\") *\\|* *\\_AnimationBuilder*)\nReturn type:\n[*Animation*](manim.animation.animation.Animation.html#manim.animation.animation.Animation \"manim.animation.animation.Animation\")",
  "scraped_at": "2025-06-24T17:40:30.562884",
  "content_length": 3408,
  "domain": "docs.manim.community",
  "word_count": 238,
  "inspection_status": "pending",
  "filename": "animation - Manim Community v0.19.0_20250624_174030.json",
  "saved_at": "2025-06-24T17:40:30.562935"
}