{
  "doc_id": "736478fdd9afb0c01d9829573e879781",
  "url": "https://docs.manim.community/en/latest/reference/manim.utils.color.core.html",
  "title": "core - Manim Community v0.19.0",
  "content": "core[¶](#module-manim.utils.color.core \"Link to this heading\")\n==============================================================\nManim’s (internal) color data structure and some utilities for color conversion.\nThis module contains the implementation of [`ManimColor`](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor \"manim.utils.color.core.ManimColor\"), the data structure\ninternally used to represent colors.\nThe preferred way of using these colors is by importing their constants from Manim:\n```\n>>> from manim import RED, GREEN, BLUE\n>>> print(RED)\n#FC6255\n```\nNote that this way uses the name of the colors in UPPERCASE.\nNote\nThe colors with a `_C` suffix have an alias equal to the colorname without a\nletter. For example, `GREEN = GREEN_C`.\nCustom Color Spaces[¶](#custom-color-spaces \"Link to this heading\")\n-------------------------------------------------------------------\nHello, dear visitor. You seem to be interested in implementing a custom color class for\na color space we don’t currently support.\nThe current system is using a few indirections for ensuring a consistent behavior with\nall other color types in Manim.\nTo implement a custom color space, you must subclass [`ManimColor`](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor \"manim.utils.color.core.ManimColor\") and implement\nthree important methods:\n* [`_internal_value`](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor._internal_value \"manim.utils.color.core.ManimColor._internal_value\"): a `@property` implemented on\n[`ManimColor`](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor \"manim.utils.color.core.ManimColor\") with the goal of keeping a consistent internal representation\nwhich can be referenced by other functions in [`ManimColor`](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor \"manim.utils.color.core.ManimColor\"). This property acts\nas a proxy to whatever representation you need in your class.\n\t+ The getter should always return a NumPy array in the format `[r,g,b,a]`, in\n\taccordance with the type `ManimColorInternal`.\n\t+ The setter should always accept a value in the format `[r,g,b,a]` which can be\n\tconverted to whatever attributes you need.\n* [`_internal_space`](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor._internal_space \"manim.utils.color.core.ManimColor._internal_space\"): a read\\-only `@property` implemented on\n[`ManimColor`](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor \"manim.utils.color.core.ManimColor\") with the goal of providing a useful representation which can be\nused by operators, interpolation and color transform functions.\nThe only constraints on this value are:\n\t+ It must be a NumPy array.\n\t+ The last value must be the opacity in a range `0.0` to `1.0`.Additionally, your `__init__` must support this format as an initialization value\nwithout additional parameters to ensure correct functionality of all other methods in\n[`ManimColor`](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor \"manim.utils.color.core.ManimColor\").\n* [`_from_internal()`](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor._from_internal \"manim.utils.color.core.ManimColor._from_internal\"): a `@classmethod` which converts an\n`[r,g,b,a]` value into suitable parameters for your `__init__` method and calls\nthe `cls` parameter.\nType Aliases\n*class* ParsableManimColor[¶](#manim.utils.color.core.ParsableManimColor \"Link to this definition\")\n```\nManimColor | int | str | [RGB_Tuple_Int](manim.typing.html#manim.typing.RGB_Tuple_Int \"manim.typing.RGB_Tuple_Int\") | [RGB_Tuple_Float](manim.typing.html#manim.typing.RGB_Tuple_Float \"manim.typing.RGB_Tuple_Float\") | [RGBA_Tuple_Int](manim.typing.html#manim.typing.RGBA_Tuple_Int \"manim.typing.RGBA_Tuple_Int\") | [RGBA_Tuple_Float](manim.typing.html#manim.typing.RGBA_Tuple_Float \"manim.typing.RGBA_Tuple_Float\") | [RGB_Array_Int](manim.typing.html#manim.typing.RGB_Array_Int \"manim.typing.RGB_Array_Int\") | [RGB_Array_Float](manim.typing.html#manim.typing.RGB_Array_Float \"manim.typing.RGB_Array_Float\") | [RGBA_Array_Int](manim.typing.html#manim.typing.RGBA_Array_Int \"manim.typing.RGBA_Array_Int\") | [RGBA_Array_Float](manim.typing.html#manim.typing.RGBA_Array_Float \"manim.typing.RGBA_Array_Float\")\n```\n[`ParsableManimColor`](#manim.utils.color.core.ParsableManimColor \"manim.utils.color.core.ParsableManimColor\") represents all the types which can be parsed\nto a [`ManimColor`](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor \"manim.utils.color.core.ManimColor\") in Manim.\nTypeVar’s\n*class* ManimColorT[¶](#manim.utils.color.core.ManimColorT \"Link to this definition\")\n```\nTypeVar('ManimColorT', bound=ManimColor)\n```\nClasses\n| [`HSV`](manim.utils.color.core.HSV.html#manim.utils.color.core.HSV \"manim.utils.color.core.HSV\") | HSV Color Space |\n| --- | --- |\n| [`ManimColor`](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor \"manim.utils.color.core.ManimColor\") | Internal representation of a color. |\n| [`RGBA`](manim.utils.color.core.RGBA.html#manim.utils.color.core.RGBA \"manim.utils.color.core.RGBA\") | RGBA Color Space |\n| [`RandomColorGenerator`](manim.utils.color.core.RandomColorGenerator.html#manim.utils.color.core.RandomColorGenerator \"manim.utils.color.core.RandomColorGenerator\") |  |\nFunctions\naverage\\_color(*\\*colors*)[\\[source]](../_modules/manim/utils/color/core.html#average_color)[¶](#manim.utils.color.core.average_color \"Link to this definition\")\nDetermine the average color between the given parameters.\nNote\nThis operation does not consider the alphas (opacities) of the colors. The\ngenerated color has an alpha or opacity of 1\\.0\\.\nReturns:\nThe average color of the input.\nReturn type:\n[ManimColor](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor \"manim.utils.color.core.ManimColor\")\nParameters:\n**colors** ([*ParsableManimColor*](#manim.utils.color.core.ParsableManimColor \"manim.utils.color.core.ParsableManimColor\"))\ncolor\\_gradient(*reference\\_colors*, *length\\_of\\_output*)[\\[source]](../_modules/manim/utils/color/core.html#color_gradient)[¶](#manim.utils.color.core.color_gradient \"Link to this definition\")\nCreate a list of colors interpolated between the input array of colors with a\nspecific number of colors.\nParameters:\n* **reference\\_colors** (*Sequence**\\[**TypeAliasForwardRef**(**'\\~manim.utils.color.core.ParsableManimColor'**)**]*) – The colors to be interpolated between or spread apart.\n* **length\\_of\\_output** (*int*) – The number of colors that the output should have, ideally more than the input.\nReturns:\nA [`ManimColor`](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor \"manim.utils.color.core.ManimColor\") or a list of interpolated [`ManimColor`](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor \"manim.utils.color.core.ManimColor\")’s.\nReturn type:\nlist\\[[ManimColor](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor \"manim.utils.color.core.ManimColor\")] \\| [ManimColor](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor \"manim.utils.color.core.ManimColor\")\ncolor\\_to\\_int\\_rgb(*color*)[\\[source]](../_modules/manim/utils/color/core.html#color_to_int_rgb)[¶](#manim.utils.color.core.color_to_int_rgb \"Link to this definition\")\nHelper function for use in functional style programming. Refer to\n[`ManimColor.to_int_rgb()`](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor.to_int_rgb \"manim.utils.color.core.ManimColor.to_int_rgb\").\nParameters:\n**color** ([*ParsableManimColor*](#manim.utils.color.core.ParsableManimColor \"manim.utils.color.core.ParsableManimColor\")) – A color to convert to an RGB integer array.\nReturns:\nThe corresponding RGB integer array.\nReturn type:\n[RGB\\_Array\\_Int](manim.typing.html#manim.typing.RGB_Array_Int \"manim.typing.RGB_Array_Int\")\ncolor\\_to\\_int\\_rgba(*color*, *alpha\\=1\\.0*)[\\[source]](../_modules/manim/utils/color/core.html#color_to_int_rgba)[¶](#manim.utils.color.core.color_to_int_rgba \"Link to this definition\")\nHelper function for use in functional style programming. Refer to\n[`ManimColor.to_int_rgba_with_alpha()`](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor.to_int_rgba_with_alpha \"manim.utils.color.core.ManimColor.to_int_rgba_with_alpha\").\nParameters:\n* **color** ([*ParsableManimColor*](#manim.utils.color.core.ParsableManimColor \"manim.utils.color.core.ParsableManimColor\")) – A color to convert to an RGBA integer array.\n* **alpha** (*float*) – An alpha value between 0\\.0 and 1\\.0 to be used as opacity in the color. Default is\n1\\.0\\.\nReturns:\nThe corresponding RGBA integer array.\nReturn type:\n[RGBA\\_Array\\_Int](manim.typing.html#manim.typing.RGBA_Array_Int \"manim.typing.RGBA_Array_Int\")\ncolor\\_to\\_rgb(*color*)[\\[source]](../_modules/manim/utils/color/core.html#color_to_rgb)[¶](#manim.utils.color.core.color_to_rgb \"Link to this definition\")\nHelper function for use in functional style programming.\nRefer to [`ManimColor.to_rgb()`](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor.to_rgb \"manim.utils.color.core.ManimColor.to_rgb\").\nParameters:\n**color** ([*ParsableManimColor*](#manim.utils.color.core.ParsableManimColor \"manim.utils.color.core.ParsableManimColor\")) – A color to convert to an RGB float array.\nReturns:\nThe corresponding RGB float array.\nReturn type:\n[RGB\\_Array\\_Float](manim.typing.html#manim.typing.RGB_Array_Float \"manim.typing.RGB_Array_Float\")\ncolor\\_to\\_rgba(*color*, *alpha\\=1\\.0*)[\\[source]](../_modules/manim/utils/color/core.html#color_to_rgba)[¶](#manim.utils.color.core.color_to_rgba \"Link to this definition\")\nHelper function for use in functional style programming. Refer to\n[`ManimColor.to_rgba_with_alpha()`](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor.to_rgba_with_alpha \"manim.utils.color.core.ManimColor.to_rgba_with_alpha\").\nParameters:\n* **color** ([*ParsableManimColor*](#manim.utils.color.core.ParsableManimColor \"manim.utils.color.core.ParsableManimColor\")) – A color to convert to an RGBA float array.\n* **alpha** (*float*) – An alpha value between 0\\.0 and 1\\.0 to be used as opacity in the color. Default is\n1\\.0\\.\nReturns:\nThe corresponding RGBA float array.\nReturn type:\n[RGBA\\_Array\\_Float](manim.typing.html#manim.typing.RGBA_Array_Float \"manim.typing.RGBA_Array_Float\")\nget\\_shaded\\_rgb(*rgb*, *point*, *unit\\_normal\\_vect*, *light\\_source*)[\\[source]](../_modules/manim/utils/color/core.html#get_shaded_rgb)[¶](#manim.utils.color.core.get_shaded_rgb \"Link to this definition\")\nAdd light or shadow to the `rgb` color of some surface which is located at a\ngiven `point` in space and facing in the direction of `unit_normal_vect`,\ndepending on whether the surface is facing a `light_source` or away from it.\nParameters:\n* **rgb** ([*RGB\\_Array\\_Float*](manim.typing.html#manim.typing.RGB_Array_Float \"manim.typing.RGB_Array_Float\")) – An RGB array of floats.\n* **point** ([*Point3D*](manim.typing.html#manim.typing.Point3D \"manim.typing.Point3D\")) – The location of the colored surface.\n* **unit\\_normal\\_vect** ([*Vector3D*](manim.typing.html#manim.typing.Vector3D \"manim.typing.Vector3D\")) – The direction in which the colored surface is facing.\n* **light\\_source** ([*Point3D*](manim.typing.html#manim.typing.Point3D \"manim.typing.Point3D\")) – The location of a light source which might illuminate the surface.\nReturns:\nThe color with added light or shadow, depending on the direction of the colored\nsurface.\nReturn type:\n[RGB\\_Array\\_Float](manim.typing.html#manim.typing.RGB_Array_Float \"manim.typing.RGB_Array_Float\")\nhex\\_to\\_rgb(*hex\\_code*)[\\[source]](../_modules/manim/utils/color/core.html#hex_to_rgb)[¶](#manim.utils.color.core.hex_to_rgb \"Link to this definition\")\nHelper function for use in functional style programming. Refer to\n[`ManimColor.to_rgb()`](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor.to_rgb \"manim.utils.color.core.ManimColor.to_rgb\").\nParameters:\n**hex\\_code** (*str*) – A hex string representing a color.\nReturns:\nAn RGB array representing the color.\nReturn type:\n[RGB\\_Array\\_Float](manim.typing.html#manim.typing.RGB_Array_Float \"manim.typing.RGB_Array_Float\")\ninterpolate\\_color(*color1*, *color2*, *alpha*)[\\[source]](../_modules/manim/utils/color/core.html#interpolate_color)[¶](#manim.utils.color.core.interpolate_color \"Link to this definition\")\nStandalone function to interpolate two ManimColors and get the result. Refer to\n[`ManimColor.interpolate()`](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor.interpolate \"manim.utils.color.core.ManimColor.interpolate\").\nParameters:\n* **color1** ([*ManimColorT*](#manim.utils.color.core.ManimColorT \"manim.utils.color.core.ManimColorT\")) – The first [`ManimColor`](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor \"manim.utils.color.core.ManimColor\").\n* **color2** ([*ManimColorT*](#manim.utils.color.core.ManimColorT \"manim.utils.color.core.ManimColorT\")) – The second [`ManimColor`](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor \"manim.utils.color.core.ManimColor\").\n* **alpha** (*float*) – The alpha value determining the point of interpolation between the colors.\nReturns:\nThe interpolated ManimColor.\nReturn type:\n[ManimColor](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor \"manim.utils.color.core.ManimColor\")\ninvert\\_color(*color*)[\\[source]](../_modules/manim/utils/color/core.html#invert_color)[¶](#manim.utils.color.core.invert_color \"Link to this definition\")\nHelper function for use in functional style programming. Refer to\n[`ManimColor.invert()`](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor.invert \"manim.utils.color.core.ManimColor.invert\")\nParameters:\n**color** ([*ManimColorT*](#manim.utils.color.core.ManimColorT \"manim.utils.color.core.ManimColorT\")) – The [`ManimColor`](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor \"manim.utils.color.core.ManimColor\") to invert.\nReturns:\nThe linearly inverted [`ManimColor`](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor \"manim.utils.color.core.ManimColor\").\nReturn type:\n[ManimColor](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor \"manim.utils.color.core.ManimColor\")\nrandom\\_bright\\_color()[\\[source]](../_modules/manim/utils/color/core.html#random_bright_color)[¶](#manim.utils.color.core.random_bright_color \"Link to this definition\")\nReturn a random bright color: a random color averaged with `WHITE`.\nWarning\nThis operation is very expensive. Please keep in mind the performance loss.\nReturns:\nA random bright [`ManimColor`](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor \"manim.utils.color.core.ManimColor\").\nReturn type:\n[ManimColor](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor \"manim.utils.color.core.ManimColor\")\nrandom\\_color()[\\[source]](../_modules/manim/utils/color/core.html#random_color)[¶](#manim.utils.color.core.random_color \"Link to this definition\")\nReturn a random [`ManimColor`](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor \"manim.utils.color.core.ManimColor\").\nReturns:\nA random [`ManimColor`](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor \"manim.utils.color.core.ManimColor\").\nReturn type:\n[ManimColor](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor \"manim.utils.color.core.ManimColor\")\nrgb\\_to\\_color(*rgb*)[\\[source]](../_modules/manim/utils/color/core.html#rgb_to_color)[¶](#manim.utils.color.core.rgb_to_color \"Link to this definition\")\nHelper function for use in functional style programming. Refer to\n[`ManimColor.from_rgb()`](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor.from_rgb \"manim.utils.color.core.ManimColor.from_rgb\").\nParameters:\n**rgb** ([*RGB\\_Array\\_Float*](manim.typing.html#manim.typing.RGB_Array_Float \"manim.typing.RGB_Array_Float\") *\\|* [*RGB\\_Tuple\\_Float*](manim.typing.html#manim.typing.RGB_Tuple_Float \"manim.typing.RGB_Tuple_Float\") *\\|* [*RGB\\_Array\\_Int*](manim.typing.html#manim.typing.RGB_Array_Int \"manim.typing.RGB_Array_Int\") *\\|* [*RGB\\_Tuple\\_Int*](manim.typing.html#manim.typing.RGB_Tuple_Int \"manim.typing.RGB_Tuple_Int\")) – A 3 element iterable.\nReturns:\nA ManimColor with the corresponding value.\nReturn type:\n[ManimColor](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor \"manim.utils.color.core.ManimColor\")\nrgb\\_to\\_hex(*rgb*)[\\[source]](../_modules/manim/utils/color/core.html#rgb_to_hex)[¶](#manim.utils.color.core.rgb_to_hex \"Link to this definition\")\nHelper function for use in functional style programming. Refer to\n[`ManimColor.from_rgb()`](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor.from_rgb \"manim.utils.color.core.ManimColor.from_rgb\") and [`ManimColor.to_hex()`](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor.to_hex \"manim.utils.color.core.ManimColor.to_hex\").\nParameters:\n**rgb** ([*RGB\\_Array\\_Float*](manim.typing.html#manim.typing.RGB_Array_Float \"manim.typing.RGB_Array_Float\") *\\|* [*RGB\\_Tuple\\_Float*](manim.typing.html#manim.typing.RGB_Tuple_Float \"manim.typing.RGB_Tuple_Float\") *\\|* [*RGB\\_Array\\_Int*](manim.typing.html#manim.typing.RGB_Array_Int \"manim.typing.RGB_Array_Int\") *\\|* [*RGB\\_Tuple\\_Int*](manim.typing.html#manim.typing.RGB_Tuple_Int \"manim.typing.RGB_Tuple_Int\")) – A 3 element iterable.\nReturns:\nA hex representation of the color.\nReturn type:\nstr\nrgba\\_to\\_color(*rgba*)[\\[source]](../_modules/manim/utils/color/core.html#rgba_to_color)[¶](#manim.utils.color.core.rgba_to_color \"Link to this definition\")\nHelper function for use in functional style programming. Refer to\n[`ManimColor.from_rgba()`](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor.from_rgba \"manim.utils.color.core.ManimColor.from_rgba\").\nParameters:\n**rgba** ([*RGBA\\_Array\\_Float*](manim.typing.html#manim.typing.RGBA_Array_Float \"manim.typing.RGBA_Array_Float\") *\\|* [*RGBA\\_Tuple\\_Float*](manim.typing.html#manim.typing.RGBA_Tuple_Float \"manim.typing.RGBA_Tuple_Float\") *\\|* [*RGBA\\_Array\\_Int*](manim.typing.html#manim.typing.RGBA_Array_Int \"manim.typing.RGBA_Array_Int\") *\\|* [*RGBA\\_Tuple\\_Int*](manim.typing.html#manim.typing.RGBA_Tuple_Int \"manim.typing.RGBA_Tuple_Int\")) – A 4 element iterable.\nReturns:\nA ManimColor with the corresponding value\nReturn type:\n[ManimColor](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor \"manim.utils.color.core.ManimColor\")\nCustom Color Spaces[¶](#custom-color-spaces \"Link to this heading\")\n-------------------------------------------------------------------\nHello, dear visitor. You seem to be interested in implementing a custom color class for\na color space we don’t currently support.\nThe current system is using a few indirections for ensuring a consistent behavior with\nall other color types in Manim.\nTo implement a custom color space, you must subclass [`ManimColor`](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor \"manim.utils.color.core.ManimColor\") and implement\nthree important methods:\n* [`_internal_value`](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor._internal_value \"manim.utils.color.core.ManimColor._internal_value\"): a `@property` implemented on\n[`ManimColor`](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor \"manim.utils.color.core.ManimColor\") with the goal of keeping a consistent internal representation\nwhich can be referenced by other functions in [`ManimColor`](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor \"manim.utils.color.core.ManimColor\"). This property acts\nas a proxy to whatever representation you need in your class.\n\t+ The getter should always return a NumPy array in the format `[r,g,b,a]`, in\n\taccordance with the type `ManimColorInternal`.\n\t+ The setter should always accept a value in the format `[r,g,b,a]` which can be\n\tconverted to whatever attributes you need.\n* [`_internal_space`](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor._internal_space \"manim.utils.color.core.ManimColor._internal_space\"): a read\\-only `@property` implemented on\n[`ManimColor`](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor \"manim.utils.color.core.ManimColor\") with the goal of providing a useful representation which can be\nused by operators, interpolation and color transform functions.\nThe only constraints on this value are:\n\t+ It must be a NumPy array.\n\t+ The last value must be the opacity in a range `0.0` to `1.0`.Additionally, your `__init__` must support this format as an initialization value\nwithout additional parameters to ensure correct functionality of all other methods in\n[`ManimColor`](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor \"manim.utils.color.core.ManimColor\").\n* [`_from_internal()`](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor._from_internal \"manim.utils.color.core.ManimColor._from_internal\"): a `@classmethod` which converts an\n`[r,g,b,a]` value into suitable parameters for your `__init__` method and calls\nthe `cls` parameter.\nType Aliases\n*class* ParsableManimColor[¶](#manim.utils.color.core.ParsableManimColor \"Link to this definition\")\n```\nManimColor | int | str | [RGB_Tuple_Int](manim.typing.html#manim.typing.RGB_Tuple_Int \"manim.typing.RGB_Tuple_Int\") | [RGB_Tuple_Float](manim.typing.html#manim.typing.RGB_Tuple_Float \"manim.typing.RGB_Tuple_Float\") | [RGBA_Tuple_Int](manim.typing.html#manim.typing.RGBA_Tuple_Int \"manim.typing.RGBA_Tuple_Int\") | [RGBA_Tuple_Float](manim.typing.html#manim.typing.RGBA_Tuple_Float \"manim.typing.RGBA_Tuple_Float\") | [RGB_Array_Int](manim.typing.html#manim.typing.RGB_Array_Int \"manim.typing.RGB_Array_Int\") | [RGB_Array_Float](manim.typing.html#manim.typing.RGB_Array_Float \"manim.typing.RGB_Array_Float\") | [RGBA_Array_Int](manim.typing.html#manim.typing.RGBA_Array_Int \"manim.typing.RGBA_Array_Int\") | [RGBA_Array_Float](manim.typing.html#manim.typing.RGBA_Array_Float \"manim.typing.RGBA_Array_Float\")\n```\n[`ParsableManimColor`](#manim.utils.color.core.ParsableManimColor \"manim.utils.color.core.ParsableManimColor\") represents all the types which can be parsed\nto a [`ManimColor`](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor \"manim.utils.color.core.ManimColor\") in Manim.\n*class* ParsableManimColor[¶](#manim.utils.color.core.ParsableManimColor \"Link to this definition\")\n```\nManimColor | int | str | [RGB_Tuple_Int](manim.typing.html#manim.typing.RGB_Tuple_Int \"manim.typing.RGB_Tuple_Int\") | [RGB_Tuple_Float](manim.typing.html#manim.typing.RGB_Tuple_Float \"manim.typing.RGB_Tuple_Float\") | [RGBA_Tuple_Int](manim.typing.html#manim.typing.RGBA_Tuple_Int \"manim.typing.RGBA_Tuple_Int\") | [RGBA_Tuple_Float](manim.typing.html#manim.typing.RGBA_Tuple_Float \"manim.typing.RGBA_Tuple_Float\") | [RGB_Array_Int](manim.typing.html#manim.typing.RGB_Array_Int \"manim.typing.RGB_Array_Int\") | [RGB_Array_Float](manim.typing.html#manim.typing.RGB_Array_Float \"manim.typing.RGB_Array_Float\") | [RGBA_Array_Int](manim.typing.html#manim.typing.RGBA_Array_Int \"manim.typing.RGBA_Array_Int\") | [RGBA_Array_Float](manim.typing.html#manim.typing.RGBA_Array_Float \"manim.typing.RGBA_Array_Float\")\n```\n[`ParsableManimColor`](#manim.utils.color.core.ParsableManimColor \"manim.utils.color.core.ParsableManimColor\") represents all the types which can be parsed\nto a [`ManimColor`](manim.utils.color.core.ManimColor.html#manim.utils.color.core.ManimColor \"manim.utils.color.core.ManimColor\") in Manim.\nTypeVar’s\n*class* ManimColorT[¶](#manim.utils.color.core.ManimColorT \"Link to this definition\")\n```\nTypeVar('ManimColorT', bound=ManimColor)\n```",
  "scraped_at": "2025-06-24T18:34:56.418725",
  "content_length": 23950,
  "domain": "docs.manim.community",
  "word_count": 1610,
  "inspection_status": "pending",
  "filename": "core - Manim Community v0.19.0_20250624_183456.json",
  "saved_at": "2025-06-24T18:34:56.418822"
}